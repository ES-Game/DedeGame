# compiler: R8
# compiler_version: 3.3.83
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.0"}
# pg_map_id: 03e63c9
# pg_map_hash: SHA-256 03e63c9c05556451bbbddd84cdaf206eb44c8ed5beeaf17ee4b184974a8c2296
com.quangph.base.cache.CacheAppEvent -> com.quangph.base.cache.CacheAppEvent:
    11:13:void <init>(int) -> <init>
    17:17:int getEventType() -> getEventType
com.quangph.base.cache.CacheManager -> com.quangph.base.cache.CacheManager:
    11:13:void <init>() -> <init>
    61:66:com.quangph.base.cache.ICache createCache(java.lang.String,int,com.quangph.base.cache.ICacheFactory) -> createCache
    70:70:com.quangph.base.cache.ICache getCache(java.lang.String) -> getCache
    18:25:com.quangph.base.cache.CacheManager getInstance() -> getInstance
    57:57:boolean hasCache(java.lang.String) -> hasCache
    49:49:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    54:54:void onLowMemory() -> onLowMemory
    30:44:void onTrimMemory(int) -> onTrimMemory
com.quangph.base.cache.DefaultCacheFactory -> com.quangph.base.cache.DefaultCacheFactory:
    3:3:void <init>() -> <init>
    6:6:com.quangph.base.cache.ICache createCache(java.lang.String,int) -> createCache
com.quangph.base.cache.LruCacheImpl -> com.quangph.base.cache.LruCacheImpl:
    12:14:void <init>(int) -> <init>
    8:8:java.lang.Object get(java.lang.Object) -> get
    23:23:java.lang.Object get(java.lang.String) -> get
    64:64:java.util.Set getAllKeys() -> getAllKeys
    59:59:java.util.Collection getAllValues() -> getAllValues
    49:49:int getSize() -> getSize
    8:8:void put(java.lang.Object,java.lang.Object) -> put
    18:19:void put(java.lang.String,java.lang.Object) -> put
    8:8:void remove(java.lang.Object) -> remove
    28:29:void remove(java.lang.String) -> remove
    39:40:void removeAll() -> removeAll
    8:8:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    54:54:int sizeOf(java.lang.String,java.lang.Object) -> sizeOf
    44:45:void trimToSize(int) -> trimToSize
    8:8:void update(java.lang.Object,java.lang.Object) -> update
    33:35:void update(java.lang.String,java.lang.Object) -> update
com.quangph.base.cache.SequenceCache -> com.quangph.base.cache.SequenceCache:
    13:16:void <init>() -> <init>
    13:13:java.lang.Object get(java.lang.Object) -> get
    30:30:java.lang.Object get(java.lang.String) -> get
    82:82:java.util.Set getAllKeys() -> getAllKeys
    77:77:java.util.Collection getAllValues() -> getAllValues
    67:67:int getSize() -> getSize
    13:13:void put(java.lang.Object,java.lang.Object) -> put
    20:26:void put(java.lang.String,java.lang.Object) -> put
    13:13:void remove(java.lang.Object) -> remove
    35:37:void remove(java.lang.String) -> remove
    47:49:void removeAll() -> removeAll
    13:13:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    72:72:int sizeOf(java.lang.String,java.lang.Object) -> sizeOf
    53:63:void trimToSize(int) -> trimToSize
    13:13:void update(java.lang.Object,java.lang.Object) -> update
    41:43:void update(java.lang.String,java.lang.Object) -> update
com.quangph.base.common.ActivityNavi -> com.quangph.base.common.ActivityNavi:
    34:36:void <init>(androidx.activity.result.ActivityResultCaller,androidx.activity.result.contract.ActivityResultContract) -> <init>
    46:50:void callOnActivityResult(java.lang.Object) -> callOnActivityResult
    39:43:void launch(java.lang.Object,com.quangph.base.common.ActivityNavi$OnActivityResult) -> launch
    22:22:com.quangph.base.common.ActivityNavi registerActivityForResult(androidx.activity.result.ActivityResultCaller,androidx.activity.result.contract.ActivityResultContract) -> registerActivityForResult
    27:27:com.quangph.base.common.ActivityNavi registerActivityForResult(androidx.activity.result.ActivityResultCaller) -> registerActivityForResult
com.quangph.base.common.BaseActivity -> com.quangph.base.common.BaseActivity:
    43:56:void <init>() -> <init>
    214:214:boolean acceptToDismissKeyboard(android.graphics.Rect,float,float) -> acceptToDismissKeyboard
    226:226:boolean checkOrientation() -> checkOrientation
    130:133:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    166:166:java.lang.String[] emailForErrorReport() -> emailForErrorReport
    60:61:void enableDebugMode(boolean) -> enableDebugMode
    201:201:android.os.Handler getHandler() -> getHandler
    170:171:java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler() -> getUncaughtExceptionHandler
    159:159:void handle(com.quangph.base.common.bus.IAppEvent) -> handle
    238:252:void hideKeyBoard() -> hideKeyBoard
    265:265:boolean isKeyboardShown() -> isKeyboardShown
    269:274:void launch(android.content.Intent,com.quangph.base.common.ActivityNavi$OnActivityResult) -> launch
    285:288:void logger(java.lang.String) -> logger
    162:163:void onBindView() -> onBindView
    65:95:void onCreate(android.os.Bundle) -> onCreate
    138:141:void onDestroy() -> onDestroy
    178:178:int onGetLayoutId() -> onGetLayoutId
    192:192:void onHideKeyboard() -> onHideKeyboard
    182:182:boolean onInit() -> onInit
    190:190:void onPostInit(android.os.Bundle) -> onPostInit
    151:154:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    145:147:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    194:194:void onShowKeyboard() -> onShowKeyboard
    186:187:void onViewDidCreated(android.os.Bundle) -> onViewDidCreated
    175:175:void onViewWillCreate(android.os.Bundle) -> onViewWillCreate
    277:278:void permission(com.quangph.base.common.ActivityNavi$OnActivityResult,java.lang.String) -> permission
    281:282:void permissions(com.quangph.base.common.ActivityNavi$OnActivityResult,java.lang.String[]) -> permissions
    291:295:void preventFocusOnEditText() -> preventFocusOnEditText
    197:198:void setKeyboardAction(com.quangph.base.common.KeyboardTouchManager$KEYBOARD_CONFIG) -> setKeyboardAction
    255:262:void showKeyBoard(android.view.View) -> showKeyBoard
    230:231:void showToast(int) -> showToast
    234:235:void showToast(java.lang.String) -> showToast
com.quangph.base.common.BaseActivity$1 -> com.quangph.base.common.BaseActivity$1:
    80:80:void <init>(com.quangph.base.common.BaseActivity,android.os.Bundle) -> <init>
    84:88:void run() -> run
com.quangph.base.common.BaseActivity$UnCaughtException -> com.quangph.base.common.BaseActivity$UnCaughtException:
    304:307:void <init>(android.content.Context,java.lang.String[]) -> <init>
    327:357:void addInformation(java.lang.StringBuilder) -> addInformation
    315:317:long getAvailableInternalMemorySize(android.os.StatFs) -> getAvailableInternalMemorySize
    310:311:android.os.StatFs getStatFs() -> getStatFs
    321:323:long getTotalInternalMemorySize(android.os.StatFs) -> getTotalInternalMemorySize
    389:424:void sendErrorMail(java.lang.StringBuilder,java.lang.String[]) -> sendErrorMail
    362:386:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.quangph.base.common.BaseActivity$UnCaughtException$1 -> com.quangph.base.common.BaseActivity$UnCaughtException$1:
    390:390:void <init>(com.quangph.base.common.BaseActivity$UnCaughtException,androidx.appcompat.app.AlertDialog$Builder,java.lang.StringBuilder) -> <init>
    393:422:void run() -> run
com.quangph.base.common.BaseActivity$UnCaughtException$1$1 -> com.quangph.base.common.BaseActivity$UnCaughtException$1$1:
    396:396:void <init>(com.quangph.base.common.BaseActivity$UnCaughtException$1) -> <init>
    399:400:void onClick(android.content.DialogInterface,int) -> onClick
com.quangph.base.common.BaseActivity$UnCaughtException$1$2 -> com.quangph.base.common.BaseActivity$UnCaughtException$1$2:
    402:402:void <init>(com.quangph.base.common.BaseActivity$UnCaughtException$1) -> <init>
    405:417:void onClick(android.content.DialogInterface,int) -> onClick
com.quangph.base.common.BaseApplication -> com.quangph.base.common.BaseApplication:
    13:15:void <init>() -> <init>
    18:18:android.app.Application getApplication() -> getApplication
    22:22:android.content.Context getContext() -> getContext
    34:34:boolean gotoIntoBackground() -> gotoIntoBackground
    27:31:void onCreate() -> onCreate
com.quangph.base.common.BaseApplication$BackgroundControlLifecycleHandler -> com.quangph.base.common.BaseApplication$BackgroundControlLifecycleHandler:
    37:37:void <init>(com.quangph.base.common.BaseApplication) -> <init>
    43:43:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    47:47:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    56:56:void onActivityPaused(android.app.Activity) -> onActivityPaused
    51:52:void onActivityResumed(android.app.Activity) -> onActivityResumed
    60:60:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    64:65:void onActivityStarted(android.app.Activity) -> onActivityStarted
    69:71:void onActivityStopped(android.app.Activity) -> onActivityStopped
com.quangph.base.common.BaseFragment -> com.quangph.base.common.BaseFragment:
    28:78:void <init>() -> <init>
    124:124:java.lang.String getName() -> getName
    219:219:void handle(com.quangph.base.common.bus.IAppEvent) -> handle
    283:283:boolean isAvailable() -> isAvailable
    279:279:boolean isUserFirstSight() -> isUserFirstSight
    222:227:void launch(android.content.Intent,com.quangph.base.common.ActivityNavi$OnActivityResult) -> launch
    129:137:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    120:121:void onBindView(android.view.View) -> onBindView
    83:85:void onCreate(android.os.Bundle) -> onCreate
    91:92:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    209:214:void onDestroyView() -> onDestroyView
    116:116:int onGetLayoutId() -> onGetLayoutId
    173:185:void onHiddenChanged(boolean) -> onHiddenChanged
    189:194:void onPause() -> onPause
    198:205:void onResume() -> onResume
    111:113:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    274:274:void onShow(boolean,int) -> onShow
    272:272:void onUserFirstSight() -> onUserFirstSight
    269:269:void onUserVisibleChanged(boolean) -> onUserVisibleChanged
    97:107:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    277:277:void onViewDidCreated(android.view.View,android.os.Bundle) -> onViewDidCreated
    276:276:void onViewWillCreate() -> onViewWillCreate
    230:231:void permission(com.quangph.base.common.ActivityNavi$OnActivityResult,java.lang.String) -> permission
    234:235:void permissions(com.quangph.base.common.ActivityNavi$OnActivityResult,java.lang.String[]) -> permissions
    141:169:void setUserVisibleHint(boolean) -> setUserVisibleHint
    238:243:void userFirstSight() -> userFirstSight
    246:265:void userVisibleChanged(boolean) -> userVisibleChanged
com.quangph.base.common.BaseFragment$1 -> com.quangph.base.common.BaseFragment$1:
    49:49:void <init>(com.quangph.base.common.BaseFragment) -> <init>
    52:68:void run() -> run
com.quangph.base.common.BaseMultiDexApplication -> com.quangph.base.common.BaseMultiDexApplication:
    15:17:void <init>() -> <init>
    20:20:android.app.Application getApplication() -> getApplication
    24:24:android.content.Context getContext() -> getContext
    36:36:boolean gotoIntoBackgroud() -> gotoIntoBackgroud
    29:33:void onCreate() -> onCreate
com.quangph.base.common.BaseMultiDexApplication$BackgroundControllLifecycleHandler -> com.quangph.base.common.BaseMultiDexApplication$BackgroundControllLifecycleHandler:
    39:39:void <init>(com.quangph.base.common.BaseMultiDexApplication) -> <init>
    45:45:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    49:49:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    58:58:void onActivityPaused(android.app.Activity) -> onActivityPaused
    53:54:void onActivityResumed(android.app.Activity) -> onActivityResumed
    62:62:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    66:67:void onActivityStarted(android.app.Activity) -> onActivityStarted
    71:73:void onActivityStopped(android.app.Activity) -> onActivityStopped
com.quangph.base.common.KeyboardTouchManager -> com.quangph.base.common.KeyboardTouchManager:
    22:31:void <init>(com.quangph.base.common.BaseActivity) -> <init>
    107:110:boolean consumeDownEvent(android.view.MotionEvent) -> consumeDownEvent
    34:60:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    83:103:boolean hideKeyBoardWhenTouchOutside(android.view.MotionEvent) -> hideKeyBoardWhenTouchOutside
    68:68:boolean hideKeyboardWhenScrollingOutside() -> hideKeyboardWhenScrollingOutside
    72:74:boolean isScrollGesture(android.view.MotionEvent,float,float) -> isScrollGesture
    64:65:void setAction(com.quangph.base.common.KeyboardTouchManager$KEYBOARD_CONFIG) -> setAction
com.quangph.base.common.KeyboardTouchManager$KEYBOARD_CONFIG -> com.quangph.base.common.KeyboardTouchManager$KEYBOARD_CONFIG:
    14:14:com.quangph.base.common.KeyboardTouchManager$KEYBOARD_CONFIG[] $values() -> $values
    14:15:void <clinit>() -> <clinit>
    14:14:void <init>(java.lang.String,int) -> <init>
    14:14:com.quangph.base.common.KeyboardTouchManager$KEYBOARD_CONFIG valueOf(java.lang.String) -> valueOf
    14:14:com.quangph.base.common.KeyboardTouchManager$KEYBOARD_CONFIG[] values() -> values
com.quangph.base.common.ScreenOrientationHelper -> com.quangph.base.common.ScreenOrientationHelper:
    16:18:void <init>(android.app.Activity) -> <init>
    37:44:void checkOrientationChanged() -> checkOrientationChanged
    47:47:boolean isOrientationChanged() -> isOrientationChanged
    21:24:void onCreate(android.os.Bundle) -> onCreate
    31:34:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    27:28:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.quangph.base.common.bus.AppBus -> com.quangph.base.common.bus.AppBus:
    17:21:void <init>() -> <init>
    24:32:com.quangph.base.common.bus.AppBus getInstance() -> getInstance
    17:17:void handleEvent(java.lang.Object) -> handleEvent
    37:38:void handleEvent(com.quangph.base.common.bus.IAppEvent) -> handleEvent
    41:42:void register(com.quangph.base.common.bus.IAppEventHandler) -> register
    45:46:void unregister(com.quangph.base.common.bus.IAppEventHandler) -> unregister
com.quangph.base.common.bus.AppBus$EventHandler -> com.quangph.base.common.bus.AppBus$EventHandler:
    54:56:void <init>(com.quangph.base.common.bus.AppBus) -> <init>
    60:74:void handleMessage(android.os.Message) -> handleMessage
com.quangph.base.common.converter.ArrayConverter -> com.quangph.base.common.converter.ArrayConverter:
    13:15:void <init>(com.quangph.base.common.converter.IConverter) -> <init>
    9:9:java.lang.Object convert(java.lang.Object) -> convert
    19:25:java.util.List convert(java.lang.Object[]) -> convert
com.quangph.base.common.converter.ListConverter -> com.quangph.base.common.converter.ListConverter:
    15:17:void <init>(com.quangph.base.common.converter.IConverter) -> <init>
    11:11:java.lang.Object convert(java.lang.Object) -> convert
    21:25:java.util.List convert(java.util.List) -> convert
com.quangph.base.common.converter.Mapper -> com.quangph.base.common.converter.Mapper:
# {"id":"sourceFile","fileName":"Mapper.kt"}
    18:18:kotlin.reflect.KClass access$getSrcClass$p(com.quangph.base.common.converter.Mapper) -> <init>
    18:18:void <init>(kotlin.reflect.KClass,kotlin.reflect.KClass):18 -> <init>
    30:30:java.util.Map getSrcPropertyNames() -> <init>
    30:30:void <init>(kotlin.reflect.KClass,kotlin.reflect.KClass):30 -> <init>
    37:37:java.util.Map getPropertyMappers() -> <init>
    37:37:void <init>(kotlin.reflect.KClass,kotlin.reflect.KClass):37 -> <init>
    38:38:java.util.Map getFieldMappers() -> <init>
    38:38:void <init>(kotlin.reflect.KClass,kotlin.reflect.KClass):38 -> <init>
    39:39:void <init>(kotlin.reflect.KClass,kotlin.reflect.KClass) -> <init>
    18:18:kotlin.reflect.KClass access$getSrcClass$p(com.quangph.base.common.converter.Mapper) -> <init>
    18:18:void <init>(kotlin.reflect.KClass,kotlin.reflect.KClass):18 -> <init>
    18:18:kotlin.reflect.KClass access$getSrcClass$p(com.quangph.base.common.converter.Mapper) -> access$getSrcClass$p
    70:71:void addNameMapper(kotlin.reflect.KProperty,kotlin.jvm.functions.Function0) -> addNameMapper
    90:106:java.lang.Object copyValue(kotlin.reflect.KProperty,java.lang.Object) -> copyValue
    36:36:void setAfterConvertCallback(kotlin.jvm.functions.Function2) -> getAfterConvertCallback
    36:36:kotlin.jvm.functions.Function2 getAfterConvertCallback():36 -> getAfterConvertCallback
    38:38:java.util.Map getFieldMappers() -> getFieldMappers
    37:37:java.util.Map getPropertyMappers() -> getPropertyMappers
    30:30:java.util.Map getSrcPropertyNames() -> getSrcPropertyNames
    42:134:java.lang.Object invoke(java.lang.Object) -> invoke
    58:136:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    74:79:void register(kotlin.reflect.KProperty,kotlin.jvm.functions.Function1) -> register
    36:36:void setAfterConvertCallback(kotlin.jvm.functions.Function2) -> setAfterConvertCallback
com.quangph.base.common.converter.Mapper$Companion -> com.quangph.base.common.converter.Mapper$Companion:
# {"id":"sourceFile","fileName":"Mapper.kt"}
    20:20:void <init>() -> <init>
    25:27:kotlin.jvm.functions.Function1 listMapper(com.quangph.base.common.converter.Mapper) -> listMapper
    21:23:kotlin.jvm.functions.Function1 setMapper(com.quangph.base.common.converter.Mapper) -> setMapper
com.quangph.base.common.converter.Mapper$Companion$listMapper$1 -> com.quangph.base.common.converter.Mapper$Companion$listMapper$1:
# {"id":"sourceFile","fileName":"Mapper.kt"}
    25:25:java.lang.Object invoke(java.lang.Object) -> <init>
    25:25:void <init>(com.quangph.base.common.converter.Mapper):25 -> <init>
    25:25:java.lang.Object invoke(java.lang.Object) -> invoke
    26:136:java.util.List invoke(java.util.List) -> invoke
com.quangph.base.common.converter.Mapper$Companion$setMapper$1 -> com.quangph.base.common.converter.Mapper$Companion$setMapper$1:
# {"id":"sourceFile","fileName":"Mapper.kt"}
    21:21:java.lang.Object invoke(java.lang.Object) -> <init>
    21:21:void <init>(com.quangph.base.common.converter.Mapper):21 -> <init>
    21:21:java.lang.Object invoke(java.lang.Object) -> invoke
    22:136:java.util.Set invoke(java.util.Set) -> invoke
com.quangph.base.common.converter.Mapper$register$1 -> com.quangph.base.common.converter.Mapper$register$1:
# {"id":"sourceFile","fileName":"Mapper.kt"}
    74:74:void <init>(kotlin.jvm.functions.Function1) -> <init>
    76:76:java.lang.Object invoke(java.lang.Object) -> invoke
com.quangph.base.common.converter.Mapper$srcPropertyNames$2 -> com.quangph.base.common.converter.Mapper$srcPropertyNames$2:
# {"id":"sourceFile","fileName":"Mapper.kt"}
    30:30:java.lang.Object invoke() -> invoke
    31:138:java.util.Map invoke() -> invoke
com.quangph.base.common.converter.MapperKt -> com.quangph.base.common.converter.MapperKt:
# {"id":"sourceFile","fileName":"Mapper.kt"}
com.quangph.base.dispatcher.BaseDispatcher -> com.quangph.base.dispatcher.BaseDispatcher:
    11:28:void <init>() -> <init>
    61:64:void dispatch(java.lang.Object) -> dispatch
    68:71:void dispatchAtFrontOfQueue(java.lang.Object) -> dispatchAtFrontOfQueue
    75:78:void dispatchToEndOfQueue(java.lang.Object) -> dispatchToEndOfQueue
    81:99:void nextEvent(java.util.Deque) -> nextEvent
    51:55:int size() -> size
    39:42:void start() -> start
    46:47:void stop() -> stop
com.quangph.base.dispatcher.BaseDispatcher$1 -> com.quangph.base.dispatcher.BaseDispatcher$1:
    13:13:void <init>(com.quangph.base.dispatcher.BaseDispatcher) -> <init>
    13:13:java.lang.Object initialValue() -> initialValue
    16:16:java.util.Deque initialValue() -> initialValue
com.quangph.base.dispatcher.BaseDispatcher$2 -> com.quangph.base.dispatcher.BaseDispatcher$2:
    21:21:void <init>(com.quangph.base.dispatcher.BaseDispatcher) -> <init>
    21:21:java.lang.Object initialValue() -> initialValue
    24:24:java.lang.Boolean initialValue() -> initialValue
com.quangph.base.dispatcher.BaseDispatcher$3 -> com.quangph.base.dispatcher.BaseDispatcher$3:
    28:28:void <init>(com.quangph.base.dispatcher.BaseDispatcher) -> <init>
    28:28:java.lang.Object initialValue() -> initialValue
    31:31:java.lang.Boolean initialValue() -> initialValue
com.quangph.base.lifecycle.IDestroy -> com.quangph.base.lifecycle.IDestroy:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.ILifeCycle -> com.quangph.base.lifecycle.ILifeCycle:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.LCDelegate -> com.quangph.base.lifecycle.LCDelegate:
# {"id":"sourceFile","fileName":"LCDelegate.kt"}
    11:12:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    20:29:void addComponent(java.lang.Object,com.quangph.base.lifecycle.ILifeCycle) -> addComponent
    62:75:boolean checkAndCall(java.lang.Class,com.quangph.base.lifecycle.ILifeCycle,java.lang.Object[]) -> checkAndCall
    41:43:void clearComponent(java.lang.Object) -> clearComponent
    79:91:java.lang.reflect.Method getLifecycleMethod(java.lang.Class) -> getLifecycleMethod
    49:57:boolean invoke(java.lang.Object,java.lang.Class,java.lang.Object[]) -> invoke
    32:34:void removeComponent(java.lang.Object,com.quangph.base.lifecycle.ILifeCycle) -> removeComponent
    37:38:void removeComponent(java.lang.Object) -> removeComponent
com.quangph.base.lifecycle.OnActivityCreated -> com.quangph.base.lifecycle.OnActivityCreated:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnActivityResult -> com.quangph.base.lifecycle.OnActivityResult:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnAttach -> com.quangph.base.lifecycle.OnAttach:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnBackPressed -> com.quangph.base.lifecycle.OnBackPressed:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnConfigurationChanged -> com.quangph.base.lifecycle.OnConfigurationChanged:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnDestroy -> com.quangph.base.lifecycle.OnDestroy:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnDestroyView -> com.quangph.base.lifecycle.OnDestroyView:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnDetach -> com.quangph.base.lifecycle.OnDetach:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnHiddenChanged -> com.quangph.base.lifecycle.OnHiddenChanged:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnNewIntent -> com.quangph.base.lifecycle.OnNewIntent:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnPause -> com.quangph.base.lifecycle.OnPause:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnPostCreate -> com.quangph.base.lifecycle.OnPostCreate:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnRequestPermissionsResult -> com.quangph.base.lifecycle.OnRequestPermissionsResult:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnRestart -> com.quangph.base.lifecycle.OnRestart:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnRestoreInstanceState -> com.quangph.base.lifecycle.OnRestoreInstanceState:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnResume -> com.quangph.base.lifecycle.OnResume:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnSaveInstanceState -> com.quangph.base.lifecycle.OnSaveInstanceState:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnStart -> com.quangph.base.lifecycle.OnStart:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnStop -> com.quangph.base.lifecycle.OnStop:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnViewCreated -> com.quangph.base.lifecycle.OnViewCreated:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.lifecycle.OnVisible -> com.quangph.base.lifecycle.OnVisible:
# {"id":"sourceFile","fileName":"ILifeCycle.kt"}
com.quangph.base.mvp.action.ACTION_POST_POLICY -> com.quangph.base.mvp.action.ACTION_POST_POLICY:
    3:3:com.quangph.base.mvp.action.ACTION_POST_POLICY[] $values() -> $values
    3:6:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.quangph.base.mvp.action.ACTION_POST_POLICY valueOf(java.lang.String) -> valueOf
    3:3:com.quangph.base.mvp.action.ACTION_POST_POLICY[] values() -> values
com.quangph.base.mvp.action.Action -> com.quangph.base.mvp.action.Action:
    17:31:void <init>() -> <init>
    145:147:com.quangph.base.mvp.action.Action$Builder backgroundJob(com.quangph.base.mvp.action.actionjob.ActionJob) -> backgroundJob
    151:153:com.quangph.base.mvp.action.Action$Builder backgroundJobBuilder() -> backgroundJobBuilder
    95:96:void canExecute(boolean) -> canExecute
    162:162:java.lang.String createID() -> createID
    173:173:com.quangph.base.mvp.action.uid.IIDGenerator createIDGenerator() -> createIDGenerator
    46:53:java.lang.Object execute() -> execute
    119:119:java.lang.Object getCurrentEvent() -> getCurrentEvent
    103:103:com.quangph.base.mvp.action.ActionException getError() -> getError
    115:115:java.lang.String getID() -> getID
    166:169:com.quangph.base.mvp.action.uid.IIDGenerator getIDGenerator() -> getIDGenerator
    111:111:com.quangph.base.mvp.action.Action$RequestValue getRequestVal() -> getRequestVal
    107:107:java.lang.Object getResponseVal() -> getResponseVal
    99:99:int getStatus() -> getStatus
    127:127:boolean isError() -> isError
    135:135:boolean isFinished() -> isFinished
    131:131:boolean isInterrupt() -> isInterrupt
    123:123:boolean isSuccessful() -> isSuccessful
    157:157:void onStart(com.quangph.base.mvp.action.Action$RequestValue) -> onStart
    158:158:void onStop() -> onStop
    139:142:void publishEvent(java.lang.Object) -> publishEvent
    83:84:void setCurrentEvent(java.lang.Object) -> setCurrentEvent
    75:76:void setError(com.quangph.base.mvp.action.ActionException) -> setError
    91:92:void setEventPublisher(com.quangph.base.mvp.action.Action$IOnEventPublisher) -> setEventPublisher
    71:72:void setRequestValue(com.quangph.base.mvp.action.Action$RequestValue) -> setRequestValue
    79:80:void setResponse(java.lang.Object) -> setResponse
    87:88:void setStatus(int) -> setStatus
    39:43:void start() -> start
    58:68:void stop() -> stop
com.quangph.base.mvp.action.Action$Builder -> com.quangph.base.mvp.action.Action$Builder:
    233:237:void <init>() -> <init>
    240:241:com.quangph.base.mvp.action.Action$Builder addJob(com.quangph.base.mvp.action.actionjob.ActionJob) -> addJob
    245:246:com.quangph.base.mvp.action.Action$Builder exceptionHandler(com.quangph.base.mvp.action.actionjob.ActionWorker$IOnException) -> exceptionHandler
    250:257:void execute(long) -> execute
com.quangph.base.mvp.action.Action$SimpleActionCallback -> com.quangph.base.mvp.action.Action$SimpleActionCallback:
    192:192:void <init>() -> <init>
    217:217:void onError(com.quangph.base.mvp.action.ActionException) -> onError
    222:222:void onInterrupt() -> onInterrupt
    207:207:void onPublishProgress(java.lang.Object) -> onPublishProgress
    197:197:void onStart() -> onStart
    202:202:void onStartError(com.quangph.base.mvp.action.ActionException) -> onStartError
    212:212:void onSuccess(java.lang.Object) -> onSuccess
com.quangph.base.mvp.action.Action$VoidRequest -> com.quangph.base.mvp.action.Action$VoidRequest:
    181:181:void <init>() -> <init>
com.quangph.base.mvp.action.ActionCallbackInfo -> com.quangph.base.mvp.action.ActionCallbackInfo:
    10:10:void <init>() -> <init>
    16:16:boolean isSameActionManager(com.quangph.base.mvp.action.IActionManager) -> isSameActionManager
com.quangph.base.mvp.action.ActionException -> com.quangph.base.mvp.action.ActionException:
    8:9:void <init>() -> <init>
    12:13:void <init>(java.lang.String) -> <init>
    16:17:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    20:21:void <init>(java.lang.Throwable) -> <init>
com.quangph.base.mvp.action.ActionExtensionKt -> com.quangph.base.mvp.action.ActionExtensionKt:
# {"id":"sourceFile","fileName":"ActionExtension.kt"}
    13:13:com.quangph.base.mvp.action.Action$Builder addJob(com.quangph.base.mvp.action.Action,kotlin.jvm.functions.Function0) -> addJob
    21:21:com.quangph.base.mvp.action.Action$Builder addJob(com.quangph.base.mvp.action.Action$Builder,kotlin.jvm.functions.Function0) -> addJob
com.quangph.base.mvp.action.ActionExtensionKt$addJob$1 -> com.quangph.base.mvp.action.ActionExtensionKt$addJob$1:
# {"id":"sourceFile","fileName":"ActionExtension.kt"}
    13:13:void <init>(kotlin.jvm.functions.Function0) -> <init>
    13:13:java.lang.Object submitJob() -> submitJob
    15:16:void submitJob() -> submitJob
com.quangph.base.mvp.action.ActionExtensionKt$addJob$2 -> com.quangph.base.mvp.action.ActionExtensionKt$addJob$2:
# {"id":"sourceFile","fileName":"ActionExtension.kt"}
    21:21:void <init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:java.lang.Object submitJob() -> submitJob
    23:24:void submitJob() -> submitJob
com.quangph.base.mvp.action.ActionManager -> com.quangph.base.mvp.action.ActionManager:
    25:36:void <init>(java.lang.String) -> <init>
    246:247:void addCallbackToCached(java.lang.String,com.quangph.base.mvp.action.Action$ActionCallback) -> addCallbackToCached
    179:179:com.quangph.base.mvp.action.IBuilder builder() -> builder
    222:224:com.quangph.base.mvp.action.queue.ActionEnqueue createQueue() -> createQueue
    40:43:boolean equals(java.lang.Object) -> equals
    137:137:com.quangph.base.mvp.action.IBuilder executeAction(com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$ActionCallback) -> executeAction
    143:143:com.quangph.base.mvp.action.IBuilder executeAction(com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$RequestValue,com.quangph.base.mvp.action.Action$ActionCallback) -> executeAction
    153:155:com.quangph.base.mvp.action.IBuilder executeAction(com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$RequestValue,com.quangph.base.mvp.action.Action$ActionCallback,com.quangph.base.mvp.action.scheduler.IActionScheduler) -> executeAction
    163:169:void executeActionOnPost(com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$RequestValue,com.quangph.base.mvp.action.Action$ActionCallback,com.quangph.base.mvp.action.scheduler.IActionScheduler) -> executeActionOnPost
    31:31:com.quangph.base.mvp.action.ActionManager get(java.lang.String) -> get
    48:48:java.lang.String getID() -> getID
    53:53:int getStatus() -> getStatus
    228:232:com.quangph.base.mvp.action.ActionCallbackInfo makeCallbackInfo(com.quangph.base.mvp.action.Action$ActionCallback) -> makeCallbackInfo
    58:62:void pause() -> pause
    188:194:void post(com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$RequestValue,com.quangph.base.mvp.action.Action$ActionCallback,long,com.quangph.base.mvp.action.ACTION_POST_POLICY) -> post
    208:215:void registerCallback(java.lang.String,com.quangph.base.mvp.action.Action$ActionCallback) -> registerCallback
    198:203:void registerPostCallback(java.lang.String,com.quangph.base.mvp.action.Action$ActionCallback) -> registerPostCallback
    81:94:void release() -> release
    98:111:void releaseAndStopAllAction() -> releaseAndStopAllAction
    66:74:void resume() -> resume
    218:219:void setStatus(int) -> setStatus
    115:118:void stopAction(com.quangph.base.mvp.action.Action) -> stopAction
    122:125:void stopAction(java.lang.String) -> stopAction
    129:132:void stopAction(java.lang.Class) -> stopAction
com.quangph.base.mvp.action.ActionManager$1 -> com.quangph.base.mvp.action.ActionManager$1:
    163:163:void <init>(com.quangph.base.mvp.action.ActionManager,com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$RequestValue,com.quangph.base.mvp.action.Action$ActionCallback,com.quangph.base.mvp.action.scheduler.IActionScheduler) -> <init>
    166:167:void run() -> run
com.quangph.base.mvp.action.ActionManager$Builder -> com.quangph.base.mvp.action.ActionManager$Builder:
    260:265:void <init>(com.quangph.base.mvp.action.ActionManager) -> <init>
    392:394:boolean actionInQueue(java.lang.String) -> actionInQueue
    309:314:com.quangph.base.mvp.action.IBuilder add(com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$RequestValue,com.quangph.base.mvp.action.Action$ActionCallback,com.quangph.base.mvp.action.scheduler.IActionScheduler) -> add
    256:256:com.quangph.base.mvp.action.IBuilder and(com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$RequestValue,com.quangph.base.mvp.action.Action$ActionCallback,com.quangph.base.mvp.action.scheduler.IActionScheduler) -> and
    333:337:com.quangph.base.mvp.action.ActionManager$Builder and(com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$RequestValue,com.quangph.base.mvp.action.Action$ActionCallback,com.quangph.base.mvp.action.scheduler.IActionScheduler) -> and
    358:377:boolean buildQueue(com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$RequestValue,com.quangph.base.mvp.action.Action$ActionCallback,com.quangph.base.mvp.action.scheduler.IActionScheduler) -> buildQueue
    345:351:com.quangph.base.mvp.action.ActionManager$Builder create(com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$RequestValue,com.quangph.base.mvp.action.Action$ActionCallback,com.quangph.base.mvp.action.scheduler.IActionScheduler) -> create
    383:389:void dispatch() -> dispatch
    280:290:com.quangph.base.mvp.action.IBuilder onCompound(com.quangph.base.mvp.action.CompoundCallback) -> onCompound
    256:256:com.quangph.base.mvp.action.IBuilder run() -> run
    323:324:com.quangph.base.mvp.action.ActionManager$Builder run() -> run
    269:274:com.quangph.base.mvp.action.IBuilder setRunMode(com.quangph.base.mvp.action.RUN_MODE) -> setRunMode
com.quangph.base.mvp.action.ActionMonitor -> com.quangph.base.mvp.action.ActionMonitor:
    25:30:void <init>() -> <init>
    120:143:void addActionCallbackInfo(com.quangph.base.mvp.action.IActionManager,java.lang.String,com.quangph.base.mvp.action.ActionCallbackInfo) -> addActionCallbackInfo
    156:157:void addActionQueue(com.quangph.base.mvp.action.queue.ActionEnqueue) -> addActionQueue
    160:160:com.quangph.base.mvp.action.queue.ActionEnqueue createEnqueue() -> createEnqueue
    57:58:void dispatch(com.quangph.base.mvp.action.queue.ActionEnqueue) -> dispatch
    183:191:void enqueueAction(java.lang.String,com.quangph.base.mvp.action.Action,java.util.List,com.quangph.base.mvp.action.scheduler.IActionScheduler) -> enqueueAction
    110:111:void executeActionOnPost(java.lang.Runnable) -> executeActionOnPost
    194:194:java.util.List findCallbacksRelatedAction(java.lang.String) -> findCallbacksRelatedAction
    211:211:java.util.List findRegisteredCallback(java.lang.String) -> findRegisteredCallback
    146:152:com.quangph.base.mvp.action.ActionQueueInfo findRunningAction(java.lang.String) -> findRunningAction
    37:37:com.quangph.base.mvp.action.ActionMonitor getInstance() -> getInstance
    45:46:void notifyErrorAction(com.quangph.base.mvp.action.Action) -> notifyErrorAction
    53:54:void notifyProgress(com.quangph.base.mvp.action.Action) -> notifyProgress
    41:42:void notifyStartAction(com.quangph.base.mvp.action.Action) -> notifyStartAction
    49:50:void notifySuccessAction(com.quangph.base.mvp.action.Action) -> notifySuccessAction
    215:218:com.quangph.base.mvp.action.actionhandler.IActionHandler$ActionDispatcherInfo obtainActionDispatcherInfo(int,java.lang.Object) -> obtainActionDispatcherInfo
    94:95:void releaseAllActionFromActionManager(com.quangph.base.mvp.action.IActionManager) -> releaseAllActionFromActionManager
    65:80:void removeAllRegisteredCallbacksFromActionManager(com.quangph.base.mvp.action.IActionManager) -> removeAllRegisteredCallbacksFromActionManager
    83:91:void removeCallbackFromActionManager(com.quangph.base.mvp.action.IActionManager) -> removeCallbackFromActionManager
    61:62:void resume(com.quangph.base.mvp.action.IActionManager) -> resume
    98:99:void stopAction(com.quangph.base.mvp.action.Action) -> stopAction
    102:103:void stopAction(java.lang.String) -> stopAction
    106:107:void stopAction(java.lang.Class) -> stopAction
com.quangph.base.mvp.action.ActionMonitor$InstanceHolder -> com.quangph.base.mvp.action.ActionMonitor$InstanceHolder:
    33:33:void <clinit>() -> <clinit>
com.quangph.base.mvp.action.ActionQueueInfo -> com.quangph.base.mvp.action.ActionQueueInfo:
    12:15:void <init>() -> <init>
    29:36:boolean hasCallbackRelatedToActionManager(com.quangph.base.mvp.action.IActionManager) -> hasCallbackRelatedToActionManager
    50:50:boolean isOwner(com.quangph.base.mvp.action.IActionManager) -> isOwner
    19:26:void removeCallback(com.quangph.base.mvp.action.IActionManager) -> removeCallback
com.quangph.base.mvp.action.ActionStartErrorException -> com.quangph.base.mvp.action.ActionStartErrorException:
    8:9:void <init>() -> <init>
com.quangph.base.mvp.action.CompoundCallback -> com.quangph.base.mvp.action.CompoundCallback:
    11:13:void <init>() -> <init>
    31:31:com.quangph.base.mvp.action.IActionManager getActionManager() -> getActionManager
    43:43:com.quangph.base.mvp.action.ActionException getErrorAtIndex(int) -> getErrorAtIndex
    51:57:java.util.List getInterruptedActions() -> getInterruptedActions
    39:39:java.lang.Object getResultAtIndex(int) -> getResultAtIndex
    35:35:int getResultCount() -> getResultCount
    47:47:int getStatusAtIndex(int) -> getStatusAtIndex
    18:18:void onCompletedAll() -> onCompletedAll
    19:19:void onError() -> onError
    20:20:void onInterrupt(java.util.List) -> onInterrupt
    17:17:void onPublishProgress(java.lang.Object,int,com.quangph.base.mvp.action.Action) -> onPublishProgress
    16:16:void onStart(int,com.quangph.base.mvp.action.Action) -> onStart
    61:62:void release() -> release
    65:68:void removeCallback(com.quangph.base.mvp.action.IActionManager) -> removeCallback
    27:28:void setActionManager(com.quangph.base.mvp.action.IActionManager) -> setActionManager
    23:24:void setActionQueueInfo(java.util.List) -> setActionQueueInfo
com.quangph.base.mvp.action.RUN_MODE -> com.quangph.base.mvp.action.RUN_MODE:
    3:3:com.quangph.base.mvp.action.RUN_MODE[] $values() -> $values
    3:4:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.quangph.base.mvp.action.RUN_MODE valueOf(java.lang.String) -> valueOf
    3:3:com.quangph.base.mvp.action.RUN_MODE[] values() -> values
com.quangph.base.mvp.action.actionhandler.ActionHandlerImpl -> com.quangph.base.mvp.action.actionhandler.ActionHandlerImpl:
    21:21:void <clinit>() -> <clinit>
    24:29:void <init>(java.util.List) -> <init>
    20:20:void dispatch(java.lang.Object) -> dispatch
    48:49:void dispatch(com.quangph.base.mvp.action.actionhandler.IActionHandler$ActionDispatcherInfo) -> dispatch
    20:20:void dispatchAtFrontOfQueue(java.lang.Object) -> dispatchAtFrontOfQueue
    53:54:void dispatchAtFrontOfQueue(com.quangph.base.mvp.action.actionhandler.IActionHandler$ActionDispatcherInfo) -> dispatchAtFrontOfQueue
    20:20:void dispatchToEndOfQueue(java.lang.Object) -> dispatchToEndOfQueue
    58:59:void dispatchToEndOfQueue(com.quangph.base.mvp.action.actionhandler.IActionHandler$ActionDispatcherInfo) -> dispatchToEndOfQueue
    62:63:void loge(java.lang.String) -> loge
    43:43:int size() -> size
    34:34:void start() -> start
    39:39:void stop() -> stop
com.quangph.base.mvp.action.actionhandler.ActionHandlerImpl$CallbackDispatcher -> com.quangph.base.mvp.action.actionhandler.ActionHandlerImpl$CallbackDispatcher:
    66:66:void <init>(com.quangph.base.mvp.action.actionhandler.ActionHandlerImpl) -> <init>
    289:297:java.util.List findActionByType(java.lang.Class) -> findActionByType
    278:285:com.quangph.base.mvp.action.queue.ActionEnqueue findActionEnqueueByAction(com.quangph.base.mvp.action.Action) -> findActionEnqueueByAction
    263:263:com.quangph.base.mvp.action.ActionQueueInfo findActionInfoByAction(com.quangph.base.mvp.action.Action) -> findActionInfoByAction
    267:274:com.quangph.base.mvp.action.ActionQueueInfo findActionInfoByActionID(java.lang.String) -> findActionInfoByActionID
    301:309:java.util.List findActionsRelatedActionManager(com.quangph.base.mvp.action.IActionManager) -> findActionsRelatedActionManager
    66:66:void handleEvent(java.lang.Object) -> handleEvent
    70:118:void handleEvent(com.quangph.base.mvp.action.actionhandler.IActionHandler$ActionDispatcherInfo) -> handleEvent
    130:139:void notifyErrorAction(com.quangph.base.mvp.action.Action) -> notifyErrorAction
    167:178:void notifyInterrupt(com.quangph.base.mvp.action.Action) -> notifyInterrupt
    158:164:void notifyProgress(com.quangph.base.mvp.action.Action) -> notifyProgress
    121:127:void notifyStartAction(com.quangph.base.mvp.action.Action) -> notifyStartAction
    142:155:void notifySuccessAction(com.quangph.base.mvp.action.Action) -> notifySuccessAction
    245:260:void releaseAction(com.quangph.base.mvp.action.ActionQueueInfo,com.quangph.base.mvp.action.IActionManager) -> releaseAction
    232:238:void releaseAllActionImmediately(com.quangph.base.mvp.action.IActionManager) -> releaseAllActionImmediately
    335:336:void removeActionEnqueueFromCached(com.quangph.base.mvp.action.queue.ActionEnqueue) -> removeActionEnqueueFromCached
    181:194:void resume(com.quangph.base.mvp.action.IActionManager) -> resume
    197:201:void stopAction(com.quangph.base.mvp.action.Action) -> stopAction
    204:208:void stopAction(java.lang.String) -> stopAction
    211:215:void stopAction(java.lang.Class) -> stopAction
    218:222:void stopAction(com.quangph.base.mvp.action.ActionQueueInfo) -> stopAction
    225:229:void stopActions(com.quangph.base.mvp.action.IActionManager) -> stopActions
com.quangph.base.mvp.action.actionhandler.IActionHandler$ActionDispatcherInfo -> com.quangph.base.mvp.action.actionhandler.IActionHandler$ActionDispatcherInfo:
    26:26:void <init>() -> <init>
com.quangph.base.mvp.action.actionjob.ActionJob -> com.quangph.base.mvp.action.actionjob.ActionJob:
    6:7:void <init>() -> <init>
    11:11:void onException(java.lang.Throwable) -> onException
    10:10:void onResult(java.lang.Object) -> onResult
    14:15:void stop() -> stop
com.quangph.base.mvp.action.actionjob.ActionThreadPoolExcutor -> com.quangph.base.mvp.action.actionjob.ActionThreadPoolExcutor:
    19:24:void <init>() -> <init>
    40:58:void afterExecute(java.lang.Runnable,java.lang.Throwable) -> afterExecute
    61:62:void doActionJob(com.quangph.base.mvp.action.actionjob.ActionJob) -> doActionJob
    28:34:java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    65:73:void stop() -> stop
com.quangph.base.mvp.action.actionjob.ActionThreadPoolExcutor$ActionCallable -> com.quangph.base.mvp.action.actionjob.ActionThreadPoolExcutor$ActionCallable:
    89:91:void <init>(com.quangph.base.mvp.action.actionjob.ActionThreadPoolExcutor,com.quangph.base.mvp.action.actionjob.ActionJob) -> <init>
    95:95:java.lang.Object call() -> call
com.quangph.base.mvp.action.actionjob.ActionThreadPoolExcutor$ActionFutureTask -> com.quangph.base.mvp.action.actionjob.ActionThreadPoolExcutor$ActionFutureTask:
    80:82:void <init>(com.quangph.base.mvp.action.actionjob.ActionThreadPoolExcutor,java.util.concurrent.Callable) -> <init>
com.quangph.base.mvp.action.actionjob.ActionWorker -> com.quangph.base.mvp.action.actionjob.ActionWorker:
    11:18:void <init>() -> <init>
    29:57:void execute(long) -> execute
    60:65:void release() -> release
    25:26:void setExceptionHandler(com.quangph.base.mvp.action.actionjob.ActionWorker$IOnException) -> setExceptionHandler
    68:70:void stop() -> stop
    21:22:void submitJob(com.quangph.base.mvp.action.actionjob.ActionJob) -> submitJob
com.quangph.base.mvp.action.actionjob.ActionWorker$WrapActionJob -> com.quangph.base.mvp.action.actionjob.ActionWorker$WrapActionJob:
    77:79:void <init>(com.quangph.base.mvp.action.actionjob.ActionWorker,com.quangph.base.mvp.action.actionjob.ActionJob) -> <init>
    93:97:void onException(java.lang.Throwable) -> onException
    88:89:void onResult(java.lang.Object) -> onResult
    83:83:java.lang.Object submitJob() -> submitJob
com.quangph.base.mvp.action.actionjob.SimpleActionJob -> com.quangph.base.mvp.action.actionjob.SimpleActionJob:
    6:6:void <init>() -> <init>
    16:16:void onException(java.lang.Throwable) -> onException
    11:11:void onResult(java.lang.Object) -> onResult
com.quangph.base.mvp.action.dispatcher.HandlerDispatcher -> com.quangph.base.mvp.action.dispatcher.HandlerDispatcher:
    18:22:void <init>() -> <init>
    25:32:void dispatch(com.quangph.base.mvp.action.queue.ActionEnqueue) -> dispatch
com.quangph.base.mvp.action.dispatcher.HandlerDispatcher$ActionDispatcherInfo -> com.quangph.base.mvp.action.dispatcher.HandlerDispatcher$ActionDispatcherInfo:
    70:70:void <init>() -> <init>
com.quangph.base.mvp.action.dispatcher.HandlerDispatcher$EnqueueHandler -> com.quangph.base.mvp.action.dispatcher.HandlerDispatcher$EnqueueHandler:
    38:39:void <init>(android.os.Looper) -> <init>
    61:66:com.quangph.base.mvp.action.ActionQueueInfo getNextAction(com.quangph.base.mvp.action.queue.ActionEnqueue) -> getNextAction
    43:58:void handleMessage(android.os.Message) -> handleMessage
com.quangph.base.mvp.action.post.PostAction -> com.quangph.base.mvp.action.post.PostAction:
    14:18:void <init>(com.quangph.base.mvp.action.Action,java.lang.String) -> <init>
    72:73:void canExecute(boolean) -> canExecute
    32:32:java.lang.Object execute() -> execute
    102:102:java.lang.Object getCurrentEvent() -> getCurrentEvent
    82:82:com.quangph.base.mvp.action.ActionException getError() -> getError
    97:97:java.lang.String getID() -> getID
    131:131:com.quangph.base.mvp.action.Action getOriginAction() -> getOriginAction
    92:92:com.quangph.base.mvp.action.Action$RequestValue getRequestVal() -> getRequestVal
    87:87:java.lang.Object getResponseVal() -> getResponseVal
    77:77:int getStatus() -> getStatus
    112:112:boolean isError() -> isError
    122:122:boolean isFinished() -> isFinished
    117:117:boolean isInterrupt() -> isInterrupt
    107:107:boolean isSuccessful() -> isSuccessful
    27:27:java.lang.Object onExecute(com.quangph.base.mvp.action.Action$RequestValue) -> onExecute
    127:128:void publishEvent(java.lang.Object) -> publishEvent
    57:58:void setCurrentEvent(java.lang.Object) -> setCurrentEvent
    47:48:void setError(com.quangph.base.mvp.action.ActionException) -> setError
    67:68:void setEventPublisher(com.quangph.base.mvp.action.Action$IOnEventPublisher) -> setEventPublisher
    42:43:void setRequestValue(com.quangph.base.mvp.action.Action$RequestValue) -> setRequestValue
    52:53:void setResponse(java.lang.Object) -> setResponse
    62:63:void setStatus(int) -> setStatus
    22:23:void start() -> start
    37:38:void stop() -> stop
com.quangph.base.mvp.action.post.PostActionIDGenerator -> com.quangph.base.mvp.action.post.PostActionIDGenerator:
    8:10:void <init>() -> <init>
    14:22:java.lang.String generate(com.quangph.base.mvp.action.Action) -> generate
    32:36:java.lang.String getCurrentID(java.lang.String) -> getCurrentID
    27:28:void remove(java.lang.String) -> remove
com.quangph.base.mvp.action.post.PostActionIDGenerator$ActionInfo -> com.quangph.base.mvp.action.post.PostActionIDGenerator$ActionInfo:
    39:39:void <init>(com.quangph.base.mvp.action.post.PostActionIDGenerator) -> <init>
    44:45:java.lang.String generate() -> generate
    49:49:java.lang.String getCurrent() -> getCurrent
com.quangph.base.mvp.action.post.PostTaskScheduler -> com.quangph.base.mvp.action.post.PostTaskScheduler:
    26:38:void <init>(android.os.Handler,com.quangph.base.thread.PostableThread,com.quangph.base.mvp.action.post.IPostIDGenerator,java.lang.String,long,com.quangph.base.mvp.action.ACTION_POST_POLICY) -> <init>
    141:141:java.lang.Runnable createRepeatRunnable(com.quangph.base.mvp.action.post.PostAction) -> createRepeatRunnable
    42:89:void execute(com.quangph.base.mvp.action.Action) -> execute
    105:105:java.lang.Runnable realTask(com.quangph.base.mvp.action.post.PostAction) -> realTask
    93:102:void stop(com.quangph.base.mvp.action.Action) -> stop
com.quangph.base.mvp.action.post.PostTaskScheduler$1 -> com.quangph.base.mvp.action.post.PostTaskScheduler$1:
    45:45:void <init>(com.quangph.base.mvp.action.post.PostTaskScheduler,com.quangph.base.mvp.action.post.PostAction) -> <init>
    48:55:void onPublishEvent(java.lang.Object) -> onPublishEvent
com.quangph.base.mvp.action.post.PostTaskScheduler$1$1 -> com.quangph.base.mvp.action.post.PostTaskScheduler$1$1:
    48:48:void <init>(com.quangph.base.mvp.action.post.PostTaskScheduler$1,java.lang.Object) -> <init>
    51:53:void run() -> run
com.quangph.base.mvp.action.post.PostTaskScheduler$2 -> com.quangph.base.mvp.action.post.PostTaskScheduler$2:
    58:58:void <init>(com.quangph.base.mvp.action.post.PostTaskScheduler,com.quangph.base.mvp.action.post.PostAction) -> <init>
    61:74:void run() -> run
com.quangph.base.mvp.action.post.PostTaskScheduler$2$1 -> com.quangph.base.mvp.action.post.PostTaskScheduler$2$1:
    61:61:void <init>(com.quangph.base.mvp.action.post.PostTaskScheduler$2) -> <init>
    64:72:void run() -> run
com.quangph.base.mvp.action.post.PostTaskScheduler$2$1$1 -> com.quangph.base.mvp.action.post.PostTaskScheduler$2$1$1:
    66:66:void <init>(com.quangph.base.mvp.action.post.PostTaskScheduler$2$1) -> <init>
    69:70:void run() -> run
com.quangph.base.mvp.action.post.PostTaskScheduler$3 -> com.quangph.base.mvp.action.post.PostTaskScheduler$3:
    105:105:void <init>(com.quangph.base.mvp.action.post.PostTaskScheduler,com.quangph.base.mvp.action.post.PostAction) -> <init>
    109:136:void run() -> run
com.quangph.base.mvp.action.post.PostTaskScheduler$3$1 -> com.quangph.base.mvp.action.post.PostTaskScheduler$3$1:
    112:112:void <init>(com.quangph.base.mvp.action.post.PostTaskScheduler$3) -> <init>
    115:116:void run() -> run
com.quangph.base.mvp.action.post.PostTaskScheduler$3$2 -> com.quangph.base.mvp.action.post.PostTaskScheduler$3$2:
    120:120:void <init>(com.quangph.base.mvp.action.post.PostTaskScheduler$3,com.quangph.base.mvp.action.ActionException) -> <init>
    123:126:void run() -> run
com.quangph.base.mvp.action.post.PostTaskScheduler$4 -> com.quangph.base.mvp.action.post.PostTaskScheduler$4:
    141:141:void <init>(com.quangph.base.mvp.action.post.PostTaskScheduler,com.quangph.base.mvp.action.post.PostAction) -> <init>
    145:163:void run() -> run
com.quangph.base.mvp.action.post.PostTaskScheduler$4$1 -> com.quangph.base.mvp.action.post.PostTaskScheduler$4$1:
    145:145:void <init>(com.quangph.base.mvp.action.post.PostTaskScheduler$4) -> <init>
    148:161:void run() -> run
com.quangph.base.mvp.action.post.SequencePostActionManager -> com.quangph.base.mvp.action.post.SequencePostActionManager:
    22:29:void <init>() -> <init>
    140:147:boolean canPost(com.quangph.base.mvp.action.Action) -> canPost
    175:178:com.quangph.base.mvp.action.post.SequencePostActionManager$ActionInfo collectInfo(com.quangph.base.mvp.action.IActionManager,com.quangph.base.mvp.action.Action) -> collectInfo
    32:39:com.quangph.base.mvp.action.post.SequencePostActionManager getInstance() -> getInstance
    151:159:boolean hasCachedActionManager(com.quangph.base.mvp.action.IActionManager) -> hasCachedActionManager
    129:137:void initInfoIfNeed() -> initInfoIfNeed
    91:91:void pause(com.quangph.base.mvp.action.IActionManager) -> pause
    49:79:void post(com.quangph.base.mvp.action.IActionManager,com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.Action$RequestValue,com.quangph.base.mvp.action.Action$ActionCallback,long,com.quangph.base.mvp.action.ACTION_POST_POLICY) -> post
    184:197:void registerCallback(com.quangph.base.mvp.action.IActionManager,java.lang.String,com.quangph.base.mvp.action.Action$ActionCallback) -> registerCallback
    85:86:void registerPostCallback(com.quangph.base.mvp.action.IActionManager,java.lang.String,com.quangph.base.mvp.action.Action$ActionCallback) -> registerPostCallback
    100:108:void release(com.quangph.base.mvp.action.IActionManager) -> release
    112:126:void releaseAndStopAllAction(com.quangph.base.mvp.action.IActionManager) -> releaseAndStopAllAction
    96:96:void resume(com.quangph.base.mvp.action.IActionManager) -> resume
com.quangph.base.mvp.action.post.SequencePostActionManager$ActionInfo -> com.quangph.base.mvp.action.post.SequencePostActionManager$ActionInfo:
    199:199:void <init>() -> <init>
    204:204:boolean isSameAction(com.quangph.base.mvp.action.Action) -> isSameAction
    208:208:boolean isSameActionManager(com.quangph.base.mvp.action.IActionManager) -> isSameActionManager
com.quangph.base.mvp.action.queue.ActionEnqueue -> com.quangph.base.mvp.action.queue.ActionEnqueue:
    20:24:void <init>() -> <init>
    47:53:com.quangph.base.mvp.action.queue.ActionEnqueue add(java.lang.String,com.quangph.base.mvp.action.Action,java.util.List,com.quangph.base.mvp.action.scheduler.IActionScheduler) -> add
    61:66:void compound(com.quangph.base.mvp.action.CompoundCallback) -> compound
    96:98:void error(com.quangph.base.mvp.action.Action) -> error
    183:188:com.quangph.base.mvp.action.ActionQueueInfo findActionQueueInfoByID(java.lang.String) -> findActionQueueInfoByID
    192:192:java.util.List getActionEnqueueInfoList() -> getActionEnqueueInfoList
    32:32:com.quangph.base.mvp.action.CompoundCallback getCompoundCallback() -> getCompoundCallback
    28:28:com.quangph.base.mvp.action.RUN_MODE getRunMode() -> getRunMode
    118:122:void interrupt(com.quangph.base.mvp.action.Action) -> interrupt
    208:215:boolean isDetachAllActionManager() -> isDetachAllActionManager
    196:204:boolean isFinishAll() -> isFinishAll
    110:111:void progress(com.quangph.base.mvp.action.Action) -> progress
    137:145:void releaseImmediately(com.quangph.base.mvp.action.IActionManager) -> releaseImmediately
    152:180:void removeCallback(com.quangph.base.mvp.action.IActionManager) -> removeCallback
    129:130:void resume(com.quangph.base.mvp.action.IActionManager) -> resume
    57:58:void setRunMode(com.quangph.base.mvp.action.RUN_MODE) -> setRunMode
    86:88:void startAction(com.quangph.base.mvp.action.Action) -> startAction
    105:107:void success(com.quangph.base.mvp.action.Action) -> success
com.quangph.base.mvp.action.queue.ActionEnqueueImpl -> com.quangph.base.mvp.action.queue.ActionEnqueueImpl:
    20:20:void <init>() -> <init>
    336:343:void cleanQueue() -> cleanQueue
    325:332:boolean isSuccessAll() -> isSuccessAll
    26:26:void onCompound(com.quangph.base.mvp.action.CompoundCallback) -> onCompound
    96:110:void onErrorAction(com.quangph.base.mvp.action.Action) -> onErrorAction
    143:155:void onInterruptAction(com.quangph.base.mvp.action.Action) -> onInterruptAction
    135:139:void onProgressAction(com.quangph.base.mvp.action.Action) -> onProgressAction
    160:183:void onResume(com.quangph.base.mvp.action.IActionManager) -> onResume
    32:87:void onStartAction(com.quangph.base.mvp.action.Action) -> onStartAction
    114:131:void onSuccessAction(com.quangph.base.mvp.action.Action) -> onSuccessAction
    187:187:boolean onValid() -> onValid
    319:322:void removeActionQueueInfoIfNeed(com.quangph.base.mvp.action.ActionQueueInfo) -> removeActionQueueInfoIfNeed
    195:196:void runNextAction() -> runNextAction
    265:289:void showAllResult() -> showAllResult
    199:213:void showError(com.quangph.base.mvp.action.ActionQueueInfo) -> showError
    233:247:void showInterrupt(com.quangph.base.mvp.action.ActionQueueInfo) -> showInterrupt
    250:262:void showProgress(com.quangph.base.mvp.action.ActionQueueInfo) -> showProgress
    216:230:void showResponse(com.quangph.base.mvp.action.ActionQueueInfo) -> showResponse
    292:316:void showResultOfActionQueueInfoWhenResume(com.quangph.base.mvp.action.ActionQueueInfo,com.quangph.base.mvp.action.IActionManager) -> showResultOfActionQueueInfoWhenResume
com.quangph.base.mvp.action.scheduler.AsyncTaskScheduler -> com.quangph.base.mvp.action.scheduler.AsyncTaskScheduler:
    23:24:void <init>() -> <init>
    26:28:void <init>(boolean) -> <init>
    30:33:void <init>(boolean,int) -> <init>
    37:43:void execute(com.quangph.base.mvp.action.Action) -> execute
    64:66:void notifyError(com.quangph.base.mvp.action.Action) -> notifyError
    69:70:void notifyProgress(com.quangph.base.mvp.action.Action) -> notifyProgress
    59:61:void notifyResult(com.quangph.base.mvp.action.Action) -> notifyResult
    73:74:void notifyStartAction(com.quangph.base.mvp.action.Action) -> notifyStartAction
    47:56:void stop(com.quangph.base.mvp.action.Action) -> stop
com.quangph.base.mvp.action.scheduler.AsyncTaskScheduler$ActionAsync -> com.quangph.base.mvp.action.scheduler.AsyncTaskScheduler$ActionAsync:
    85:89:void <init>(com.quangph.base.mvp.action.Action,com.quangph.base.mvp.action.scheduler.AsyncTaskScheduler) -> <init>
    79:79:void access$000(com.quangph.base.mvp.action.scheduler.AsyncTaskScheduler$ActionAsync,java.lang.Object[]) -> access$000
    79:79:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    109:126:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    79:79:void onPostExecute(java.lang.Object) -> onPostExecute
    150:159:void onPostExecute(java.lang.Void) -> onPostExecute
    93:105:void onPreExecute() -> onPreExecute
    141:146:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.quangph.base.mvp.action.scheduler.AsyncTaskScheduler$ActionAsync$1 -> com.quangph.base.mvp.action.scheduler.AsyncTaskScheduler$ActionAsync$1:
    94:94:void <init>(com.quangph.base.mvp.action.scheduler.AsyncTaskScheduler$ActionAsync) -> <init>
    97:99:void onPublishEvent(java.lang.Object) -> onPublishEvent
com.quangph.base.mvp.action.uid.IDGenerator -> com.quangph.base.mvp.action.uid.IDGenerator:
    5:5:void <init>() -> <init>
    9:9:java.lang.String generate(com.quangph.base.mvp.action.Action) -> generate
com.quangph.base.mvp.domain.SimpleCallback -> com.quangph.base.mvp.domain.SimpleCallback:
    6:6:void <init>() -> <init>
    20:20:void onError(java.lang.Exception) -> onError
    25:25:void onPublishEvent(java.lang.Object) -> onPublishEvent
    10:10:void onStart() -> onStart
    15:15:void onSuccess(java.lang.Object) -> onSuccess
com.quangph.base.mvp.mvpcomponent.BaseChildPresenter -> com.quangph.base.mvp.mvpcomponent.BaseChildPresenter:
    17:21:void <init>() -> <init>
    43:48:void dispatchToParent(com.quangph.base.mvp.IParentCommand) -> dispatchToParent
    67:70:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    33:33:com.quangph.base.mvp.IParentPresenter getParentPresenter() -> getParentPresenter
    52:52:java.lang.String getTagName() -> getTagName
    73:73:void onExecuteCommand(com.quangph.base.mvp.ICommand) -> onExecuteCommand
    62:62:boolean onInterceptCommand(com.quangph.base.mvp.ICommand) -> onInterceptCommand
    72:72:void onPresenterReady() -> onPresenterReady
    25:29:void presenterReady() -> presenterReady
    38:39:void setParentPresenter(com.quangph.base.mvp.IParentPresenter) -> setParentPresenter
    57:58:void setTagName(java.lang.String) -> setTagName
com.quangph.base.mvp.mvpcomponent.BasePresenter -> com.quangph.base.mvp.mvpcomponent.BasePresenter:
    10:10:void <init>() -> <init>
    29:29:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    25:25:boolean onInterceptCommand(com.quangph.base.mvp.ICommand) -> onInterceptCommand
    16:16:void presenterReady() -> presenterReady
    21:21:void presenterRelease() -> presenterRelease
    33:34:void setMVPView(com.quangph.base.mvp.IView) -> setMVPView
com.quangph.base.mvp.mvpcomponent.KMVPActivity -> com.quangph.base.mvp.mvpcomponent.KMVPActivity:
# {"id":"sourceFile","fileName":"KMVPActivity.kt"}
    18:20:void <init>() -> <init>
    42:42:kotlin.properties.ReadWriteProperty autoSave(java.lang.Object) -> autoSave
    41:41:kotlin.properties.ReadWriteProperty autoSave$default(com.quangph.base.mvp.mvpcomponent.KMVPActivity,java.lang.Object,int,java.lang.Object) -> autoSave$default
    46:46:kotlin.properties.ReadWriteProperty autoSaveListLiveData(java.util.ArrayList) -> autoSaveListLiveData
    45:45:kotlin.properties.ReadWriteProperty autoSaveListLiveData$default(com.quangph.base.mvp.mvpcomponent.KMVPActivity,java.util.ArrayList,int,java.lang.Object) -> autoSaveListLiveData$default
    35:37:kotlin.properties.ReadWriteProperty autoSaveLiveData(java.lang.Object) -> autoSaveLiveData
    34:34:kotlin.properties.ReadWriteProperty autoSaveLiveData$default(com.quangph.base.mvp.mvpcomponent.KMVPActivity,java.lang.Object,int,java.lang.Object) -> autoSaveLiveData$default
    50:50:kotlin.properties.ReadWriteProperty autoSaveMapLiveData(java.util.Map) -> autoSaveMapLiveData
    49:49:kotlin.properties.ReadWriteProperty autoSaveMapLiveData$default(com.quangph.base.mvp.mvpcomponent.KMVPActivity,java.util.Map,int,java.lang.Object) -> autoSaveMapLiveData$default
    28:32:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    23:25:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.quangph.base.mvp.mvpcomponent.MVPActivity -> com.quangph.base.mvp.mvpcomponent.MVPActivity:
    39:48:void <init>() -> <init>
    268:269:void actionManagerPause() -> actionManagerPause
    276:277:void actionManagerResume() -> actionManagerResume
    204:206:void addChildPresenter(com.quangph.base.mvp.IChildPresenter,java.lang.String) -> addChildPresenter
    389:390:void addChildPresenter(com.quangph.base.mvp.IChildPresenter,com.quangph.base.mvp.IView) -> addChildPresenter
    399:401:void addChildPresenter(com.quangph.base.mvp.IChildPresenter,com.quangph.base.mvp.IView,java.lang.String) -> addChildPresenter
    348:349:void addLifeCycle(com.quangph.base.lifecycle.ILifeCycle) -> addLifeCycle
    286:287:void addState(java.lang.String,com.quangph.base.mvp.mvpcomponent.MVPState) -> addState
    290:291:void addState(java.lang.String,com.quangph.base.mvp.mvpcomponent.MVPState,java.lang.String) -> addState
    438:441:void addStateToLC(java.lang.String) -> addStateToLC
    315:321:void backStateMachine() -> backStateMachine
    244:244:com.quangph.base.mvp.action.IActionManager createActionManager() -> createActionManager
    221:222:void dispatchToChildren(com.quangph.base.mvp.ICommand,java.lang.String[]) -> dispatchToChildren
    405:423:void executeAndDispatchToChildren(com.quangph.base.mvp.ICommand) -> executeAndDispatchToChildren
    185:190:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    231:231:com.quangph.base.mvp.IChildPresenter findPresenterByTag(java.lang.String) -> findPresenterByTag
    375:379:androidx.lifecycle.ViewModel findViewModel() -> findViewModel
    332:332:com.quangph.base.mvp.action.IActionManager getActionManager() -> getActionManager
    199:199:java.util.List getChildrenPresenter() -> getChildrenPresenter
    328:328:com.quangph.base.mvp.IView getMVPView() -> getMVPView
    336:336:com.quangph.base.statemachine.UIStateMachine getStateMachine() -> getStateMachine
    489:515:void initMVPView(android.view.View,int,com.quangph.base.mvp.IView) -> initMVPView
    294:297:void initState(java.lang.String) -> initState
    518:518:boolean mustInterceptVisitChildrenView(android.view.View) -> mustInterceptVisitChildrenView
    265:265:void mvpComponentWillLoad() -> mvpComponentWillLoad
    272:273:void onActionManagerPause() -> onActionManagerPause
    280:281:void onActionManagerResume() -> onActionManagerResume
    53:59:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    63:66:void onBackPressed() -> onBackPressed
    151:164:void onDestroy() -> onDestroy
    283:283:void onExecuteCommand(com.quangph.base.mvp.ICommand) -> onExecuteCommand
    263:263:void onInitVM() -> onInitVM
    180:180:boolean onInterceptCommand(com.quangph.base.mvp.ICommand) -> onInterceptCommand
    226:226:boolean onInterceptDispatchToChildren(com.quangph.base.mvp.ICommand) -> onInterceptDispatchToChildren
    139:147:void onPostInit(android.os.Bundle) -> onPostInit
    239:239:void onPresenterReady() -> onPresenterReady
    241:241:void onPresenterRelease() -> onPresenterRelease
    92:106:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    76:79:void onResume() -> onResume
    83:88:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    70:72:void onStop() -> onStop
    130:135:void onViewDidCreated(android.os.Bundle) -> onViewDidCreated
    110:126:void onViewWillCreate(android.os.Bundle) -> onViewWillCreate
    344:345:void postRunnable(java.lang.Runnable) -> postRunnable
    451:461:void preparePresenter() -> preparePresenter
    464:486:void preparePresenterForChildren(android.view.View) -> preparePresenterForChildren
    168:169:void presenterReady() -> presenterReady
    173:176:void presenterRelease() -> presenterRelease
    371:371:java.util.List preventIdsWhenValidView() -> preventIdsWhenValidView
    236:237:void readyChild(java.lang.String) -> readyChild
    248:251:void releaseActionManager() -> releaseActionManager
    210:211:void removeChildPresenter(com.quangph.base.mvp.IChildPresenter) -> removeChildPresenter
    215:216:void removeChildPresenter(java.lang.String) -> removeChildPresenter
    352:353:void removeLifeCycle(com.quangph.base.lifecycle.ILifeCycle) -> removeLifeCycle
    444:448:void removeStateFromLC(java.lang.String) -> removeStateFromLC
    195:195:void setMVPView(com.quangph.base.mvp.IView) -> setMVPView
    526:529:boolean startInRightState() -> startInRightState
    324:325:void startStateMachine() -> startStateMachine
    300:312:void transitToState(java.lang.String) -> transitToState
    426:434:void validIntrinsic(android.view.View,boolean,java.util.List) -> validIntrinsic
    361:364:void validView(boolean) -> validView
com.quangph.base.mvp.mvpcomponent.MVPActivity$1 -> com.quangph.base.mvp.mvpcomponent.MVPActivity$1:
    112:112:void <init>(com.quangph.base.mvp.mvpcomponent.MVPActivity,java.lang.String) -> <init>
    115:123:void handleMessage(android.os.Message) -> handleMessage
com.quangph.base.mvp.mvpcomponent.MVPFragment -> com.quangph.base.mvp.mvpcomponent.MVPFragment:
    32:40:void <init>() -> <init>
    213:214:void actionManagerPause() -> actionManagerPause
    221:222:void actionManagerResume() -> actionManagerResume
    162:163:void addChildPresenter(com.quangph.base.mvp.IChildPresenter,java.lang.String) -> addChildPresenter
    300:301:void addChildPresenter(com.quangph.base.mvp.IChildPresenter,com.quangph.base.mvp.IView) -> addChildPresenter
    310:311:void addChildPresenter(com.quangph.base.mvp.IChildPresenter,com.quangph.base.mvp.IView,java.lang.String) -> addChildPresenter
    276:277:void addLifeCycle(com.quangph.base.lifecycle.ILifeCycle) -> addLifeCycle
    231:232:void addState(java.lang.String,com.quangph.base.mvp.mvpcomponent.MVPState) -> addState
    235:236:void addState(java.lang.String,com.quangph.base.mvp.mvpcomponent.MVPState,java.lang.String) -> addState
    326:329:void addStateToLC(java.lang.String) -> addStateToLC
    203:203:com.quangph.base.mvp.action.IActionManager createActionManager() -> createActionManager
    178:179:void dispatchToChildren(com.quangph.base.mvp.ICommand,java.lang.String[]) -> dispatchToChildren
    109:112:void dispatchToParent(com.quangph.base.mvp.IParentCommand) -> dispatchToParent
    344:360:void executeAndDispatchToChildren(com.quangph.base.mvp.ICommand) -> executeAndDispatchToChildren
    143:148:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    188:188:com.quangph.base.mvp.IChildPresenter findPresenterByTag(java.lang.String) -> findPresenterByTag
    268:268:com.quangph.base.mvp.action.IActionManager getActionManager() -> getActionManager
    157:157:java.util.List getChildrenPresenter() -> getChildrenPresenter
    264:264:com.quangph.base.mvp.IView getMVPView() -> getMVPView
    99:99:com.quangph.base.mvp.IParentPresenter getParentPresenter() -> getParentPresenter
    272:272:com.quangph.base.statemachine.UIStateMachine getStateMachine() -> getStateMachine
    116:116:java.lang.String getTagName() -> getTagName
    398:418:void initMVPView(android.view.View,com.quangph.base.mvp.IView) -> initMVPView
    239:242:void initState(java.lang.String) -> initState
    421:421:boolean mustInterceptVisitChildrenView(android.view.View) -> mustInterceptVisitChildrenView
    200:200:void mvpComponentWillLoad() -> mvpComponentWillLoad
    217:218:void onActionManagerPause() -> onActionManagerPause
    225:226:void onActionManagerResume() -> onActionManagerResume
    44:50:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    87:95:void onDestroyView() -> onDestroyView
    228:228:void onExecuteCommand(com.quangph.base.mvp.ICommand) -> onExecuteCommand
    138:138:boolean onInterceptCommand(com.quangph.base.mvp.ICommand) -> onInterceptCommand
    183:183:boolean onInterceptDispatchToChildren(com.quangph.base.mvp.ICommand) -> onInterceptDispatchToChildren
    196:196:void onPresenterReady() -> onPresenterReady
    198:198:void onPresenterRelease() -> onPresenterRelease
    81:83:void onResume() -> onResume
    75:77:void onStop() -> onStop
    54:71:void onViewDidCreated(android.view.View,android.os.Bundle) -> onViewDidCreated
    363:371:void preparePresenter(android.view.View) -> preparePresenter
    374:395:void preparePresenterForChildren(android.view.View) -> preparePresenterForChildren
    126:127:void presenterReady() -> presenterReady
    132:134:void presenterRelease() -> presenterRelease
    290:290:java.util.List preventIdsWhenValidView() -> preventIdsWhenValidView
    193:194:void readyChild(java.lang.String) -> readyChild
    207:210:void releaseActionManager() -> releaseActionManager
    167:168:void removeChildPresenter(com.quangph.base.mvp.IChildPresenter) -> removeChildPresenter
    172:173:void removeChildPresenter(java.lang.String) -> removeChildPresenter
    280:281:void removeLifeCycle(com.quangph.base.lifecycle.ILifeCycle) -> removeLifeCycle
    332:336:void removeStateFromLC(java.lang.String) -> removeStateFromLC
    153:153:void setMVPView(com.quangph.base.mvp.IView) -> setMVPView
    104:105:void setParentPresenter(com.quangph.base.mvp.IParentPresenter) -> setParentPresenter
    121:122:void setTagName(java.lang.String) -> setTagName
    260:261:void startStateMachine() -> startStateMachine
    245:257:void transitToState(java.lang.String) -> transitToState
    314:322:void validIntrinsic(android.view.View,boolean,java.util.List) -> validIntrinsic
    284:287:void validView(boolean) -> validView
com.quangph.base.mvp.mvpcomponent.MVPFragment$1 -> com.quangph.base.mvp.mvpcomponent.MVPFragment$1:
    56:56:void <init>(com.quangph.base.mvp.mvpcomponent.MVPFragment,java.lang.String) -> <init>
    59:63:void handleMessage(android.os.Message) -> handleMessage
com.quangph.base.mvp.mvpcomponent.MVPState -> com.quangph.base.mvp.mvpcomponent.MVPState:
    32:37:void <init>(com.quangph.base.mvp.IPresenter,com.quangph.base.mvp.IView) -> <init>
    125:126:void addChildPresenter(com.quangph.base.mvp.IChildPresenter,java.lang.String) -> addChildPresenter
    129:130:void addChildPresenter(com.quangph.base.mvp.IChildPresenter,com.quangph.base.mvp.IView) -> addChildPresenter
    135:136:void addChildPresenter(com.quangph.base.mvp.IChildPresenter,com.quangph.base.mvp.IView,java.lang.String) -> addChildPresenter
    86:87:android.os.Bundle buildResult() -> buildResult
    148:154:void dispatchToChildren(com.quangph.base.mvp.ICommand) -> dispatchToChildren
    68:72:java.lang.Boolean executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    143:143:com.quangph.base.mvp.IChildPresenter findPresenterByTag(java.lang.String) -> findPresenterByTag
    99:99:android.os.Bundle getResult() -> getResult
    91:91:android.os.Bundle getReturnResult() -> getReturnResult
    108:109:void initWith(android.os.Bundle) -> initWith
    80:80:boolean onExecuteCommand(com.quangph.base.mvp.ICommand) -> onExecuteCommand
    77:77:boolean onInterceptCommand(com.quangph.base.mvp.ICommand) -> onInterceptCommand
    82:82:void onTransitFrom(java.lang.String,android.os.Bundle) -> onTransitFrom
    83:83:void onTransitTo(java.lang.String) -> onTransitTo
    41:52:boolean processMessage(android.os.Message) -> processMessage
    121:122:void readyChild(java.lang.String) -> readyChild
    115:118:void releaseReturnResult() -> releaseReturnResult
    139:140:void removeChildPresenter(com.quangph.base.mvp.IChildPresenter) -> removeChildPresenter
    57:59:void transitFrom(java.lang.String) -> transitFrom
    63:65:void transitTo(java.lang.String) -> transitTo
com.quangph.base.mvp.mvpcomponent.PresenterHelper -> com.quangph.base.mvp.mvpcomponent.PresenterHelper:
    21:25:void <init>(java.lang.String) -> <init>
    58:64:void addChildPresenter(com.quangph.base.mvp.IChildPresenter,java.lang.String) -> addChildPresenter
    71:75:void addChildPresenter(com.quangph.base.mvp.IChildPresenter,com.quangph.base.mvp.IView,java.lang.String) -> addChildPresenter
    118:122:void dispatchToChild(com.quangph.base.mvp.ICommand,java.lang.String) -> dispatchToChild
    78:87:void dispatchToChildren(com.quangph.base.mvp.ICommand,java.lang.String[]) -> dispatchToChildren
    90:101:com.quangph.base.mvp.IChildPresenter findPresenterByTag(java.lang.String) -> findPresenterByTag
    28:28:java.util.List getChildren() -> getChildren
    105:115:void readyChild(java.lang.String) -> readyChild
    32:36:void release() -> release
    39:40:void removeChildPresenter(com.quangph.base.mvp.IChildPresenter) -> removeChildPresenter
    43:55:void removeChildPresenter(java.lang.String) -> removeChildPresenter
com.quangph.base.mvp.mvpcomponent.ViewModelFinderReflection -> com.quangph.base.mvp.mvpcomponent.ViewModelFinderReflection:
    13:13:void <init>() -> <init>
    17:33:androidx.lifecycle.ViewModel findViewModel(androidx.fragment.app.FragmentActivity) -> findViewModel
    39:39:java.lang.String generateViewModelName(java.lang.String) -> generateViewModelName
com.quangph.base.mvp.mvpcomponent.view.BaseCardView -> com.quangph.base.mvp.mvpcomponent.view.BaseCardView:
    22:27:void <init>(android.content.Context) -> <init>
    22:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    22:35:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    49:50:void attachPresenter(com.quangph.base.mvp.IPresenter) -> attachPresenter
    84:91:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    44:44:int getStatus() -> getStatus
    54:54:boolean hasMVPChildren() -> hasMVPChildren
    74:74:boolean isPortrait() -> isPortrait
    99:99:boolean onDispatchCommand(com.quangph.base.mvp.ICommand) -> onDispatchCommand
    59:60:void onInitView() -> onInitView
    69:70:void onLandscape() -> onLandscape
    64:65:void onPortrait() -> onPortrait
    79:80:void setMVPViewParent(com.quangph.base.mvp.IView) -> setMVPViewParent
    39:40:void setStatus(int) -> setStatus
com.quangph.base.mvp.mvpcomponent.view.BaseConstraintView -> com.quangph.base.mvp.mvpcomponent.view.BaseConstraintView:
    17:22:void <init>(android.content.Context) -> <init>
    17:26:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    17:30:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:45:void attachPresenter(com.quangph.base.mvp.IPresenter) -> attachPresenter
    79:86:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    39:39:int getStatus() -> getStatus
    54:54:boolean hasMVPChildren() -> hasMVPChildren
    69:69:boolean isPortrait() -> isPortrait
    94:94:boolean onDispatchCommand(com.quangph.base.mvp.ICommand) -> onDispatchCommand
    49:50:void onInitView() -> onInitView
    64:65:void onLandscape() -> onLandscape
    59:60:void onPortrait() -> onPortrait
    74:75:void setMVPViewParent(com.quangph.base.mvp.IView) -> setMVPViewParent
    34:35:void setStatus(int) -> setStatus
com.quangph.base.mvp.mvpcomponent.view.BaseCoordinatorView -> com.quangph.base.mvp.mvpcomponent.view.BaseCoordinatorView:
    19:24:void <init>(android.content.Context) -> <init>
    19:28:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    19:32:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:47:void attachPresenter(com.quangph.base.mvp.IPresenter) -> attachPresenter
    81:88:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    41:41:int getStatus() -> getStatus
    56:56:boolean hasMVPChildren() -> hasMVPChildren
    71:71:boolean isPortrait() -> isPortrait
    96:96:boolean onDispatchCommand(com.quangph.base.mvp.ICommand) -> onDispatchCommand
    51:52:void onInitView() -> onInitView
    66:67:void onLandscape() -> onLandscape
    61:62:void onPortrait() -> onPortrait
    76:77:void setMVPViewParent(com.quangph.base.mvp.IView) -> setMVPViewParent
    36:37:void setStatus(int) -> setStatus
com.quangph.base.mvp.mvpcomponent.view.BaseDrawerLayout -> com.quangph.base.mvp.mvpcomponent.view.BaseDrawerLayout:
    22:27:void <init>(android.content.Context) -> <init>
    22:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    22:35:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    49:50:void attachPresenter(com.quangph.base.mvp.IPresenter) -> attachPresenter
    84:91:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    44:44:int getStatus() -> getStatus
    54:54:boolean hasMVPChildren() -> hasMVPChildren
    74:74:boolean isPortrait() -> isPortrait
    99:99:boolean onDispatchCommand(com.quangph.base.mvp.ICommand) -> onDispatchCommand
    59:60:void onInitView() -> onInitView
    69:70:void onLandscape() -> onLandscape
    64:65:void onPortrait() -> onPortrait
    79:80:void setMVPViewParent(com.quangph.base.mvp.IView) -> setMVPViewParent
    39:40:void setStatus(int) -> setStatus
com.quangph.base.mvp.mvpcomponent.view.BaseFrameView -> com.quangph.base.mvp.mvpcomponent.view.BaseFrameView:
    19:24:void <init>(android.content.Context) -> <init>
    19:28:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    19:32:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    19:37:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:52:void attachPresenter(com.quangph.base.mvp.IPresenter) -> attachPresenter
    86:93:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    46:46:int getStatus() -> getStatus
    61:61:boolean hasMVPChildren() -> hasMVPChildren
    76:76:boolean isPortrait() -> isPortrait
    101:101:boolean onDispatchCommand(com.quangph.base.mvp.ICommand) -> onDispatchCommand
    56:57:void onInitView() -> onInitView
    71:72:void onLandscape() -> onLandscape
    66:67:void onPortrait() -> onPortrait
    81:82:void setMVPViewParent(com.quangph.base.mvp.IView) -> setMVPViewParent
    41:42:void setStatus(int) -> setStatus
com.quangph.base.mvp.mvpcomponent.view.BaseLinearView -> com.quangph.base.mvp.mvpcomponent.view.BaseLinearView:
    19:24:void <init>(android.content.Context) -> <init>
    19:28:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    19:32:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    19:37:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:52:void attachPresenter(com.quangph.base.mvp.IPresenter) -> attachPresenter
    86:93:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    46:46:int getStatus() -> getStatus
    61:61:boolean hasMVPChildren() -> hasMVPChildren
    76:76:boolean isPortrait() -> isPortrait
    101:101:boolean onDispatchCommand(com.quangph.base.mvp.ICommand) -> onDispatchCommand
    56:57:void onInitView() -> onInitView
    71:72:void onLandscape() -> onLandscape
    66:67:void onPortrait() -> onPortrait
    81:82:void setMVPViewParent(com.quangph.base.mvp.IView) -> setMVPViewParent
    41:42:void setStatus(int) -> setStatus
com.quangph.base.mvp.mvpcomponent.view.BaseNestedScrollView -> com.quangph.base.mvp.mvpcomponent.view.BaseNestedScrollView:
    19:24:void <init>(android.content.Context) -> <init>
    19:28:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    19:32:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:47:void attachPresenter(com.quangph.base.mvp.IPresenter) -> attachPresenter
    81:88:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    41:41:int getStatus() -> getStatus
    51:51:boolean hasMVPChildren() -> hasMVPChildren
    71:71:boolean isPortrait() -> isPortrait
    96:96:boolean onDispatchCommand(com.quangph.base.mvp.ICommand) -> onDispatchCommand
    56:57:void onInitView() -> onInitView
    66:67:void onLandscape() -> onLandscape
    61:62:void onPortrait() -> onPortrait
    76:77:void setMVPViewParent(com.quangph.base.mvp.IView) -> setMVPViewParent
    36:37:void setStatus(int) -> setStatus
com.quangph.base.mvp.mvpcomponent.view.BaseRelativeView -> com.quangph.base.mvp.mvpcomponent.view.BaseRelativeView:
    16:21:void <init>(android.content.Context) -> <init>
    16:25:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    16:29:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    16:33:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    47:48:void attachPresenter(com.quangph.base.mvp.IPresenter) -> attachPresenter
    82:89:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    42:42:int getStatus() -> getStatus
    57:57:boolean hasMVPChildren() -> hasMVPChildren
    72:72:boolean isPortrait() -> isPortrait
    97:97:boolean onDispatchCommand(com.quangph.base.mvp.ICommand) -> onDispatchCommand
    52:53:void onInitView() -> onInitView
    67:68:void onLandscape() -> onLandscape
    62:63:void onPortrait() -> onPortrait
    77:78:void setMVPViewParent(com.quangph.base.mvp.IView) -> setMVPViewParent
    37:38:void setStatus(int) -> setStatus
com.quangph.base.mvp.mvpcomponent.view.BaseScrollView -> com.quangph.base.mvp.mvpcomponent.view.BaseScrollView:
    16:21:void <init>(android.content.Context) -> <init>
    16:25:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    16:29:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    16:33:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    47:48:void attachPresenter(com.quangph.base.mvp.IPresenter) -> attachPresenter
    82:89:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    42:42:int getStatus() -> getStatus
    57:57:boolean hasMVPChildren() -> hasMVPChildren
    72:72:boolean isPortrait() -> isPortrait
    97:97:boolean onDispatchCommand(com.quangph.base.mvp.ICommand) -> onDispatchCommand
    52:53:void onInitView() -> onInitView
    67:68:void onLandscape() -> onLandscape
    62:63:void onPortrait() -> onPortrait
    77:78:void setMVPViewParent(com.quangph.base.mvp.IView) -> setMVPViewParent
    37:38:void setStatus(int) -> setStatus
com.quangph.base.mvp.mvpcomponent.view.BaseSwipeRefreshLayout -> com.quangph.base.mvp.mvpcomponent.view.BaseSwipeRefreshLayout:
    22:27:void <init>(android.content.Context) -> <init>
    22:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:46:void attachPresenter(com.quangph.base.mvp.IPresenter) -> attachPresenter
    86:93:void executeCommand(com.quangph.base.mvp.ICommand) -> executeCommand
    40:40:int getStatus() -> getStatus
    50:50:boolean hasMVPChildren() -> hasMVPChildren
    76:76:boolean isPortrait() -> isPortrait
    102:102:boolean onDispatchCommand(com.quangph.base.mvp.ICommand) -> onDispatchCommand
    55:62:void onInitView() -> onInitView
    71:72:void onLandscape() -> onLandscape
    66:67:void onPortrait() -> onPortrait
    81:82:void setMVPViewParent(com.quangph.base.mvp.IView) -> setMVPViewParent
    35:36:void setStatus(int) -> setStatus
com.quangph.base.mvp.mvpcomponent.view.BaseSwipeRefreshLayout$1 -> com.quangph.base.mvp.mvpcomponent.view.BaseSwipeRefreshLayout$1:
    56:56:void <init>(com.quangph.base.mvp.mvpcomponent.view.BaseSwipeRefreshLayout) -> <init>
    59:60:void onRefresh() -> onRefresh
com.quangph.base.mvp.mvpcomponent.view.BaseSwipeRefreshLayout$RefreshCmd -> com.quangph.base.mvp.mvpcomponent.view.BaseSwipeRefreshLayout$RefreshCmd:
    106:106:void <init>() -> <init>
com.quangph.base.mvp.repo.BaseRepo -> com.quangph.base.mvp.repo.BaseRepo:
    9:9:void <init>() -> <init>
    12:12:com.quangph.base.mvp.repo.BaseRepo$CacheBuilder buildCache(java.lang.String) -> buildCache
    16:16:com.quangph.base.cache.ICache getCache(java.lang.String) -> getCache
com.quangph.base.mvp.repo.BaseRepo$CacheBuilder -> com.quangph.base.mvp.repo.BaseRepo$CacheBuilder:
    20:22:void <init>() -> <init>
    35:41:com.quangph.base.cache.ICache build() -> build
    30:31:com.quangph.base.mvp.repo.BaseRepo$CacheBuilder maxSize(int) -> maxSize
    25:26:com.quangph.base.mvp.repo.BaseRepo$CacheBuilder name(java.lang.String) -> name
com.quangph.base.roadmap.IRoadMap -> com.quangph.base.roadmap.IRoadMap:
# {"id":"sourceFile","fileName":"IRoadMap.kt"}
com.quangph.base.roadmap.ROAD_DIRECTION -> com.quangph.base.roadmap.ROAD_DIRECTION:
# {"id":"sourceFile","fileName":"ROAD_DIRECTION.kt"}
    7:7:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
com.quangph.base.roadmap.RoadMap -> com.quangph.base.roadmap.RoadMap:
# {"id":"sourceFile","fileName":"RoadMap.kt"}
    10:10:void <init>() -> <init>
    32:60:void finish(com.quangph.jetpack.IJetContext) -> finish
    16:29:void log(com.quangph.jetpack.IJetContext) -> log
    81:101:void restoreInstanceState(android.os.Bundle) -> restoreInstanceState
    67:78:void saveInstanceState(android.os.Bundle) -> saveInstanceState
    63:64:void traceDirection(com.quangph.base.roadmap.ROAD_DIRECTION) -> traceDirection
com.quangph.base.roadmap.RoadNode -> com.quangph.base.roadmap.RoadNode:
# {"id":"sourceFile","fileName":"RoadNode.kt"}
    10:12:void <init>() -> <init>
    14:17:void <init>(android.os.Parcel) -> <init>
    25:25:int describeContents() -> describeContents
    11:11:java.lang.String getScreenName() -> getScreenName
    12:12:boolean isAvailable() -> isAvailable
    12:12:void setAvailable(boolean) -> setAvailable
    11:11:void setScreenName(java.lang.String) -> setScreenName
    20:22:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.quangph.base.roadmap.RoadNode$CREATOR -> com.quangph.base.roadmap.RoadNode$CREATOR:
# {"id":"sourceFile","fileName":"RoadNode.kt"}
    28:28:void <init>() -> <init>
    28:28:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    30:30:com.quangph.base.roadmap.RoadNode createFromParcel(android.os.Parcel) -> createFromParcel
    28:28:java.lang.Object[] newArray(int) -> newArray
    34:34:com.quangph.base.roadmap.RoadNode[] newArray(int) -> newArray
com.quangph.base.security.CipherService -> com.quangph.base.security.CipherService:
# {"id":"sourceFile","fileName":"CipherService.kt"}
    15:16:void <clinit>() -> <clinit>
    12:22:void <init>(java.lang.String) -> <init>
    12:12:java.lang.String access$getTRANSFORMATION_ASYMMETRIC$cp() -> access$getTRANSFORMATION_ASYMMETRIC$cp
    12:12:java.lang.String access$getTRANSFORMATION_SYMMETRIC$cp() -> access$getTRANSFORMATION_SYMMETRIC$cp
    39:55:java.lang.String decrypt(java.lang.String,java.security.Key,boolean) -> decrypt
    25:34:java.lang.String encrypt(java.lang.String,java.security.Key,boolean) -> encrypt
    65:67:java.security.Key unWrapKey(java.lang.String,java.lang.String,int,java.security.Key) -> unWrapKey
    59:61:java.lang.String wrapKey(java.security.Key,java.security.Key) -> wrapKey
com.quangph.base.security.CipherService$Companion -> com.quangph.base.security.CipherService$Companion:
# {"id":"sourceFile","fileName":"CipherService.kt"}
    14:14:void <init>() -> <init>
    15:15:java.lang.String getTRANSFORMATION_ASYMMETRIC() -> getTRANSFORMATION_ASYMMETRIC
    16:16:java.lang.String getTRANSFORMATION_SYMMETRIC() -> getTRANSFORMATION_SYMMETRIC
com.quangph.base.security.Encryptor -> com.quangph.base.security.Encryptor:
# {"id":"sourceFile","fileName":"Encryptor.kt"}
    21:22:void <clinit>() -> <clinit>
    18:25:void <init>(android.content.Context) -> <init>
    18:18:java.lang.String access$getALGORITHM_AES$cp() -> access$getALGORITHM_AES$cp
    18:18:java.lang.String access$getMASTER_KEY$cp() -> access$getMASTER_KEY$cp
    108:113:java.lang.String createAndStoreDefaultSymmetricKey() -> createAndStoreDefaultSymmetricKey
    48:60:java.lang.String decrypt(java.lang.String) -> decrypt
    97:101:java.lang.String decryptWithDefaultSymmetricKey(java.lang.String) -> decryptWithDefaultSymmetricKey
    92:93:java.lang.String decryptWithSymmetric(java.lang.String) -> decryptWithSymmetric
    28:41:java.lang.String encrypt(java.lang.String) -> encrypt
    79:86:java.lang.String encryptWithDefaultSymmetricKey(java.lang.String) -> encryptWithDefaultSymmetricKey
    70:71:java.lang.String encryptWithSymmetric(java.lang.String) -> encryptWithSymmetric
    18:18:android.content.Context getContext() -> getContext
com.quangph.base.security.Encryptor$Companion -> com.quangph.base.security.Encryptor$Companion:
# {"id":"sourceFile","fileName":"Encryptor.kt"}
    20:20:void <init>() -> <init>
com.quangph.base.security.KeyStorage -> com.quangph.base.security.KeyStorage:
# {"id":"sourceFile","fileName":"KeyStorage.kt"}
    8:8:void <init>() -> <init>
    20:21:java.lang.String getEncryptedKey(android.content.Context) -> getEncryptedKey
    13:17:void saveEncryptedKey(android.content.Context,java.lang.String) -> saveEncryptedKey
com.quangph.base.security.KeyStoreService -> com.quangph.base.security.KeyStoreService:
# {"id":"sourceFile","fileName":"KeyStoreService.kt"}
    22:23:void <init>(android.content.Context) -> <init>
    70:72:java.security.KeyStore createAndroidKeyStore() -> createAndroidKeyStore
    60:66:java.security.KeyPair createKeystoreAsymmetricKey(java.lang.String) -> createKeystoreAsymmetricKey
    55:56:javax.crypto.SecretKey generateDefaultSymmetricKey() -> generateDefaultSymmetricKey
    44:50:java.security.KeyPair getKeyStoreAsymmetricKeyPair(java.lang.String) -> getKeyStoreAsymmetricKeyPair
    30:39:javax.crypto.SecretKey getKeystoreSymmetricKey(java.lang.String) -> getKeystoreSymmetricKey
    92:96:void initGeneratorWithKeyGenParameterSpec(java.security.KeyPairGenerator,java.lang.String) -> initGeneratorWithKeyGenParameterSpec
    77:87:void initGeneratorWithKeyPairGeneratorSpec(java.security.KeyPairGenerator,java.lang.String) -> initGeneratorWithKeyPairGeneratorSpec
com.quangph.base.statemachine.TransitionInfo -> com.quangph.base.statemachine.TransitionInfo:
    6:11:void <init>() -> <init>
com.quangph.base.statemachine.UIState -> com.quangph.base.statemachine.UIState:
    12:15:void <init>() -> <init>
    138:142:boolean checkTransitFromChild() -> checkTransitFromChild
    20:35:void enter() -> enter
    39:52:void exit() -> exit
    103:103:java.lang.String getName() -> getName
    130:135:void handleTransitFrom() -> handleTransitFrom
    113:113:void onEnter() -> onEnter
    114:114:void onExit() -> onExit
    55:64:boolean processMessage(android.os.Message) -> processMessage
    107:108:void setName(java.lang.String) -> setName
    121:122:void setTransitionInfo(com.quangph.base.statemachine.TransitionInfo) -> setTransitionInfo
    111:111:void transitFrom(java.lang.String) -> transitFrom
    110:110:void transitTo(java.lang.String) -> transitTo
com.quangph.base.statemachine.UIStateMachine -> com.quangph.base.statemachine.UIStateMachine:
    23:24:void <clinit>() -> <clinit>
    28:41:void <init>(java.lang.String) -> <init>
    44:51:void addState(java.lang.String,com.quangph.base.statemachine.UIState) -> addState
    54:61:void addState(java.lang.String,com.quangph.base.statemachine.UIState,java.lang.String) -> addState
    143:155:boolean back() -> back
    207:211:void cacheStateInfo(com.quangph.base.statemachine.UIState,java.lang.String) -> cacheStateInfo
    194:194:boolean exits(java.lang.String) -> exits
    214:220:java.util.List findAncestorNames(com.quangph.base.statemachine.core.IState) -> findAncestorNames
    159:162:java.lang.String getCurrentStateName() -> getCurrentStateName
    64:64:com.quangph.base.statemachine.UIState getState(java.lang.String) -> getState
    183:183:void handleMessage(android.os.Message) -> handleMessage
    68:72:void initState(java.lang.String) -> initState
    190:190:boolean isEmpty() -> isEmpty
    224:225:void log(java.lang.String) -> log
    186:186:android.os.Message obtainMessage(int,int,int,java.lang.Object) -> obtainMessage
    81:89:void quit() -> quit
    198:204:void reorderStateStack(java.lang.String) -> reorderStateStack
    166:169:void sendMessage(int) -> sendMessage
    172:175:void sendMessage(int,java.lang.Object) -> sendMessage
    178:181:void sendMessage(android.os.Message) -> sendMessage
    75:78:void start() -> start
    96:140:void transitTo(java.lang.String) -> transitTo
com.quangph.base.statemachine.UIStateMachine$1 -> com.quangph.base.statemachine.UIStateMachine$1:
    34:34:void <init>(com.quangph.base.statemachine.UIStateMachine,java.lang.String,android.os.Looper) -> <init>
    37:39:void unhandledMessage(android.os.Message) -> unhandledMessage
com.quangph.base.statemachine.UIStateMachine$StateInfo -> com.quangph.base.statemachine.UIStateMachine$StateInfo:
    228:228:void <init>() -> <init>
com.quangph.base.statemachine.core.State -> com.quangph.base.statemachine.core.State:
    30:31:void <init>() -> <init>
    38:38:void enter() -> enter
    45:45:void exit() -> exit
    67:69:java.lang.String getName() -> getName
    52:52:boolean processMessage(android.os.Message) -> processMessage
com.quangph.base.statemachine.core.StateMachine -> com.quangph.base.statemachine.core.StateMachine:
    1220:1222:void <init>(java.lang.String,android.os.Looper) -> <init>
    1231:1232:void addState(com.quangph.base.statemachine.core.IState,com.quangph.base.statemachine.core.IState) -> addState
    1258:1259:void addState(com.quangph.base.statemachine.core.IState) -> addState
    1245:1245:com.quangph.base.statemachine.core.IState getCurrentState() -> getCurrentState
    1417:1417:java.lang.String getLogRecString(android.os.Message) -> getLogRecString
    1249:1249:com.quangph.base.statemachine.core.IState getParent(com.quangph.base.statemachine.core.IState) -> getParent
    1327:1327:void haltedProcessMessage(android.os.Message) -> haltedProcessMessage
    1199:1201:void initStateMachine(java.lang.String,android.os.Looper) -> initStateMachine
    1451:1452:android.os.Message obtainMessage(int) -> obtainMessage
    1464:1465:android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    1495:1496:android.os.Message obtainMessage(int,int,int,java.lang.Object) -> obtainMessage
    1335:1335:void onHalting() -> onHalting
    1344:1344:void onQuitting() -> onQuitting
    1590:1592:void quit() -> quit
    1406:1406:boolean recordLogRec(android.os.Message) -> recordLogRec
    1504:1506:void sendMessage(int) -> sendMessage
    1513:1515:void sendMessage(int,java.lang.Object) -> sendMessage
    1522:1524:void sendMessage(android.os.Message) -> sendMessage
    1268:1269:void setInitialState(com.quangph.base.statemachine.core.IState) -> setInitialState
    1628:1631:void start() -> start
    1286:1287:void transitionTo(com.quangph.base.statemachine.core.IState) -> transitionTo
    1319:1320:void unhandledMessage(android.os.Message) -> unhandledMessage
com.quangph.base.statemachine.core.StateMachine$LogRec -> com.quangph.base.statemachine.core.StateMachine$LogRec:
    448:450:void <init>(android.os.Message,java.lang.String,com.quangph.base.statemachine.core.IState,com.quangph.base.statemachine.core.IState) -> <init>
    460:465:void update(android.os.Message,java.lang.String,com.quangph.base.statemachine.core.IState,com.quangph.base.statemachine.core.IState) -> update
com.quangph.base.statemachine.core.StateMachine$LogRecords -> com.quangph.base.statemachine.core.StateMachine$LogRecords:
    546:555:void <init>() -> <init>
    616:627:void add(android.os.Message,java.lang.String,com.quangph.base.statemachine.core.IState,com.quangph.base.statemachine.core.IState) -> add
    586:587:void cleanup() -> cleanup
com.quangph.base.statemachine.core.StateMachine$SmHandler -> com.quangph.base.statemachine.core.StateMachine$SmHandler:
    638:638:void <clinit>() -> <clinit>
    634:1122:void <init>(android.os.Looper,com.quangph.base.statemachine.core.StateMachine) -> <init>
    1082:1108:com.quangph.base.statemachine.core.StateMachine$SmHandler$StateInfo addState(com.quangph.base.statemachine.core.IState,com.quangph.base.statemachine.core.IState) -> addState
    850:865:void cleanupAfterQuitting() -> cleanupAfterQuitting
    871:893:void completeConstruction() -> completeConstruction
    1069:1069:com.quangph.base.statemachine.core.IState getCurrentState() -> getCurrentState
    776:783:com.quangph.base.statemachine.core.IState getParent(com.quangph.base.statemachine.core.IState) -> getParent
    756:773:void handleMessage(android.os.Message) -> handleMessage
    958:963:void invokeEnterMethods(int) -> invokeEnterMethods
    944:952:void invokeExitMethods(com.quangph.base.statemachine.core.StateMachine$SmHandler$StateInfo) -> invokeExitMethods
    1171:1171:boolean isQuit(android.os.Message) -> isQuit
    975:981:void moveDeferredMessageAtFrontOfQueue() -> moveDeferredMessageAtFrontOfQueue
    991:1006:int moveTempStateStackToStateStack() -> moveTempStateStackToStateStack
    798:844:void performTransitions() -> performTransitions
    901:937:void processMsg(android.os.Message) -> processMsg
    1155:1157:void quit() -> quit
    1128:1130:void setInitialState(com.quangph.base.statemachine.core.IState) -> setInitialState
    1044:1056:void setupInitialStateStack() -> setupInitialStateStack
    1027:1037:com.quangph.base.statemachine.core.StateMachine$SmHandler$StateInfo setupTempStateStackWithStatesToEnter(com.quangph.base.statemachine.core.IState) -> setupTempStateStackWithStatesToEnter
    1136:1138:void transitionTo(com.quangph.base.statemachine.core.IState) -> transitionTo
com.quangph.base.statemachine.core.StateMachine$SmHandler$HaltingState -> com.quangph.base.statemachine.core.StateMachine$SmHandler$HaltingState:
    730:730:void <init>(com.quangph.base.statemachine.core.StateMachine$SmHandler) -> <init>
    733:734:boolean processMessage(android.os.Message) -> processMessage
com.quangph.base.statemachine.core.StateMachine$SmHandler$QuittingState -> com.quangph.base.statemachine.core.StateMachine$SmHandler$QuittingState:
    741:741:void <init>(com.quangph.base.statemachine.core.StateMachine$SmHandler) -> <init>
    744:744:boolean processMessage(android.os.Message) -> processMessage
com.quangph.base.statemachine.core.StateMachine$SmHandler$StateInfo -> com.quangph.base.statemachine.core.StateMachine$SmHandler$StateInfo:
    684:684:void <init>(com.quangph.base.statemachine.core.StateMachine$SmHandler) -> <init>
    703:705:java.lang.String toString() -> toString
com.quangph.base.thread.BaseAsyncTask -> com.quangph.base.thread.BaseAsyncTask:
    8:8:void <init>() -> <init>
    8:8:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    17:20:com.quangph.base.thread.BaseAsyncTask$AsyncTaskResult doInBackground(java.lang.Object[]) -> doInBackground
    8:8:void onPostExecute(java.lang.Object) -> onPostExecute
    26:28:void onPostExecute(com.quangph.base.thread.BaseAsyncTask$AsyncTaskResult) -> onPostExecute
com.quangph.base.thread.BaseAsyncTask$AsyncTaskResult -> com.quangph.base.thread.BaseAsyncTask$AsyncTaskResult:
    44:46:void <init>(java.lang.Object) -> <init>
    49:51:void <init>(java.lang.Exception) -> <init>
    40:40:java.lang.Exception getError() -> getError
    36:36:java.lang.Object getResult() -> getResult
com.quangph.base.thread.PostableThread -> com.quangph.base.thread.PostableThread:
    11:12:void <init>(java.lang.String) -> <init>
    40:43:void cancelTask(java.lang.Runnable) -> cancelTask
    46:49:void clearAllTask() -> clearAllTask
    16:18:void onLooperPrepared() -> onLooperPrepared
    28:31:void postTask(java.lang.Runnable) -> postTask
    34:37:void postTaskDelay(java.lang.Runnable,long) -> postTaskDelay
com.quangph.base.thread.SerialExecutor -> com.quangph.base.thread.SerialExecutor:
# {"id":"sourceFile","fileName":"SerialExecutor.kt"}
    10:13:void <init>() -> <init>
    16:16:java.util.ArrayDeque getTasks() -> <init>
    16:16:void <init>():16 -> <init>
    10:10:void <init>() -> <init>
    21:32:void execute(java.lang.Runnable) -> execute
    22:27:void execute$lambda$0(java.lang.Runnable,com.quangph.base.thread.SerialExecutor) -> execute$lambda$0
    17:17:void setActiveTask(java.lang.Runnable) -> getActiveTask
    17:17:java.lang.Runnable getActiveTask():17 -> getActiveTask
    16:16:java.util.ArrayDeque getTasks() -> getTasks
    36:51:void scheduleNext() -> scheduleNext
    17:17:void setActiveTask(java.lang.Runnable) -> setActiveTask
com.quangph.base.thread.SerialExecutor$SyncThreadFactory -> com.quangph.base.thread.SerialExecutor$SyncThreadFactory:
# {"id":"sourceFile","fileName":"SerialExecutor.kt"}
    42:44:void <init>() -> <init>
    47:47:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.quangph.base.tracking.Tracker -> com.quangph.base.tracking.Tracker:
    13:13:void <init>() -> <init>
    25:63:java.lang.Object createTrackerConfig(java.lang.Class,android.app.Activity) -> createTrackerConfig
    78:82:java.lang.String getScreenLabel(java.lang.Class) -> getScreenLabel
    101:105:java.lang.String getScreenLabel(java.lang.reflect.Method) -> getScreenLabel
    67:74:java.lang.String getTrackerValue(java.lang.annotation.Annotation[]) -> getTrackerValue
    86:91:boolean isPayload(java.lang.annotation.Annotation[]) -> isPayload
    21:21:com.quangph.base.tracking.ITrackerBuilder start() -> start
com.quangph.base.tracking.Tracker$1 -> com.quangph.base.tracking.Tracker$1:
    30:30:void <init>(com.quangph.base.tracking.Tracker,java.lang.Class,android.app.Activity) -> <init>
    33:59:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.quangph.base.tracking.impl.BaseTrackerBuilder -> com.quangph.base.tracking.impl.BaseTrackerBuilder:
    12:12:void <init>() -> <init>
    16:23:com.quangph.base.tracking.ITrackerBuilder payload(java.lang.Object) -> payload
com.quangph.base.tracking.impl.firebase.FirebaseTracker -> com.quangph.base.tracking.impl.firebase.FirebaseTracker:
    16:18:void <init>(android.app.Application) -> <init>
    22:22:com.quangph.base.tracking.ITrackerBuilder onCreateTrackerBuilder() -> onCreateTrackerBuilder
com.quangph.base.tracking.impl.firebase.FirebaseTrackerBuilder -> com.quangph.base.tracking.impl.firebase.FirebaseTrackerBuilder:
    18:25:void <init>(android.app.Application) -> <init>
    56:63:void addData(java.lang.String,java.lang.Object) -> addData
    35:36:com.quangph.base.tracking.ITrackerBuilder event(java.lang.String) -> event
    29:30:com.quangph.base.tracking.ITrackerBuilder put(java.lang.String,java.lang.Object) -> put
    41:43:com.quangph.base.tracking.ITrackerBuilder screen(android.app.Activity,java.lang.String) -> screen
    48:53:void track() -> track
com.quangph.base.view.SafeClicked -> com.quangph.base.view.SafeClicked:
    10:10:void <init>() -> <init>
    19:27:void onClick(android.view.View) -> onClick
com.quangph.base.view.drag.FlingHelper -> com.quangph.base.view.drag.FlingHelper:
    17:20:void <init>(android.view.View) -> <init>
    60:74:void onFlingX(int,int,int) -> onFlingX
    31:38:void onScrollX(int,int) -> onScrollX
    41:57:void onScrollX(int,int,int) -> onScrollX
    23:24:void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    27:28:void postOnEndAnimation(java.lang.Runnable) -> postOnEndAnimation
com.quangph.base.view.drag.FlingHelper$FlingRunnable -> com.quangph.base.view.drag.FlingHelper$FlingRunnable:
    79:83:void <init>(com.quangph.base.view.drag.FlingHelper,android.view.View) -> <init>
    105:107:void onFlingFinished() -> onFlingFinished
    87:102:void run() -> run
com.quangph.base.view.drag.MoveGestureDetector -> com.quangph.base.view.drag.MoveGestureDetector:
    37:41:void <init>(android.view.View,com.quangph.base.view.drag.MoveGestureDetector$MoveGestureListener) -> <init>
    65:65:boolean isMoveToLeft() -> isMoveToLeft
    45:49:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    57:58:void scrollXToLeft() -> scrollXToLeft
    61:62:void scrollXToRight() -> scrollXToRight
    53:54:void setGestureListener(com.quangph.base.view.drag.MoveGestureDetector$IOnGestureListener) -> setGestureListener
com.quangph.base.view.drag.MoveGestureDetector$MoveGestureListener -> com.quangph.base.view.drag.MoveGestureDetector$MoveGestureListener:
    80:86:void <init>() -> <init>
    290:292:boolean canMoveToLeft(float,android.view.MotionEvent) -> canMoveToLeft
    296:298:boolean canMoveToRight(float,android.view.MotionEvent) -> canMoveToRight
    364:365:double getAngle(float,float,float,float) -> getAngle
    342:360:com.quangph.base.view.drag.SWIPE_DIRECTION getDirectionX(android.view.MotionEvent,android.view.MotionEvent) -> getDirectionX
    282:282:float getLeftBound(float,android.view.MotionEvent) -> getLeftBound
    286:286:float getRightBound(float,android.view.MotionEvent) -> getRightBound
    89:92:void init() -> init
    96:97:boolean onDown(android.view.MotionEvent) -> onDown
    144:243:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    102:139:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    276:278:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    248:271:boolean onUp(android.view.MotionEvent) -> onUp
    302:309:void scrollXToLeft() -> scrollXToLeft
    312:319:void scrollXToRight() -> scrollXToRight
    322:338:void setGestureListener(com.quangph.base.view.drag.MoveGestureDetector$IOnGestureListener) -> setGestureListener
com.quangph.base.view.drag.MoveGestureDetector$MoveGestureListener$1 -> com.quangph.base.view.drag.MoveGestureDetector$MoveGestureListener$1:
    324:324:void <init>(com.quangph.base.view.drag.MoveGestureDetector$MoveGestureListener) -> <init>
    327:328:void run() -> run
com.quangph.base.view.drag.MoveGestureDetector$MoveGestureListener$2 -> com.quangph.base.view.drag.MoveGestureDetector$MoveGestureListener$2:
    330:330:void <init>(com.quangph.base.view.drag.MoveGestureDetector$MoveGestureListener) -> <init>
    333:335:void run() -> run
com.quangph.base.view.drag.SWIPE_DIRECTION -> com.quangph.base.view.drag.SWIPE_DIRECTION:
    6:6:com.quangph.base.view.drag.SWIPE_DIRECTION[] $values() -> $values
    6:7:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
    25:28:com.quangph.base.view.drag.SWIPE_DIRECTION directionXFromAngle(double) -> directionXFromAngle
    10:20:com.quangph.base.view.drag.SWIPE_DIRECTION fromAngle(double) -> fromAngle
    33:33:boolean inRange(double,float,float) -> inRange
    6:6:com.quangph.base.view.drag.SWIPE_DIRECTION valueOf(java.lang.String) -> valueOf
    6:6:com.quangph.base.view.drag.SWIPE_DIRECTION[] values() -> values
com.quangph.base.view.recyclerview.UIJobScheduler -> com.quangph.base.view.recyclerview.UIJobScheduler:
    17:19:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    34:46:void internalSubmitJob() -> internalSubmitJob
    49:57:void onNextFrame() -> onNextFrame
    22:31:void submitJob(com.quangph.base.view.recyclerview.UIJobScheduler$IUIJob) -> submitJob
com.quangph.base.view.recyclerview.UIJobScheduler$1 -> com.quangph.base.view.recyclerview.UIJobScheduler$1:
    24:24:void <init>() -> <init>
    27:28:void run() -> run
com.quangph.base.view.recyclerview.UIJobScheduler$2 -> com.quangph.base.view.recyclerview.UIJobScheduler$2:
    49:49:void <init>() -> <init>
    52:55:void doFrame(long) -> doFrame
com.quangph.base.view.recyclerview.adapter.BaseRclvAdapter -> com.quangph.base.view.recyclerview.adapter.BaseRclvAdapter:
    23:28:void <init>() -> <init>
    23:32:void <init>(android.content.Context) -> <init>
    89:90:void addItem(java.lang.Object) -> addItem
    97:99:void addItemAndNotify(java.lang.Object) -> addItemAndNotify
    111:112:void addItemAtIndex(java.lang.Object,int) -> addItemAtIndex
    102:104:void addItemAtIndexAndNotify(int,java.lang.Object) -> addItemAtIndexAndNotify
    93:94:void addItems(java.util.List) -> addItems
    115:118:void addItemsAndNotify(java.util.List) -> addItemsAndNotify
    107:108:void addItemsAtIndex(java.util.List,int) -> addItemsAtIndex
    137:138:void clearData() -> clearData
    63:63:int getItemCount() -> getItemCount
    67:67:java.lang.Object getItemDataAtPosition(int) -> getItemDataAtPosition
    21:21:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    21:21:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    49:50:void onBindViewHolder(com.quangph.base.view.recyclerview.adapter.BaseRclvHolder,int) -> onBindViewHolder
    54:59:void onBindViewHolder(com.quangph.base.view.recyclerview.adapter.BaseRclvHolder,int,java.util.List) -> onBindViewHolder
    21:21:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    37:43:com.quangph.base.view.recyclerview.adapter.BaseRclvHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    74:86:void onPreInflate(int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> onPreInflate
    132:134:void remove(int) -> remove
    121:123:void removeItemAndNotify(int) -> removeItemAndNotify
    126:129:void reset(java.util.List) -> reset
com.quangph.base.view.recyclerview.adapter.BaseRclvAdapter$1 -> com.quangph.base.view.recyclerview.adapter.BaseRclvAdapter$1:
    76:76:void <init>(com.quangph.base.view.recyclerview.adapter.BaseRclvAdapter,androidx.recyclerview.widget.RecyclerView$LayoutParams,java.util.Stack,int) -> <init>
    79:82:void onInflateFinished(android.view.View,int,android.view.ViewGroup) -> onInflateFinished
com.quangph.base.view.recyclerview.adapter.BaseRclvHolder -> com.quangph.base.view.recyclerview.adapter.BaseRclvHolder:
    17:18:void <init>(android.view.View) -> <init>
    21:31:void clickOn(android.view.View,android.view.View$OnClickListener) -> clickOn
    33:33:void onBind(java.lang.Object) -> onBind
    34:34:void onBind(java.lang.Object,java.util.List) -> onBind
com.quangph.base.view.recyclerview.adapter.BaseRclvHolder$1 -> com.quangph.base.view.recyclerview.adapter.BaseRclvHolder$1:
    22:22:void <init>(com.quangph.base.view.recyclerview.adapter.BaseRclvHolder,android.view.View$OnClickListener) -> <init>
    25:28:void onSafeClicked(android.view.View) -> onSafeClicked
com.quangph.base.view.recyclerview.adapter.BaseVHData -> com.quangph.base.view.recyclerview.adapter.BaseVHData:
    20:21:void <init>() -> <init>
    24:25:void <init>(java.lang.Object) -> <init>
    12:30:void <init>(java.lang.Object,com.quangph.base.view.recyclerview.adapter.BaseVHData$IItemStatus) -> <init>
com.quangph.base.view.recyclerview.adapter.BaseVHData$STATUS -> com.quangph.base.view.recyclerview.adapter.BaseVHData$STATUS:
    8:8:com.quangph.base.view.recyclerview.adapter.BaseVHData$STATUS[] $values() -> $values
    8:9:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    8:8:com.quangph.base.view.recyclerview.adapter.BaseVHData$STATUS valueOf(java.lang.String) -> valueOf
    8:8:com.quangph.base.view.recyclerview.adapter.BaseVHData$STATUS[] values() -> values
com.quangph.base.view.recyclerview.adapter.group.GroupData -> com.quangph.base.view.recyclerview.adapter.group.GroupData:
    14:19:void <init>(java.lang.Object) -> <init>
    34:35:void attach() -> attach
    38:43:void attachAndNotify() -> attachAndNotify
    70:70:boolean containPosition(int) -> containPosition
    46:47:void detach() -> detach
    50:56:void detachAndNotify() -> detachAndNotify
    142:142:int getAdapterPositionFromGroupPosition(int) -> getAdapterPositionFromGroupPosition
    30:30:int getItemViewType(int) -> getItemViewType
    26:26:int getLayoutResource(int) -> getLayoutResource
    63:66:int[] getRange() -> getRange
    154:155:void gone() -> gone
    150:151:void hide() -> hide
    59:59:boolean isAttached() -> isAttached
    138:138:int mapAdapterPositionToGroupPosition(int) -> mapAdapterPositionToGroupPosition
    126:127:void notifyChange(java.lang.Object) -> notifyChange
    97:101:void notifyChanged(int) -> notifyChanged
    104:108:void notifyChanged(int,java.lang.Object) -> notifyChanged
    111:115:void notifyChanged(int,int,java.lang.Object) -> notifyChanged
    118:119:void notifyChanged() -> notifyChanged
    122:123:void notifyDataSetChanged() -> notifyDataSetChanged
    86:94:void notifyInserted(int,int) -> notifyInserted
    74:77:void notifyRemove(int) -> notifyRemove
    80:83:void notifyRemove(int,int) -> notifyRemove
    130:131:void notifySelfInserted() -> notifySelfInserted
    134:135:void notifySelfRemoved() -> notifySelfRemoved
    158:174:void reset(java.lang.Object) -> reset
    22:23:void setGroupManager(com.quangph.base.view.recyclerview.adapter.group.GroupManager) -> setGroupManager
    146:147:void show() -> show
com.quangph.base.view.recyclerview.adapter.group.GroupManager -> com.quangph.base.view.recyclerview.adapter.group.GroupManager:
    21:25:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    43:50:void addGroupData(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> addGroupData
    53:61:void addGroupDataAtIndex(int,com.quangph.base.view.recyclerview.adapter.group.GroupData) -> addGroupDataAtIndex
    38:40:void addRawGroupData(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> addRawGroupData
    33:35:void addRawGroupDataAtIndex(int,com.quangph.base.view.recyclerview.adapter.group.GroupData) -> addRawGroupDataAtIndex
    265:268:void checkToDetach(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> checkToDetach
    244:252:void clear() -> clear
    220:232:int findAdapterPositionForGroup(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> findAdapterPositionForGroup
    209:216:com.quangph.base.view.recyclerview.adapter.group.GroupData findGroupDataByAdapterPosition(int) -> findGroupDataByAdapterPosition
    82:82:java.util.List getDataSet() -> getDataSet
    237:240:int getIndexOfGroupData(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> getIndexOfGroupData
    86:92:int getItemCount() -> getItemCount
    135:139:java.lang.Object getItemDataAtAdapterPosition(int) -> getItemDataAtAdapterPosition
    106:110:int getItemViewType(int) -> getItemViewType
    96:102:int getLayoutResource(int) -> getLayoutResource
    161:162:void notifyChanged(com.quangph.base.view.recyclerview.adapter.group.GroupData,int) -> notifyChanged
    165:166:void notifyChanged(com.quangph.base.view.recyclerview.adapter.group.GroupData,int,java.lang.Object) -> notifyChanged
    169:170:void notifyChanged(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> notifyChanged
    173:174:void notifyChanged(com.quangph.base.view.recyclerview.adapter.group.GroupData,java.lang.Object) -> notifyChanged
    177:178:void notifyChanged(int,int,java.lang.Object) -> notifyChanged
    192:206:void notifyDataSetChanged() -> notifyDataSetChanged
    156:158:void notifyInserted(com.quangph.base.view.recyclerview.adapter.group.GroupData,int,int) -> notifyInserted
    144:147:void notifyRemove(com.quangph.base.view.recyclerview.adapter.group.GroupData,int) -> notifyRemove
    150:153:void notifyRemove(com.quangph.base.view.recyclerview.adapter.group.GroupData,int,int) -> notifyRemove
    181:189:void notityNewGroupAdded(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> notityNewGroupAdded
    125:127:void onBindViewHolder(com.quangph.base.view.recyclerview.adapter.group.GroupRclvVH,int) -> onBindViewHolder
    130:132:void onBindViewHolder(com.quangph.base.view.recyclerview.adapter.group.GroupRclvVH,int,java.util.List) -> onBindViewHolder
    115:121:com.quangph.base.view.recyclerview.adapter.BaseRclvHolder onCreateVH(android.view.View,int) -> onCreateVH
    64:71:void removeGroup(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> removeGroup
    74:79:void removeGroupWithoutNotify(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> removeGroupWithoutNotify
    255:262:void shiftAdapterPosition(com.quangph.base.view.recyclerview.adapter.group.GroupData,int) -> shiftAdapterPosition
com.quangph.base.view.recyclerview.adapter.group.GroupRclvAdapter -> com.quangph.base.view.recyclerview.adapter.group.GroupRclvAdapter:
    19:21:void <init>() -> <init>
    72:73:void addGroup(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> addGroup
    76:77:void addGroupDataAtIndex(int,com.quangph.base.view.recyclerview.adapter.group.GroupData) -> addGroupDataAtIndex
    113:114:void addRawGroupAtIndex(int,com.quangph.base.view.recyclerview.adapter.group.GroupData) -> addRawGroupAtIndex
    92:93:void clear() -> clear
    96:96:com.quangph.base.view.recyclerview.adapter.group.GroupManager getGroupManager() -> getGroupManager
    109:109:int getIndexOfGroup(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> getIndexOfGroup
    25:25:int getItemCount() -> getItemCount
    64:64:java.lang.Object getItemDataAtPosition(int) -> getItemDataAtPosition
    30:30:int getItemViewType(int) -> getItemViewType
    35:35:int getLayoutResource(int) -> getLayoutResource
    100:105:int getPositionInGroup(int) -> getPositionInGroup
    68:69:void notifyAllGroupChanged() -> notifyAllGroupChanged
    16:16:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    16:16:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    45:51:void onBindViewHolder(com.quangph.base.view.recyclerview.adapter.BaseRclvHolder,int) -> onBindViewHolder
    55:60:void onBindViewHolder(com.quangph.base.view.recyclerview.adapter.BaseRclvHolder,int,java.util.List) -> onBindViewHolder
    40:40:com.quangph.base.view.recyclerview.adapter.BaseRclvHolder onCreateVH(android.view.View,int) -> onCreateVH
    80:83:void removeGroup(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> removeGroup
    86:89:void removeGroupWithoutNotify(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> removeGroupWithoutNotify
com.quangph.base.view.recyclerview.adapter.group.GroupRclvVH -> com.quangph.base.view.recyclerview.adapter.group.GroupRclvVH:
    15:16:void <init>(android.view.View) -> <init>
com.quangph.base.view.recyclerview.dragdrophelper.ItemTouchHelperAdapter -> com.quangph.base.view.recyclerview.dragdrophelper.ItemTouchHelperAdapter:
# {"id":"sourceFile","fileName":"ItemTouchHelperAdapter.kt"}
com.quangph.base.view.recyclerview.dragdrophelper.ItemTouchHelperViewHolder -> com.quangph.base.view.recyclerview.dragdrophelper.ItemTouchHelperViewHolder:
# {"id":"sourceFile","fileName":"ItemTouchHelperViewHolder.kt"}
com.quangph.base.view.recyclerview.dragdrophelper.OnStartDragListener -> com.quangph.base.view.recyclerview.dragdrophelper.OnStartDragListener:
# {"id":"sourceFile","fileName":"OnStartDragListener.kt"}
com.quangph.base.view.recyclerview.dragdrophelper.SimpleItemTouchHelperCallback -> com.quangph.base.view.recyclerview.dragdrophelper.SimpleItemTouchHelperCallback:
# {"id":"sourceFile","fileName":"SimpleItemTouchHelperCallback.kt"}
    8:8:void <init>(com.quangph.base.view.recyclerview.dragdrophelper.ItemTouchHelperAdapter) -> <init>
    73:82:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearView
    8:8:com.quangph.base.view.recyclerview.dragdrophelper.ItemTouchHelperAdapter getMAdapter() -> getMAdapter
    22:29:int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMovementFlags
    18:18:boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    14:14:boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    49:57:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    34:40:boolean onMove(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMove
    62:70:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
    45:46:void onSwiped(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSwiped
com.quangph.base.view.recyclerview.dragdrophelper.SimpleItemTouchHelperCallback$Companion -> com.quangph.base.view.recyclerview.dragdrophelper.SimpleItemTouchHelperCallback$Companion:
# {"id":"sourceFile","fileName":"SimpleItemTouchHelperCallback.kt"}
    9:9:void <init>() -> <init>
com.quangph.base.view.recyclerview.kt.IOnBind -> com.quangph.base.view.recyclerview.kt.IOnBind:
# {"id":"sourceFile","fileName":"IOnBind.kt"}
com.quangph.base.view.recyclerview.kt.KRclvAdapter -> com.quangph.base.view.recyclerview.kt.KRclvAdapter:
# {"id":"sourceFile","fileName":"KRclvAdapter.kt"}
    12:12:void <init>() -> <init>
    14:14:int getLayoutResource(int) -> getLayoutResource
    18:18:com.quangph.base.view.recyclerview.adapter.BaseRclvHolder onCreateVH(android.view.View,int) -> onCreateVH
    12:12:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    22:25:com.quangph.base.view.recyclerview.adapter.BaseRclvHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.quangph.base.view.recyclerview.kt.KRclvVHInfo -> com.quangph.base.view.recyclerview.kt.KRclvVHInfo:
# {"id":"sourceFile","fileName":"KRclvVHInfo.kt"}
    16:16:void <init>() -> <init>
    18:20:void <init>(int) -> <init>
    34:34:int adapterPosition() -> adapterPosition
    38:45:void clickOn(android.view.View,kotlin.jvm.functions.Function0) -> clickOn
    26:26:android.view.View createItemView(android.view.LayoutInflater,android.view.ViewGroup) -> createItemView
    22:22:androidx.recyclerview.widget.RecyclerView$ViewHolder getViewHolder() -> getViewHolder
    29:29:void onBind(android.view.View,java.lang.Object) -> onBind
    31:31:void onBind(android.view.View,java.lang.Object,java.util.List) -> onBind
    23:23:void onInitView(android.view.View) -> onInitView
    22:22:void setViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setViewHolder
com.quangph.base.view.recyclerview.kt.KRclvVHInfo$clickOn$1 -> com.quangph.base.view.recyclerview.kt.KRclvVHInfo$clickOn$1:
# {"id":"sourceFile","fileName":"KRclvVHInfo.kt"}
    38:38:void <init>(com.quangph.base.view.recyclerview.kt.KRclvVHInfo,kotlin.jvm.functions.Function0) -> <init>
    40:43:void onSafeClicked(android.view.View) -> onSafeClicked
com.quangph.base.view.recyclerview.kt.KVH -> com.quangph.base.view.recyclerview.kt.KVH:
# {"id":"sourceFile","fileName":"KVH.kt"}
    9:14:void <init>(android.view.View,com.quangph.base.view.recyclerview.kt.IOnBind) -> <init>
    9:9:android.view.View getContainerView() -> getContainerView
    17:19:void onBind(java.lang.Object) -> onBind
    22:24:void onBind(java.lang.Object,java.util.List) -> onBind
com.quangph.base.viewbinder.ViewBinder -> com.quangph.base.viewbinder.ViewBinder:
    17:17:void <init>() -> <init>
    25:32:void bind(android.view.View,java.lang.Object) -> bind
    35:42:void bind(android.app.Activity) -> bind
    45:46:void bind(android.view.View) -> bind
    49:56:void bind(android.app.Activity,java.lang.Object) -> bind
    82:89:void bind(java.lang.Class,android.view.View) -> bind
    135:139:void bindAttributesForCompoundView(android.view.View,android.util.AttributeSet,int[]) -> bindAttributesForCompoundView
    129:132:void bindAttributesForView(android.view.View,android.util.AttributeSet,int[]) -> bindAttributesForView
    142:150:void bindAttrsForClass(java.lang.Class,android.view.View,android.content.res.TypedArray) -> bindAttrsForClass
    71:79:void compoundView(android.view.ViewGroup) -> compoundView
    183:192:java.lang.Class getAnnoSuperClass(java.lang.Class) -> getAnnoSuperClass
    107:116:int getViewLayout(java.lang.Object) -> getViewLayout
    120:124:int getViewLayout(java.lang.Class) -> getViewLayout
    196:197:boolean isCompound(java.lang.Class) -> isCompound
    153:180:void setAttrsVal(android.view.View,java.lang.reflect.Field,android.content.res.TypedArray,com.quangph.base.viewbinder.Attrs) -> setAttrsVal
    60:68:void setFieldValue(java.lang.reflect.Field,java.lang.Object,com.quangph.base.viewbinder.ViewFinder) -> setFieldValue
com.quangph.base.viewbinder.ViewFinder -> com.quangph.base.viewbinder.ViewFinder:
    9:9:void <init>() -> <init>
com.quangph.base.viewbinder.ViewFinder$ByActivity -> com.quangph.base.viewbinder.ViewFinder$ByActivity:
    27:29:void <init>(android.app.Activity) -> <init>
    33:33:android.view.View findViewById(int) -> findViewById
com.quangph.base.viewbinder.ViewFinder$ByView -> com.quangph.base.viewbinder.ViewFinder$ByView:
    15:17:void <init>(android.view.View) -> <init>
    21:21:android.view.View findViewById(int) -> findViewById
com.quangph.base.viewmodel.DefaultDelayObserverFactory -> com.quangph.base.viewmodel.DefaultDelayObserverFactory:
    15:15:void <init>() -> <init>
    19:24:com.quangph.base.viewmodel.observer.IDelayObserver create(androidx.lifecycle.Observer,boolean) -> create
com.quangph.base.viewmodel.DelayObserverFactory -> com.quangph.base.viewmodel.DelayObserverFactory:
    10:10:void <init>() -> <init>
com.quangph.base.viewmodel.ISaveState -> com.quangph.base.viewmodel.ISaveState:
# {"id":"sourceFile","fileName":"ISaveState.kt"}
com.quangph.base.viewmodel.IStoreData -> com.quangph.base.viewmodel.IStoreData:
# {"id":"sourceFile","fileName":"IStoreData.kt"}
com.quangph.base.viewmodel.IStoreDataObserver -> com.quangph.base.viewmodel.IStoreDataObserver:
# {"id":"sourceFile","fileName":"IStoreDataObserver.kt"}
com.quangph.base.viewmodel.KAutoSaveViewModel -> com.quangph.base.viewmodel.KAutoSaveViewModel:
# {"id":"sourceFile","fileName":"KAutoSaveViewModel.kt"}
    16:18:void <init>() -> <init>
    36:36:kotlin.properties.ReadWriteProperty autoSave(java.lang.Object) -> autoSave
    35:35:kotlin.properties.ReadWriteProperty autoSave$default(com.quangph.base.viewmodel.KAutoSaveViewModel,java.lang.Object,int,java.lang.Object) -> autoSave$default
    40:40:kotlin.properties.ReadWriteProperty autoSaveListLiveData(java.util.ArrayList) -> autoSaveListLiveData
    39:39:kotlin.properties.ReadWriteProperty autoSaveListLiveData$default(com.quangph.base.viewmodel.KAutoSaveViewModel,java.util.ArrayList,int,java.lang.Object) -> autoSaveListLiveData$default
    29:31:kotlin.properties.ReadWriteProperty autoSaveLiveData(java.lang.Object) -> autoSaveLiveData
    28:28:kotlin.properties.ReadWriteProperty autoSaveLiveData$default(com.quangph.base.viewmodel.KAutoSaveViewModel,java.lang.Object,int,java.lang.Object) -> autoSaveLiveData$default
    44:44:kotlin.properties.ReadWriteProperty autoSaveMapLiveData(java.util.Map) -> autoSaveMapLiveData
    43:43:kotlin.properties.ReadWriteProperty autoSaveMapLiveData$default(com.quangph.base.viewmodel.KAutoSaveViewModel,java.util.Map,int,java.lang.Object) -> autoSaveMapLiveData$default
    25:26:void restoreInstanceState(android.os.Bundle) -> restoreInstanceState
    21:22:void saveInstanceState(android.os.Bundle) -> saveInstanceState
com.quangph.base.viewmodel.NotifyViewModel -> com.quangph.base.viewmodel.NotifyViewModel:
    20:23:void <init>() -> <init>
    26:26:com.quangph.base.viewmodel.NotifyViewModel$ObserverInfo bind(androidx.lifecycle.LifecycleOwner) -> bind
    30:37:com.quangph.base.viewmodel.NotifyViewModel$ObserverInfo bind(java.lang.String,androidx.lifecycle.LifecycleOwner) -> bind
    65:65:boolean isActive() -> isActive
    52:54:void notifyActive(androidx.lifecycle.LifecycleOwner,boolean) -> notifyActive
    57:62:void notifyActive(java.lang.String,boolean) -> notifyActive
    41:42:void unbind(androidx.lifecycle.LifecycleOwner) -> unbind
    45:49:void unbind(java.lang.String) -> unbind
com.quangph.base.viewmodel.NotifyViewModel$ObserverInfo -> com.quangph.base.viewmodel.NotifyViewModel$ObserverInfo:
    70:75:void <init>() -> <init>
    120:133:void notifyActive(boolean) -> notifyActive
    136:142:void release() -> release
com.quangph.base.viewmodel.NotifyViewModel$ObserverInfo$DelayObserverInfo -> com.quangph.base.viewmodel.NotifyViewModel$ObserverInfo$DelayObserverInfo:
    145:145:void <init>() -> <init>
    160:161:void release() -> release
    151:157:void setActive(boolean) -> setActive
com.quangph.base.viewmodel.SaveStateData -> com.quangph.base.viewmodel.SaveStateData:
# {"id":"sourceFile","fileName":"SaveStateData.kt"}
    10:15:void <init>() -> <init>
    110:110:java.lang.String createBundleKeyForMapKey(java.lang.String) -> createBundleKeyForMapKey
    114:114:java.lang.String createBundleKeyForMapValue(java.lang.String) -> createBundleKeyForMapValue
    43:43:java.lang.Object getValue(java.lang.String) -> getValue
    39:40:void putValue(java.lang.String,java.lang.Object) -> putValue
    97:106:java.util.Map readMap(java.lang.String,android.os.Bundle) -> readMap
    35:36:void registerObserver(java.lang.String,com.quangph.base.viewmodel.IStoreDataObserver) -> registerObserver
    86:94:void restore(android.os.Bundle,java.lang.String) -> restore
    24:122:void restoreInstanceState(android.os.Bundle) -> restoreInstanceState
    47:66:void save(android.os.Bundle,java.lang.String,java.lang.Object) -> save
    18:118:void saveInstanceState(android.os.Bundle) -> saveInstanceState
    69:83:void writeMap(android.os.Bundle,java.lang.String,java.util.Map) -> writeMap
com.quangph.base.viewmodel.SingleEventData -> com.quangph.base.viewmodel.SingleEventData:
    9:9:void <init>() -> <init>
com.quangph.base.viewmodel.delegate.AutoSaveDelegate -> com.quangph.base.viewmodel.delegate.AutoSaveDelegate:
# {"id":"sourceFile","fileName":"AutoSaveDelegate.kt"}
    10:16:void <init>(com.quangph.base.viewmodel.IStoreData,java.lang.Object) -> <init>
    24:28:java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty) -> getValue
    19:21:void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
com.quangph.base.viewmodel.delegate.AutoSaveListLiveDataDelegate -> com.quangph.base.viewmodel.delegate.AutoSaveListLiveDataDelegate:
# {"id":"sourceFile","fileName":"AutoSaveListLiveDataDelegate.kt"}
    12:13:void <init>(com.quangph.base.viewmodel.IStoreData,java.util.ArrayList) -> <init>
    12:12:com.quangph.base.viewmodel.livedata.collection.ListLiveData access$getValue$p(com.quangph.base.viewmodel.delegate.AutoSaveListLiveDataDelegate) -> access$getValue$p
    12:12:java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty) -> getValue
    25:39:com.quangph.base.viewmodel.livedata.collection.ListLiveData getValue(java.lang.Object,kotlin.reflect.KProperty) -> getValue
    12:12:void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
    22:22:void setValue(java.lang.Object,kotlin.reflect.KProperty,com.quangph.base.viewmodel.livedata.collection.ListLiveData) -> setValue
com.quangph.base.viewmodel.delegate.AutoSaveListLiveDataDelegate$ListLiveDataWrapper -> com.quangph.base.viewmodel.delegate.AutoSaveListLiveDataDelegate$ListLiveDataWrapper:
# {"id":"sourceFile","fileName":"AutoSaveListLiveDataDelegate.kt"}
    43:43:void <init>(java.lang.String,com.quangph.base.viewmodel.IStoreData) -> <init>
    43:43:void setValue(java.lang.Object) -> setValue
    45:47:void setValue(java.util.List) -> setValue
com.quangph.base.viewmodel.delegate.AutoSaveListLiveDataDelegate$getValue$1 -> com.quangph.base.viewmodel.delegate.AutoSaveListLiveDataDelegate$getValue$1:
# {"id":"sourceFile","fileName":"AutoSaveListLiveDataDelegate.kt"}
    32:32:void <init>(com.quangph.base.viewmodel.delegate.AutoSaveListLiveDataDelegate) -> <init>
    34:35:void observe(java.lang.Object) -> observe
com.quangph.base.viewmodel.delegate.AutoSaveLiveDataDelegate -> com.quangph.base.viewmodel.delegate.AutoSaveLiveDataDelegate:
# {"id":"sourceFile","fileName":"AutoSaveLiveDataDelegate.kt"}
    12:13:void <init>(com.quangph.base.viewmodel.IStoreData,java.lang.Object) -> <init>
    12:12:androidx.lifecycle.MutableLiveData access$getValue$p(com.quangph.base.viewmodel.delegate.AutoSaveLiveDataDelegate) -> access$getValue$p
    12:12:java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty) -> getValue
    23:33:androidx.lifecycle.MutableLiveData getValue(java.lang.Object,kotlin.reflect.KProperty) -> getValue
    12:12:void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
    20:20:void setValue(java.lang.Object,kotlin.reflect.KProperty,androidx.lifecycle.MutableLiveData) -> setValue
com.quangph.base.viewmodel.delegate.AutoSaveLiveDataDelegate$MutableLiveDataWraper -> com.quangph.base.viewmodel.delegate.AutoSaveLiveDataDelegate$MutableLiveDataWraper:
# {"id":"sourceFile","fileName":"AutoSaveLiveDataDelegate.kt"}
    37:37:void <init>(java.lang.String,com.quangph.base.viewmodel.IStoreData) -> <init>
    39:41:void setValue(java.lang.Object) -> setValue
com.quangph.base.viewmodel.delegate.AutoSaveLiveDataDelegate$getValue$1 -> com.quangph.base.viewmodel.delegate.AutoSaveLiveDataDelegate$getValue$1:
# {"id":"sourceFile","fileName":"AutoSaveLiveDataDelegate.kt"}
    26:26:void <init>(com.quangph.base.viewmodel.delegate.AutoSaveLiveDataDelegate) -> <init>
    28:29:void observe(java.lang.Object) -> observe
com.quangph.base.viewmodel.delegate.AutoSaveMapLiveDataDelegate -> com.quangph.base.viewmodel.delegate.AutoSaveMapLiveDataDelegate:
# {"id":"sourceFile","fileName":"AutoSaveMapLiveDataDelegate.kt"}
    13:14:void <init>(com.quangph.base.viewmodel.IStoreData,java.util.Map) -> <init>
    13:13:com.quangph.base.viewmodel.livedata.map.MapLiveData access$getValue$p(com.quangph.base.viewmodel.delegate.AutoSaveMapLiveDataDelegate) -> access$getValue$p
    13:13:java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty) -> getValue
    23:33:com.quangph.base.viewmodel.livedata.map.MapLiveData getValue(java.lang.Object,kotlin.reflect.KProperty) -> getValue
    13:13:void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
    20:20:void setValue(java.lang.Object,kotlin.reflect.KProperty,com.quangph.base.viewmodel.livedata.map.MapLiveData) -> setValue
com.quangph.base.viewmodel.delegate.AutoSaveMapLiveDataDelegate$MapLiveDataWraper -> com.quangph.base.viewmodel.delegate.AutoSaveMapLiveDataDelegate$MapLiveDataWraper:
# {"id":"sourceFile","fileName":"AutoSaveMapLiveDataDelegate.kt"}
    37:38:void <init>(java.lang.String,com.quangph.base.viewmodel.IStoreData) -> <init>
    37:37:void setValue(java.lang.Object) -> setValue
    41:43:void setValue(java.util.Map) -> setValue
com.quangph.base.viewmodel.delegate.AutoSaveMapLiveDataDelegate$getValue$1 -> com.quangph.base.viewmodel.delegate.AutoSaveMapLiveDataDelegate$getValue$1:
# {"id":"sourceFile","fileName":"AutoSaveMapLiveDataDelegate.kt"}
    26:26:void <init>(com.quangph.base.viewmodel.delegate.AutoSaveMapLiveDataDelegate) -> <init>
    28:29:void observe(java.lang.Object) -> observe
com.quangph.base.viewmodel.global.pref.IPrefConverter -> com.quangph.base.viewmodel.global.pref.IPrefConverter:
# {"id":"sourceFile","fileName":"IPrefConverter.kt"}
com.quangph.base.viewmodel.livedata.UpdatableLiveData -> com.quangph.base.viewmodel.livedata.UpdatableLiveData:
    20:21:void <init>() -> <init>
    17:25:void <init>(java.lang.Object) -> <init>
    29:33:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    37:47:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    51:61:void removeObservers(androidx.lifecycle.LifecycleOwner) -> removeObservers
    64:67:void update() -> update
com.quangph.base.viewmodel.livedata.UpdatableLiveData$UpdatableLiveDataInfo -> com.quangph.base.viewmodel.livedata.UpdatableLiveData$UpdatableLiveDataInfo:
    74:77:void <init>(com.quangph.base.viewmodel.livedata.IUpdatableObserver,androidx.lifecycle.LifecycleOwner) -> <init>
com.quangph.base.viewmodel.livedata.collection.CollectionLiveData -> com.quangph.base.viewmodel.livedata.collection.CollectionLiveData:
    18:20:void <init>() -> <init>
    18:24:void <init>(java.util.Collection) -> <init>
    63:71:void add(java.lang.Object) -> add
    75:75:void add(int,java.lang.Object) -> add
    83:91:void addAll(java.util.Collection) -> addAll
    111:111:java.util.List getObserverList() -> getObserverList
    28:32:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    78:78:void remove(java.lang.Object) -> remove
    80:80:void remove(int) -> remove
    94:101:void removeAll(java.util.Collection) -> removeAll
    36:46:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    50:60:void removeObservers(androidx.lifecycle.LifecycleOwner) -> removeObservers
    104:104:void replace(int,java.lang.Object) -> replace
    107:108:void reset(java.util.Collection) -> reset
com.quangph.base.viewmodel.livedata.collection.CollectionLiveDataObserver -> com.quangph.base.viewmodel.livedata.collection.CollectionLiveDataObserver:
    8:8:void <init>() -> <init>
    12:12:void onAdd(java.lang.Object,int) -> onAdd
    17:17:void onAddAll(java.util.Collection,int) -> onAddAll
    8:8:void onChanged(java.lang.Object) -> onChanged
    37:37:void onChanged(java.util.Collection) -> onChanged
    22:22:void onRemove(java.lang.Object,int) -> onRemove
    27:27:void onRemoveAll(java.util.Collection) -> onRemoveAll
    32:32:void onReplace(java.lang.Object,java.lang.Object,int) -> onReplace
com.quangph.base.viewmodel.livedata.collection.CollectionLiveDataObserverInfo -> com.quangph.base.viewmodel.livedata.collection.CollectionLiveDataObserverInfo:
    12:15:void <init>(com.quangph.base.viewmodel.livedata.collection.ICollectionLiveDataObserver,androidx.lifecycle.LifecycleOwner) -> <init>
com.quangph.base.viewmodel.livedata.collection.ListLiveData -> com.quangph.base.viewmodel.livedata.collection.ListLiveData:
    12:14:void <init>() -> <init>
    17:18:void <init>(java.util.List) -> <init>
    22:29:void add(int,java.lang.Object) -> add
    33:41:void remove(java.lang.Object) -> remove
    45:52:void remove(int) -> remove
    56:62:void replace(int,java.lang.Object) -> replace
com.quangph.base.viewmodel.livedata.map.HashMapLiveDataObserver -> com.quangph.base.viewmodel.livedata.map.HashMapLiveDataObserver:
    8:8:void <init>() -> <init>
    8:8:void onChanged(java.lang.Object) -> onChanged
    22:22:void onChanged(java.util.HashMap) -> onChanged
    12:12:void onPut(java.lang.Object,java.lang.Object) -> onPut
    17:17:void onRemove(java.lang.Object) -> onRemove
com.quangph.base.viewmodel.livedata.map.MapLiveData -> com.quangph.base.viewmodel.livedata.map.MapLiveData:
    16:18:void <init>() -> <init>
    22:26:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    57:64:void put(java.lang.Object,java.lang.Object) -> put
    67:74:void remove(java.lang.Object) -> remove
    30:40:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    44:54:void removeObservers(androidx.lifecycle.LifecycleOwner) -> removeObservers
com.quangph.base.viewmodel.livedata.map.MapLiveDataObserverInfo -> com.quangph.base.viewmodel.livedata.map.MapLiveDataObserverInfo:
    13:16:void <init>(com.quangph.base.viewmodel.livedata.map.IMapLiveDataObserver,androidx.lifecycle.LifecycleOwner) -> <init>
com.quangph.base.viewmodel.observer.DelayCollectionObserver -> com.quangph.base.viewmodel.observer.DelayCollectionObserver:
    24:33:void <init>(com.quangph.base.viewmodel.livedata.collection.ICollectionLiveDataObserver,boolean) -> <init>
    197:200:void addTempDataToCache(com.quangph.base.viewmodel.observer.DelayCollectionObserver$TempData) -> addTempDataToCache
    104:104:boolean hasConsumed() -> hasConsumed
    180:183:void initCacheTempData() -> initCacheTempData
    138:149:void obtain(int,java.lang.Object,int) -> obtain
    152:163:void obtain(int,java.lang.Object,java.lang.Object,int) -> obtain
    166:177:void obtain(int,java.util.Collection,int) -> obtain
    186:193:com.quangph.base.viewmodel.observer.DelayCollectionObserver$TempData obtainTempData() -> obtainTempData
    37:44:void onAdd(java.lang.Object,int) -> onAdd
    48:55:void onAddAll(java.util.Collection,int) -> onAddAll
    13:13:void onChanged(java.lang.Object) -> onChanged
    92:100:void onChanged(java.util.Collection) -> onChanged
    114:135:void onNotifyActive() -> onNotifyActive
    59:66:void onRemove(java.lang.Object,int) -> onRemove
    70:77:void onRemoveAll(java.util.Collection) -> onRemoveAll
    81:88:void onReplace(java.lang.Object,java.lang.Object,int) -> onReplace
    109:110:void setActive(boolean) -> setActive
com.quangph.base.viewmodel.observer.DelayCollectionObserver$TempData -> com.quangph.base.viewmodel.observer.DelayCollectionObserver$TempData:
    202:203:void <init>(com.quangph.base.viewmodel.observer.DelayCollectionObserver) -> <init>
    210:215:void reset() -> reset
com.quangph.base.viewmodel.observer.DelayMapObserver -> com.quangph.base.viewmodel.observer.DelayMapObserver:
    20:29:void <init>(com.quangph.base.viewmodel.livedata.map.IMapLiveDataObserver,boolean) -> <init>
    106:109:void addTempDataToCache(com.quangph.base.viewmodel.observer.DelayMapObserver$TempData) -> addTempDataToCache
    33:33:boolean hasConsumed() -> hasConsumed
    112:115:void initCacheTempData() -> initCacheTempData
    94:103:void obtain(int,java.lang.Object,java.lang.Object) -> obtain
    118:125:com.quangph.base.viewmodel.observer.DelayMapObserver$TempData obtainTempData() -> obtainTempData
    12:12:void onChanged(java.lang.Object) -> onChanged
    84:91:void onChanged(java.util.Map) -> onChanged
    43:58:void onNotifyActive() -> onNotifyActive
    62:69:void onPut(java.lang.Object,java.lang.Object) -> onPut
    73:80:void onRemove(java.lang.Object) -> onRemove
    38:39:void setActive(boolean) -> setActive
com.quangph.base.viewmodel.observer.DelayMapObserver$TempData -> com.quangph.base.viewmodel.observer.DelayMapObserver$TempData:
    129:130:void <init>(com.quangph.base.viewmodel.observer.DelayMapObserver) -> <init>
    135:138:void reset() -> reset
com.quangph.base.viewmodel.observer.DelayObserver -> com.quangph.base.viewmodel.observer.DelayObserver:
    10:18:void <init>(androidx.lifecycle.Observer,boolean) -> <init>
    33:33:boolean hasConsumed() -> hasConsumed
    22:29:void onChanged(java.lang.Object) -> onChanged
    43:45:void onNotifyActive() -> onNotifyActive
    38:39:void setActive(boolean) -> setActive
com.quangph.eventbus.EventInfo -> com.quangph.eventbus.EventInfo:
    6:6:void <init>() -> <init>
com.quangph.eventbus.EventMap -> com.quangph.eventbus.EventMap:
    11:15:void <init>() -> <init>
    26:27:void addEventMap(com.quangph.eventbus.EventMap) -> addEventMap
    20:22:com.quangph.eventbus.EventMap$EventBuilder fire(java.lang.Class) -> fire
    30:30:java.util.List getEventInfoSet() -> getEventInfoSet
com.quangph.eventbus.EventMap$EventBuilder -> com.quangph.eventbus.EventMap$EventBuilder:
    34:34:void <init>(com.quangph.eventbus.EventMap) -> <init>
    38:38:com.quangph.eventbus.EventMap$EventBuilder toSubscriber(java.lang.Class) -> toSubscriber
    42:47:com.quangph.eventbus.EventMap$EventBuilder toSubscriber(java.lang.Class,int) -> toSubscriber
com.quangph.eventbus.InternalEvent -> com.quangph.eventbus.InternalEvent:
    11:14:void <init>(com.quangph.eventbus.IEvent,boolean) -> <init>
    21:21:com.quangph.eventbus.IEvent getRootEvent() -> getRootEvent
    17:17:boolean isPostDirect() -> isPostDirect
com.quangph.eventbus.PendingEventBus -> com.quangph.eventbus.PendingEventBus:
    19:38:void <init>() -> <init>
    41:42:void attachToMap(com.quangph.eventbus.EventMap) -> attachToMap
    91:93:void clearAllPendingEventForSubscriber(com.quangph.eventbus.IEventHandler) -> clearAllPendingEventForSubscriber
    105:113:boolean eventHasConfigInMap(com.quangph.eventbus.IEvent) -> eventHasConfigInMap
    101:101:java.lang.String getDefaultSubscriberID(java.lang.Class) -> getDefaultSubscriberID
    25:33:com.quangph.eventbus.PendingEventBus getInstance() -> getInstance
    45:46:void notifyActive(com.quangph.eventbus.IEventHandler) -> notifyActive
    49:50:void notifyInactive(com.quangph.eventbus.IEventHandler) -> notifyInactive
    75:76:void post(com.quangph.eventbus.IEvent) -> post
    87:88:void postPending(com.quangph.eventbus.IEvent) -> postPending
    53:54:void register(com.quangph.eventbus.IEventHandler) -> register
    57:61:void register(java.lang.String,com.quangph.eventbus.IEventHandler) -> register
    96:98:void removeEvent(com.quangph.eventbus.IEvent) -> removeEvent
    64:65:void unregister(com.quangph.eventbus.IEventHandler) -> unregister
    68:72:void unregister(java.lang.String,com.quangph.eventbus.IEventHandler) -> unregister
com.quangph.eventbus.PendingEventBus$BusHandler -> com.quangph.eventbus.PendingEventBus$BusHandler:
    129:131:void <init>(com.quangph.eventbus.PendingEventBus) -> <init>
    240:248:void addPendingEventToPendingSubscriber(com.quangph.eventbus.IEvent) -> addPendingEventToPendingSubscriber
    135:163:void handleMessage(android.os.Message) -> handleMessage
    166:173:void notifyActive(com.quangph.eventbus.IEventHandler) -> notifyActive
    176:182:void notifyInactive(com.quangph.eventbus.IEventHandler) -> notifyInactive
    251:256:void post(com.quangph.eventbus.IEvent) -> post
    259:266:void postPending(com.quangph.eventbus.IEvent) -> postPending
    199:216:void register(com.quangph.eventbus.PendingEventBus$SubscriberInfo) -> register
    269:274:void removeAllPendingEventOfSubscriber(com.quangph.eventbus.IEventHandler) -> removeAllPendingEventOfSubscriber
    277:280:void removePendingEvent(com.quangph.eventbus.IEvent) -> removePendingEvent
    221:237:void unregister(com.quangph.eventbus.PendingEventBus$SubscriberInfo) -> unregister
com.quangph.eventbus.PendingEventBus$SubscriberInfo -> com.quangph.eventbus.PendingEventBus$SubscriberInfo:
    283:283:void <init>(com.quangph.eventbus.PendingEventBus) -> <init>
com.quangph.eventbus.PendingSubscriber -> com.quangph.eventbus.PendingSubscriber:
    23:29:void <init>() -> <init>
    49:50:void addHandledEventInfo(com.quangph.eventbus.EventInfo) -> addHandledEventInfo
    81:85:void addPendingEvent(com.quangph.eventbus.IEvent,com.quangph.eventbus.EventInfo) -> addPendingEvent
    88:95:void addPendingEvent(com.quangph.eventbus.PendingSubscriber$PendingEventInfo) -> addPendingEvent
    70:77:boolean canHandleEvent(com.quangph.eventbus.IEvent) -> canHandleEvent
    98:101:void firePendingEvent() -> firePendingEvent
    58:66:com.quangph.eventbus.EventInfo getEventInfoByEvent(com.quangph.eventbus.IEvent) -> getEventInfoByEvent
    33:46:void onEvent(com.quangph.eventbus.IEvent) -> onEvent
    112:113:void release() -> release
    104:105:void removeAllPendingEvent() -> removeAllPendingEvent
    108:109:void removePendingEvent(com.quangph.eventbus.IEvent) -> removePendingEvent
com.quangph.eventbus.PendingSubscriber$1 -> com.quangph.eventbus.PendingSubscriber$1:
    89:89:void <init>(com.quangph.eventbus.PendingSubscriber) -> <init>
    89:89:int compare(java.lang.Object,java.lang.Object) -> compare
    92:92:int compare(com.quangph.eventbus.PendingSubscriber$PendingEventInfo,com.quangph.eventbus.PendingSubscriber$PendingEventInfo) -> compare
com.quangph.eventbus.PendingSubscriber$EventHandler -> com.quangph.eventbus.PendingSubscriber$EventHandler:
    123:123:void <init>() -> <init>
    132:148:void handleMessage(android.os.Message) -> handleMessage
    151:156:void notAllowExecution() -> notAllowExecution
    159:170:void removeEvent(com.quangph.eventbus.IEvent) -> removeEvent
com.quangph.eventbus.PendingSubscriber$PendingEventInfo -> com.quangph.eventbus.PendingSubscriber$PendingEventInfo:
    116:119:void <init>() -> <init>
com.quangph.jetpack.IJetStackable -> com.quangph.jetpack.IJetStackable:
# {"id":"sourceFile","fileName":"IJetStackable.kt"}
com.quangph.jetpack.IScreenData -> com.quangph.jetpack.IScreenData:
# {"id":"sourceFile","fileName":"IScreenData.kt"}
com.quangph.jetpack.JetActionCallback -> com.quangph.jetpack.JetActionCallback:
    18:22:void <init>(com.quangph.jetpack.IJetContext) -> <init>
    31:45:void onError(com.quangph.base.mvp.action.ActionException) -> onError
    48:51:void onException(com.quangph.jetpack.IJetContext,com.quangph.jetpack.JetException) -> onException
    26:27:void onSuccess(java.lang.Object) -> onSuccess
    54:57:void onUnhandledException(com.quangph.jetpack.IJetContext,java.lang.Throwable) -> onUnhandledException
com.quangph.jetpack.JetActivity -> com.quangph.jetpack.JetActivity:
# {"id":"sourceFile","fileName":"JetActivity.kt"}
    35:35:com.quangph.jetpack.error.INetworkError access$getNetworkError$p(com.quangph.jetpack.JetActivity) -> <init>
    35:35:void <init>():35 -> <init>
    35:35:com.quangph.jetpack.error.INetworkError access$getNetworkError$p(com.quangph.jetpack.JetActivity) -> access$getNetworkError$p
    188:188:boolean allowPushToStack() -> allowPushToStack
    263:267:void createJetNaviIfNeed() -> createJetNaviIfNeed
    106:108:void finish() -> finish
    157:157:android.app.Activity getActivityContext() -> getActivityContext
    290:290:com.quangph.jetpack.IScreenData getInput(com.quangph.jetpack.JetActivity) -> getInput
    199:199:com.quangph.jetpack.error.INetworkError getNetworkError() -> getNetworkError
    300:300:com.quangph.jetpack.IScreenData getOutput(android.content.Intent) -> getOutput
    161:161:java.lang.String getScreenName() -> getScreenName
    218:221:com.quangph.base.tracking.ITrackerConfig getTracker(java.lang.Class) -> getTracker
    192:192:boolean hasLoading() -> hasLoading
    206:206:boolean hasNetworkDetection() -> hasNetworkDetection
    147:148:void hideLoading() -> hideLoading
    151:154:void hideLoading(java.lang.String) -> hideLoading
    237:240:void initLoadingDialogControllerIfNeed() -> initLoadingDialogControllerIfNeed
    243:243:android.net.ConnectivityManager$NetworkCallback initNetworkCallback() -> initNetworkCallback
    226:227:com.quangph.jetpack.navigation.JetNavi naviTo(java.lang.Class,kotlin.jvm.functions.Function1) -> naviTo
    232:233:com.quangph.jetpack.navigation.JetNavi naviTo(android.content.Intent) -> naviTo
    225:225:com.quangph.jetpack.navigation.JetNavi naviTo$default(com.quangph.jetpack.JetActivity,java.lang.Class,kotlin.jvm.functions.Function1,int,java.lang.Object) -> naviTo$default
    180:185:void navigate(java.lang.Class,com.quangph.jetpack.IScreenData,com.quangph.base.common.ActivityNavi$OnActivityResult) -> navigate
    270:270:void navigate(com.quangph.jetpack.JetActivity,com.quangph.jetpack.IScreenData) -> navigate
    275:280:void navigate(com.quangph.jetpack.JetActivity,com.quangph.jetpack.IScreenData,com.quangph.base.common.ActivityNavi$OnActivityResult) -> navigate
    275:280:void navigate(com.quangph.jetpack.JetActivity,com.quangph.jetpack.IScreenData):270 -> navigate
    271:271:void navigate(com.quangph.jetpack.JetActivity,com.quangph.jetpack.IScreenData) -> navigate
    275:280:void navigate(com.quangph.jetpack.JetActivity,com.quangph.jetpack.IScreenData,com.quangph.base.common.ActivityNavi$OnActivityResult) -> navigate
    45:47:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    85:103:void onDestroy() -> onDestroy
    214:214:com.quangph.jetpack.alert.IAlert onInitAlert() -> onInitAlert
    211:211:void onNetworkConnectionTrigger(boolean) -> onNetworkConnectionTrigger
    70:77:void onPause() -> onPause
    50:54:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    126:128:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    57:67:void onResume() -> onResume
    121:123:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    80:82:void onStop() -> onStop
    131:134:void onViewDidCreated(android.os.Bundle) -> onViewDidCreated
    172:172:androidx.fragment.app.FragmentManager requestFragmentManager() -> requestFragmentManager
    304:306:android.content.Intent returnData(com.quangph.jetpack.IScreenData) -> returnData
    165:169:void showAlert(java.lang.String,java.lang.String) -> showAlert
    137:138:void showLoading() -> showLoading
    141:144:void showLoading(java.lang.String) -> showLoading
    111:113:void startActivity(android.content.Intent) -> startActivity
    116:118:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
com.quangph.jetpack.JetActivity$initNetworkCallback$1 -> com.quangph.jetpack.JetActivity$initNetworkCallback$1:
# {"id":"sourceFile","fileName":"JetActivity.kt"}
    243:243:void <init>(com.quangph.jetpack.JetActivity) -> <init>
    245:250:void onAvailable(android.net.Network) -> onAvailable
    247:249:void onAvailable$lambda$0(com.quangph.jetpack.JetActivity) -> onAvailable$lambda$0
    253:258:void onLost(android.net.Network) -> onLost
    255:257:void onLost$lambda$1(com.quangph.jetpack.JetActivity) -> onLost$lambda$1
com.quangph.jetpack.JetApplication -> com.quangph.jetpack.JetApplication:
# {"id":"sourceFile","fileName":"JetApplication.kt"}
    8:10:void <init>() -> <init>
    8:8:java.util.Stack access$getActivityStack$p(com.quangph.jetpack.JetApplication) -> access$getActivityStack$p
    18:18:java.util.Stack getActivityStack() -> getActivityStack
    13:15:void onCreate() -> onCreate
com.quangph.jetpack.JetApplication$StackJetContextLCCallback -> com.quangph.jetpack.JetApplication$StackJetContextLCCallback:
# {"id":"sourceFile","fileName":"JetApplication.kt"}
    23:23:void <init>(com.quangph.jetpack.JetApplication) -> <init>
    25:30:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    48:53:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    39:39:void onActivityPaused(android.app.Activity) -> onActivityPaused
    36:36:void onActivityResumed(android.app.Activity) -> onActivityResumed
    45:45:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    33:33:void onActivityStarted(android.app.Activity) -> onActivityStarted
    42:42:void onActivityStopped(android.app.Activity) -> onActivityStopped
com.quangph.jetpack.JetBottomSheetDialog -> com.quangph.jetpack.JetBottomSheetDialog:
    17:17:void <init>() -> <init>
    23:25:void onCreate(android.os.Bundle) -> onCreate
    29:33:void onDismiss(android.content.DialogInterface) -> onDismiss
    40:41:void setOnDismissListener(com.quangph.jetpack.JetBottomSheetDialog$IOnDismissListener) -> setOnDismissListener
    36:37:void show(androidx.appcompat.app.AppCompatActivity,java.lang.String) -> show
com.quangph.jetpack.JetException -> com.quangph.jetpack.JetException:
    12:13:void <init>() -> <init>
    16:18:void <init>(int) -> <init>
    21:22:void <init>(java.lang.String) -> <init>
    25:27:void <init>(java.lang.String,int) -> <init>
    30:33:void <init>(java.lang.String,int,java.lang.Object) -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    40:42:void <init>(int,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.Throwable) -> <init>
    49:49:int getCode() -> getCode
    53:53:java.lang.Object getPayload() -> getPayload
com.quangph.jetpack.JetFragment -> com.quangph.jetpack.JetFragment:
# {"id":"sourceFile","fileName":"JetFragment.kt"}
    23:23:void <init>() -> <init>
    121:125:void createJetNaviIfNeed() -> createJetNaviIfNeed
    77:77:android.app.Activity getActivityContext() -> getActivityContext
    45:48:com.quangph.base.mvp.IParentPresenter getParentPresenter() -> getParentPresenter
    103:103:java.lang.String getScreenName() -> getScreenName
    107:111:com.quangph.base.tracking.ITrackerConfig getTracker(java.lang.Class) -> getTracker
    65:68:void hideLoading() -> hideLoading
    71:74:void hideLoading(java.lang.String) -> hideLoading
    116:117:com.quangph.jetpack.navigation.JetNavi naviTo(java.lang.Class,kotlin.jvm.functions.Function1) -> naviTo
    115:115:com.quangph.jetpack.navigation.JetNavi naviTo$default(com.quangph.jetpack.JetFragment,java.lang.Class,kotlin.jvm.functions.Function1,int,java.lang.Object) -> naviTo$default
    95:100:void navigate(java.lang.Class,com.quangph.jetpack.IScreenData,com.quangph.base.common.ActivityNavi$OnActivityResult) -> navigate
    128:128:void navigate(androidx.fragment.app.Fragment,com.quangph.jetpack.IScreenData) -> navigate
    133:138:void navigate(androidx.fragment.app.Fragment,com.quangph.jetpack.IScreenData,com.quangph.base.common.ActivityNavi$OnActivityResult) -> navigate
    133:138:void navigate(androidx.fragment.app.Fragment,com.quangph.jetpack.IScreenData):128 -> navigate
    129:129:void navigate(androidx.fragment.app.Fragment,com.quangph.jetpack.IScreenData) -> navigate
    133:138:void navigate(androidx.fragment.app.Fragment,com.quangph.jetpack.IScreenData,com.quangph.base.common.ActivityNavi$OnActivityResult) -> navigate
    36:42:void onDestroyView() -> onDestroyView
    29:33:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    87:87:androidx.fragment.app.FragmentManager requestFragmentManager() -> requestFragmentManager
    81:84:void showAlert(java.lang.String,java.lang.String) -> showAlert
    53:56:void showLoading() -> showLoading
    59:62:void showLoading(java.lang.String) -> showLoading
com.quangph.jetpack.JetMultiDexApplication -> com.quangph.jetpack.JetMultiDexApplication:
# {"id":"sourceFile","fileName":"JetMultiDexApplication.kt"}
    8:9:void <init>() -> <init>
    8:8:java.util.Stack access$getActivityStack$p(com.quangph.jetpack.JetMultiDexApplication) -> access$getActivityStack$p
    17:17:java.util.Stack getActivityStack() -> getActivityStack
    12:14:void onCreate() -> onCreate
com.quangph.jetpack.JetMultiDexApplication$StackJetContextLCCallback -> com.quangph.jetpack.JetMultiDexApplication$StackJetContextLCCallback:
# {"id":"sourceFile","fileName":"JetMultiDexApplication.kt"}
    22:22:void <init>(com.quangph.jetpack.JetMultiDexApplication) -> <init>
    24:29:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    47:52:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    38:38:void onActivityPaused(android.app.Activity) -> onActivityPaused
    35:35:void onActivityResumed(android.app.Activity) -> onActivityResumed
    44:44:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    32:32:void onActivityStarted(android.app.Activity) -> onActivityStarted
    41:41:void onActivityStopped(android.app.Activity) -> onActivityStopped
com.quangph.jetpack.JetTabFragment -> com.quangph.jetpack.JetTabFragment:
    12:15:void <init>() -> <init>
    49:52:com.quangph.jetpack.JetTabFragment$Config getConfig() -> getConfig
    41:41:java.lang.String getName() -> getName
    45:45:boolean isShowing() -> isShowing
    56:56:com.quangph.jetpack.JetTabFragment$Config onCreateConfig() -> onCreateConfig
    19:37:void onShow(boolean,int) -> onShow
com.quangph.jetpack.JetTabFragment$OnShowFragmentCmd -> com.quangph.jetpack.JetTabFragment$OnShowFragmentCmd:
    60:60:void <init>() -> <init>
com.quangph.jetpack.JetTrackerFactory -> com.quangph.jetpack.JetTrackerFactory:
    21:25:void <init>(android.app.Application) -> <init>
    29:34:com.quangph.base.tracking.ITrackerConfig getTracker(android.app.Activity,java.lang.Class) -> getTracker
    38:41:com.quangph.base.tracking.Tracker init(java.lang.Class) -> init
com.quangph.jetpack.alert.HeaderAlert -> com.quangph.jetpack.alert.HeaderAlert:
# {"id":"sourceFile","fileName":"HeaderAlert.kt"}
    16:16:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    16:16:void access$setShowing$p(com.quangph.jetpack.alert.HeaderAlert,boolean) -> access$setShowing$p
    50:52:void addView(android.view.ViewGroup) -> addView
    42:44:void dismiss() -> dismiss
    78:98:void dismissAnim(android.view.ViewGroup) -> dismissAnim
    102:102:void enqueueMessage(java.lang.String,java.lang.String) -> enqueueMessage
    16:16:androidx.appcompat.app.AppCompatActivity getActivity() -> getActivity
    18:18:android.view.ViewGroup getAlertView() -> getAlertView
    17:17:java.lang.String getMessage() -> getMessage
    101:101:void onDismiss() -> onDismiss
    100:100:void onShow(java.lang.String) -> onShow
    18:18:void setAlertView(android.view.ViewGroup) -> setAlertView
    17:17:void setMessage(java.lang.String) -> setMessage
    22:39:void show(java.lang.String,java.lang.String) -> show
    55:75:void showAnim(android.view.ViewGroup,java.lang.String) -> showAnim
com.quangph.jetpack.alert.HeaderAlert$dismissAnim$1 -> com.quangph.jetpack.alert.HeaderAlert$dismissAnim$1:
# {"id":"sourceFile","fileName":"HeaderAlert.kt"}
    83:83:void <init>(com.quangph.jetpack.alert.HeaderAlert) -> <init>
    89:91:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    86:86:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    94:94:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.quangph.jetpack.alert.HeaderAlert$showAnim$1 -> com.quangph.jetpack.alert.HeaderAlert$showAnim$1:
# {"id":"sourceFile","fileName":"HeaderAlert.kt"}
    60:60:void <init>(com.quangph.jetpack.alert.HeaderAlert,java.lang.String) -> <init>
    66:68:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    63:63:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    72:72:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.quangph.jetpack.alert.HeaderAlertDefault -> com.quangph.jetpack.alert.HeaderAlertDefault:
# {"id":"sourceFile","fileName":"HeaderAlertDefault.kt"}
    18:22:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    59:61:void destroy() -> destroy
    23:24:void dismissRunnable$lambda$0(com.quangph.jetpack.alert.HeaderAlertDefault) -> dismissRunnable$lambda$0
    73:109:void enqueueMessage(java.lang.String,java.lang.String) -> enqueueMessage
    90:95:int getStatusBarHeight(android.content.Context) -> getStatusBarHeight
    27:27:android.view.ViewGroup onCreateView(androidx.appcompat.app.AppCompatActivity,java.lang.String) -> onCreateView
    64:70:void onDismiss() -> onDismiss
    31:56:void onViewCreated(android.view.ViewGroup,java.lang.String) -> onViewCreated
    53:53:void onViewCreated$lambda$1(android.view.View) -> onViewCreated$lambda$1
com.quangph.jetpack.alert.HeaderAlertDefault$MessageInfo -> com.quangph.jetpack.alert.HeaderAlertDefault$MessageInfo:
# {"id":"sourceFile","fileName":"HeaderAlertDefault.kt"}
    99:99:void <init>() -> <init>
    101:101:java.lang.String getMsg() -> getMsg
    100:100:java.lang.String getType() -> getType
    104:104:boolean isSame(java.lang.String) -> isSame
    101:101:void setMsg(java.lang.String) -> setMsg
    100:100:void setType(java.lang.String) -> setType
com.quangph.jetpack.alert.IAlert -> com.quangph.jetpack.alert.IAlert:
# {"id":"sourceFile","fileName":"IAlert.kt"}
com.quangph.jetpack.autobg.AutoBackgroundDrawable -> com.quangph.jetpack.autobg.AutoBackgroundDrawable:
    15:19:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:48:boolean isStateful() -> isStateful
    23:43:boolean onStateChange(int[]) -> onStateChange
com.quangph.jetpack.autobg.AutoBgImageView -> com.quangph.jetpack.autobg.AutoBgImageView:
    18:19:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    23:25:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
com.quangph.jetpack.error.INetworkError -> com.quangph.jetpack.error.INetworkError:
# {"id":"sourceFile","fileName":"INetworkError.kt"}
com.quangph.jetpack.error.NetworkErrorImpl -> com.quangph.jetpack.error.NetworkErrorImpl:
# {"id":"sourceFile","fileName":"NetworkErrorImpl.kt"}
    12:17:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    12:12:java.lang.String getNetworkErrorAlert() -> getNetworkErrorAlert
    20:22:void onNetworkConnected() -> onNetworkConnected
    25:40:void onNetworkError(com.quangph.jetpack.IJetContext) -> onNetworkError
    12:12:void setNetworkErrorAlert(java.lang.String) -> setNetworkErrorAlert
com.quangph.jetpack.gallery.CameraCaptureSupport -> com.quangph.jetpack.gallery.CameraCaptureSupport:
# {"id":"sourceFile","fileName":"CameraCaptureSupport.kt"}
    19:19:void <init>() -> <init>
    19:19:com.quangph.jetpack.gallery.MediaGallery access$getPhotoCameraTemp$p(com.quangph.jetpack.gallery.CameraCaptureSupport) -> access$getPhotoCameraTemp$p
    24:46:void captureTempPhoto(com.quangph.jetpack.JetActivity,kotlin.jvm.functions.Function1) -> captureTempPhoto
    23:23:void captureTempPhoto$default(com.quangph.jetpack.gallery.CameraCaptureSupport,com.quangph.jetpack.JetActivity,kotlin.jvm.functions.Function1,int,java.lang.Object) -> captureTempPhoto$default
    49:62:java.io.File createImageFile(com.quangph.jetpack.JetActivity) -> createImageFile
    66:67:java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
com.quangph.jetpack.gallery.CameraCaptureSupport$captureTempPhoto$1 -> com.quangph.jetpack.gallery.CameraCaptureSupport$captureTempPhoto$1:
# {"id":"sourceFile","fileName":"CameraCaptureSupport.kt"}
    39:39:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    40:43:void invoke(int,android.content.Intent) -> invoke
com.quangph.jetpack.gallery.MediaGallery -> com.quangph.jetpack.gallery.MediaGallery:
# {"id":"sourceFile","fileName":"MediaGallery.kt"}
    10:34:void <init>() -> <init>
    36:53:void <init>(android.os.Parcel) -> <init>
    10:10:java.lang.Object clone() -> clone
    64:64:int describeContents() -> describeContents
    33:33:com.quangph.jetpack.gallery.MediaGallery$MediaType getMediaType() -> getMediaType
    31:31:java.lang.String getPath() -> getPath
    34:34:long getSize() -> getSize
    32:32:com.quangph.jetpack.gallery.MediaGallery$SourceType getSourceType() -> getSourceType
    30:30:java.lang.String getTimestamp() -> getTimestamp
    33:33:void setMediaType(com.quangph.jetpack.gallery.MediaGallery$MediaType) -> setMediaType
    31:31:void setPath(java.lang.String) -> setPath
    34:34:void setSize(long) -> setSize
    32:32:void setSourceType(com.quangph.jetpack.gallery.MediaGallery$SourceType) -> setSourceType
    30:30:void setTimestamp(java.lang.String) -> setTimestamp
    56:61:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.quangph.jetpack.gallery.MediaGallery$CREATOR -> com.quangph.jetpack.gallery.MediaGallery$CREATOR:
# {"id":"sourceFile","fileName":"MediaGallery.kt"}
    20:20:void <init>() -> <init>
    20:20:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    22:22:com.quangph.jetpack.gallery.MediaGallery createFromParcel(android.os.Parcel) -> createFromParcel
    20:20:java.lang.Object[] newArray(int) -> newArray
    26:26:com.quangph.jetpack.gallery.MediaGallery[] newArray(int) -> newArray
com.quangph.jetpack.gallery.MediaGallery$MediaType -> com.quangph.jetpack.gallery.MediaGallery$MediaType:
# {"id":"sourceFile","fileName":"MediaGallery.kt"}
    16:17:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
com.quangph.jetpack.gallery.MediaGallery$SourceType -> com.quangph.jetpack.gallery.MediaGallery$SourceType:
# {"id":"sourceFile","fileName":"MediaGallery.kt"}
    12:12:void <clinit>() -> <clinit>
    11:11:void <init>(java.lang.String,int) -> <init>
com.quangph.jetpack.imageloader.IImageLoader -> com.quangph.jetpack.imageloader.IImageLoader:
# {"id":"sourceFile","fileName":"IImageLoader.kt"}
com.quangph.jetpack.imageloader.IImageLoader$CornerType -> com.quangph.jetpack.imageloader.IImageLoader$CornerType:
# {"id":"sourceFile","fileName":"IImageLoader.kt"}
    16:30:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
com.quangph.jetpack.imageloader.ImageLoaderFactory -> com.quangph.jetpack.imageloader.ImageLoaderFactory:
# {"id":"sourceFile","fileName":"ImageLoaderFactory.kt"}
    8:8:void <init>() -> <init>
    11:11:com.quangph.jetpack.imageloader.IImageLoader glide() -> glide
com.quangph.jetpack.imageloader.glide.BitmapTransformation -> com.quangph.jetpack.imageloader.glide.BitmapTransformation:
    20:20:void <init>() -> <init>
    44:45:void setCanvasBitmapDensity(android.graphics.Bitmap,android.graphics.Bitmap) -> setCanvasBitmapDensity
    24:39:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
com.quangph.jetpack.imageloader.glide.GlideImageLoader -> com.quangph.jetpack.imageloader.glide.GlideImageLoader:
# {"id":"sourceFile","fileName":"GlideImageLoader.kt"}
    28:28:void <init>() -> <init>
    180:186:void loadBitmap(android.app.Activity,java.lang.String,kotlin.jvm.functions.Function1) -> loadBitmap
    155:156:void loadCircleImage(android.view.View,java.lang.String,android.widget.ImageView) -> loadCircleImage
    159:160:void loadCircleImage(android.view.View,java.io.File,android.widget.ImageView) -> loadCircleImage
    163:164:void loadCircleImage(android.view.View,android.graphics.Bitmap,android.widget.ImageView) -> loadCircleImage
    167:168:void loadCircleImage(android.view.View,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable) -> loadCircleImage
    31:36:void loadImage(android.app.Activity,java.lang.String,android.widget.ImageView,boolean) -> loadImage
    39:44:void loadImage(androidx.fragment.app.Fragment,java.lang.String,android.widget.ImageView,boolean) -> loadImage
    51:59:void loadImage(android.view.View,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,boolean) -> loadImage
    68:88:void loadImage(android.view.View,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,boolean,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> loadImage
    171:177:void loadImageNoCache(android.view.View,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable) -> loadImageNoCache
    91:92:void loadRoundCornerImage(android.view.View,java.lang.String,android.widget.ImageView,int) -> loadRoundCornerImage
    95:105:void loadRoundCornerImage(android.view.View,java.lang.String,android.widget.ImageView,int,com.quangph.jetpack.imageloader.IImageLoader$CornerType) -> loadRoundCornerImage
    108:121:void loadRoundCornerImage(android.view.View,java.lang.String,android.widget.ImageView,int,com.quangph.jetpack.imageloader.IImageLoader$CornerType,android.graphics.drawable.Drawable) -> loadRoundCornerImage
    124:152:void loadRoundCornerImage(android.view.View,java.lang.String,android.widget.ImageView,int,com.quangph.jetpack.imageloader.IImageLoader$CornerType,android.graphics.drawable.Drawable,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> loadRoundCornerImage
com.quangph.jetpack.imageloader.glide.GlideImageLoader$loadBitmap$1 -> com.quangph.jetpack.imageloader.glide.GlideImageLoader$loadBitmap$1:
# {"id":"sourceFile","fileName":"GlideImageLoader.kt"}
    181:181:void <init>(kotlin.jvm.functions.Function1) -> <init>
    181:181:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    183:184:void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition) -> onResourceReady
com.quangph.jetpack.imageloader.glide.GlideImageLoader$loadImage$5 -> com.quangph.jetpack.imageloader.glide.GlideImageLoader$loadImage$5:
# {"id":"sourceFile","fileName":"GlideImageLoader.kt"}
    75:75:void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> <init>
    77:78:boolean onLoadFailed(com.bumptech.glide.load.engine.GlideException,java.lang.Object,com.bumptech.glide.request.target.Target,boolean) -> onLoadFailed
    75:75:boolean onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean) -> onResourceReady
    82:83:boolean onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean) -> onResourceReady
com.quangph.jetpack.imageloader.glide.GlideImageLoader$loadRoundCornerImage$1 -> com.quangph.jetpack.imageloader.glide.GlideImageLoader$loadRoundCornerImage$1:
# {"id":"sourceFile","fileName":"GlideImageLoader.kt"}
    139:139:void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> <init>
    141:142:boolean onLoadFailed(com.bumptech.glide.load.engine.GlideException,java.lang.Object,com.bumptech.glide.request.target.Target,boolean) -> onLoadFailed
    139:139:boolean onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean) -> onResourceReady
    146:147:boolean onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean) -> onResourceReady
com.quangph.jetpack.imageloader.glide.RoundedCornersTransformation -> com.quangph.jetpack.imageloader.glide.RoundedCornersTransformation:
    29:30:void <init>(int,int) -> <init>
    32:37:void <init>(int,int,com.quangph.jetpack.imageloader.glide.RoundedCornersTransformation$CornerType) -> <init>
    121:124:void drawBottomLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawBottomLeftRoundRect
    127:130:void drawBottomRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawBottomRightRoundRect
    138:140:void drawBottomRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawBottomRoundRect
    177:181:void drawDiagonalFromTopLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawDiagonalFromTopLeftRoundRect
    184:188:void drawDiagonalFromTopRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawDiagonalFromTopRightRoundRect
    143:145:void drawLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawLeftRoundRect
    165:168:void drawOtherBottomLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawOtherBottomLeftRoundRect
    171:174:void drawOtherBottomRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawOtherBottomRightRoundRect
    153:156:void drawOtherTopLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawOtherTopLeftRoundRect
    159:162:void drawOtherTopRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawOtherTopRightRoundRect
    148:150:void drawRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawRightRoundRect
    54:106:void drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawRoundRect
    109:112:void drawTopLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawTopLeftRoundRect
    115:118:void drawTopRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawTopRightRoundRect
    133:135:void drawTopRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawTopRoundRect
    195:195:boolean equals(java.lang.Object) -> equals
    199:199:int hashCode() -> hashCode
    191:191:java.lang.String toString() -> toString
    40:50:android.graphics.Bitmap transform(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    203:204:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.quangph.jetpack.imageloader.glide.RoundedCornersTransformation$1 -> com.quangph.jetpack.imageloader.glide.RoundedCornersTransformation$1:
    56:56:void <clinit>() -> <clinit>
com.quangph.jetpack.imageloader.glide.RoundedCornersTransformation$CornerType -> com.quangph.jetpack.imageloader.glide.RoundedCornersTransformation$CornerType:
    206:206:com.quangph.jetpack.imageloader.glide.RoundedCornersTransformation$CornerType[] $values() -> $values
    206:221:void <clinit>() -> <clinit>
    223:224:void <init>(java.lang.String,int) -> <init>
    206:206:com.quangph.jetpack.imageloader.glide.RoundedCornersTransformation$CornerType valueOf(java.lang.String) -> valueOf
    206:206:com.quangph.jetpack.imageloader.glide.RoundedCornersTransformation$CornerType[] values() -> values
com.quangph.jetpack.kotlin.ComparatorElement -> com.quangph.jetpack.kotlin.ComparatorElement:
# {"id":"sourceFile","fileName":"ComparatorElement.kt"}
    6:6:void <init>(java.util.Set,java.util.Set) -> <init>
    7:7:void <init>() -> <init>
    8:8:void <init>(com.quangph.jetpack.kotlin.ComparatorElement,com.quangph.jetpack.kotlin.ComparatorElement) -> <init>
    6:6:int compareTo(java.lang.Object) -> compareTo
    11:14:int compareTo(com.quangph.jetpack.kotlin.ComparatorElement) -> compareTo
    6:6:java.util.Set getLarger() -> getLarger
    6:6:java.util.Set getSmaller() -> getSmaller
com.quangph.jetpack.kotlin.SingletonHolder -> com.quangph.jetpack.kotlin.SingletonHolder:
# {"id":"sourceFile","fileName":"SingletonHolder.kt"}
    6:7:void <init>(kotlin.jvm.functions.Function1) -> <init>
    11:21:java.lang.Object getInstance(java.lang.Object) -> getInstance
com.quangph.jetpack.kotlin.parcel.KParcelable -> com.quangph.jetpack.kotlin.parcel.KParcelable:
# {"id":"sourceFile","fileName":"KParcelable.kt"}
com.quangph.jetpack.kotlin.parcel.KParcelable$DefaultImpls -> com.quangph.jetpack.kotlin.parcel.KParcelable$DefaultImpls:
# {"id":"sourceFile","fileName":"KParcelable.kt"}
    11:11:java.lang.Object clone(com.quangph.jetpack.kotlin.parcel.KParcelable) -> clone
com.quangph.jetpack.loading.ILoadingDialogController -> com.quangph.jetpack.loading.ILoadingDialogController:
# {"id":"sourceFile","fileName":"ILoadingDialogController.kt"}
com.quangph.jetpack.loading.LoadingDialog -> com.quangph.jetpack.loading.LoadingDialog:
# {"id":"sourceFile","fileName":"LoadingDialog.kt"}
    12:14:void <init>(android.content.Context) -> <init>
    25:31:void onBackPressed() -> onBackPressed
    17:22:void onCreate(android.os.Bundle) -> onCreate
    21:21:void onCreate$lambda$0(android.content.DialogInterface) -> onCreate$lambda$0
com.quangph.jetpack.loading.LoadingDialogConfig -> com.quangph.jetpack.loading.LoadingDialogConfig:
# {"id":"sourceFile","fileName":"LoadingDialogConfig.kt"}
    6:6:void <init>() -> <init>
    8:8:boolean finishWhenCancelLoading() -> finishWhenCancelLoading
com.quangph.jetpack.loading.LoadingDialogController -> com.quangph.jetpack.loading.LoadingDialogController:
# {"id":"sourceFile","fileName":"LoadingDialogController.kt"}
    8:14:void <init>(android.content.Context) -> <init>
    17:18:void enable(boolean) -> enable
    41:42:void hide() -> hide
    45:52:void hide(java.lang.String) -> hide
    21:22:void show() -> show
    25:38:void show(java.lang.String) -> show
com.quangph.jetpack.navigation.ActivityNaviSource -> com.quangph.jetpack.navigation.ActivityNaviSource:
# {"id":"sourceFile","fileName":"ActivityNaviSource.kt"}
    10:10:void <init>(android.app.Activity) -> <init>
    13:13:android.content.Context getContext() -> getContext
    17:18:void startActivity(android.content.Intent) -> startActivity
    21:22:void startActivityForResult(int,android.content.Intent) -> startActivityForResult
com.quangph.jetpack.navigation.FragmentNaviSource -> com.quangph.jetpack.navigation.FragmentNaviSource:
# {"id":"sourceFile","fileName":"FragmentNaviSource.kt"}
    10:10:void <init>(androidx.fragment.app.Fragment) -> <init>
    12:12:android.content.Context getContext() -> getContext
    16:17:void startActivity(android.content.Intent) -> startActivity
    20:21:void startActivityForResult(int,android.content.Intent) -> startActivityForResult
com.quangph.jetpack.navigation.INaviSource -> com.quangph.jetpack.navigation.INaviSource:
# {"id":"sourceFile","fileName":"INaviSource.kt"}
com.quangph.jetpack.navigation.JetNavi -> com.quangph.jetpack.navigation.JetNavi:
# {"id":"sourceFile","fileName":"JetNavi.kt"}
    13:16:void <init>(com.quangph.jetpack.navigation.INaviSource) -> <init>
    35:37:com.quangph.jetpack.navigation.JetNavi naviTo(java.lang.Class,kotlin.jvm.functions.Function1) -> naviTo
    41:45:com.quangph.jetpack.navigation.JetNavi naviTo(android.content.Intent) -> naviTo
    19:23:boolean onActivityResult(int,int,android.content.Intent) -> onActivityResult
    27:28:void onDestroy() -> onDestroy
    31:32:void onDestroyView() -> onDestroyView
    49:51:com.quangph.jetpack.navigation.JetNavi with(kotlin.jvm.functions.Function2) -> with
com.quangph.jetpack.navigation.JetNavi$JetNaviInfo -> com.quangph.jetpack.navigation.JetNavi$JetNaviInfo:
# {"id":"sourceFile","fileName":"JetNavi.kt"}
    65:65:void <init>() -> <init>
    67:67:kotlin.jvm.functions.Function2 getCallback() -> getCallback
    66:66:int getRequestCode() -> getRequestCode
    67:67:void setCallback(kotlin.jvm.functions.Function2) -> setCallback
    68:68:void setIntent(android.content.Intent) -> setIntent
    66:66:void setRequestCode(int) -> setRequestCode
com.quangph.jetpack.network.CheckNetworkConnectionJob -> com.quangph.jetpack.network.CheckNetworkConnectionJob:
# {"id":"sourceFile","fileName":"CheckNetworkConnectionJob.kt"}
    19:22:void <clinit>() -> <clinit>
    15:16:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    15:15:java.lang.String access$getNETWORK_STATE_ACTION$cp() -> access$getNETWORK_STATE_ACTION$cp
    15:15:java.lang.String access$getNETWORK_STATE_KEY$cp() -> access$getNETWORK_STATE_KEY$cp
    28:67:androidx.work.ListenableWorker$Result doWork() -> doWork
com.quangph.jetpack.network.CheckNetworkConnectionJob$Companion -> com.quangph.jetpack.network.CheckNetworkConnectionJob$Companion:
# {"id":"sourceFile","fileName":"CheckNetworkConnectionJob.kt"}
    18:18:void <init>() -> <init>
    21:21:java.lang.String getNETWORK_STATE_ACTION() -> getNETWORK_STATE_ACTION
    22:22:java.lang.String getNETWORK_STATE_KEY() -> getNETWORK_STATE_KEY
com.quangph.jetpack.network.DefaultNetworkManager -> com.quangph.jetpack.network.DefaultNetworkManager:
# {"id":"sourceFile","fileName":"DefaultNetworkManager.kt"}
    27:27:void access$startCheckNetWorkJob(com.quangph.jetpack.network.DefaultNetworkManager,android.content.Context) -> access$getCallback$p
    27:27:kotlin.jvm.functions.Function1 access$getCallback$p(com.quangph.jetpack.network.DefaultNetworkManager):27 -> access$getCallback$p
    27:27:void access$startCheckNetWorkJob(com.quangph.jetpack.network.DefaultNetworkManager,android.content.Context) -> access$haveNetworkConnection
    27:27:boolean access$haveNetworkConnection(com.quangph.jetpack.network.DefaultNetworkManager,android.content.Context):27 -> access$haveNetworkConnection
    27:27:void access$startCheckNetWorkJob(com.quangph.jetpack.network.DefaultNetworkManager,android.content.Context) -> access$isNetworkAvailable$p
    27:27:boolean access$isNetworkAvailable$p(com.quangph.jetpack.network.DefaultNetworkManager):27 -> access$isNetworkAvailable$p
    27:27:void access$startCheckNetWorkJob(com.quangph.jetpack.network.DefaultNetworkManager,android.content.Context) -> access$setNetworkAvailable$p
    27:27:void access$setNetworkAvailable$p(com.quangph.jetpack.network.DefaultNetworkManager,boolean):27 -> access$setNetworkAvailable$p
    27:27:void access$startCheckNetWorkJob(com.quangph.jetpack.network.DefaultNetworkManager,android.content.Context) -> access$startCheckNetWorkJob
com.quangph.jetpack.network.DefaultNetworkManager$Companion -> com.quangph.jetpack.network.DefaultNetworkManager$Companion:
# {"id":"sourceFile","fileName":"DefaultNetworkManager.kt"}
    29:29:void <init>() -> <init>
com.quangph.jetpack.network.DefaultNetworkManager$receiver$1 -> com.quangph.jetpack.network.DefaultNetworkManager$receiver$1:
# {"id":"sourceFile","fileName":"DefaultNetworkManager.kt"}
    39:84:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.quangph.jetpack.network.INetworkManager -> com.quangph.jetpack.network.INetworkManager:
# {"id":"sourceFile","fileName":"INetworkManager.kt"}
com.quangph.jetpack.network.NETWORK_STATUS -> com.quangph.jetpack.network.NETWORK_STATUS:
# {"id":"sourceFile","fileName":"INetworkManager.kt"}
    16:16:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
com.quangph.jetpack.network.NetworkAvailableStatusEvent -> com.quangph.jetpack.network.NetworkAvailableStatusEvent:
# {"id":"sourceFile","fileName":"NetworkAvailableStatusEvent.kt"}
    9:9:void <init>() -> <init>
com.quangph.jetpack.perm.PermsRequest -> com.quangph.jetpack.perm.PermsRequest:
    65:65:boolean hasRequestPerm() -> hasRequestPerm
    54:60:boolean onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    69:73:void release() -> release
com.quangph.jetpack.print.IJetPrinterConfig -> com.quangph.jetpack.print.IJetPrinterConfig:
# {"id":"sourceFile","fileName":"IJetPrinterConfig.kt"}
com.quangph.jetpack.print.JET_PRINTER_TYPE -> com.quangph.jetpack.print.JET_PRINTER_TYPE:
# {"id":"sourceFile","fileName":"JET_PRINTER_TYPE.kt"}
    7:7:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
com.quangph.jetpack.print.JET_PRINT_SIZE -> com.quangph.jetpack.print.JET_PRINT_SIZE:
# {"id":"sourceFile","fileName":"JET_PRINT_SIZE.kt"}
    7:8:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
com.quangph.jetpack.print.JetPrinterProxy -> com.quangph.jetpack.print.JetPrinterProxy:
# {"id":"sourceFile","fileName":"JetPrinterProxy.kt"}
    19:19:void <init>(com.quangph.jetpack.print.IJetPrinterConfig) -> <init>
    49:49:boolean checkBluetoothIntegratedInside(java.lang.String) -> checkBluetoothIntegratedInside
    42:42:com.quangph.jetpack.print.core.aidl.IAIDLPrinterService getAIDLService() -> getAIDLService
    19:19:boolean print(java.lang.Object,int) -> print
    22:35:boolean print(android.graphics.Bitmap,int) -> print
    53:58:boolean printAIDL(android.graphics.Bitmap,int) -> printAIDL
    63:72:boolean printBluetooth(java.lang.String,android.graphics.Bitmap,int,com.quangph.jetpack.print.JET_PRINTER_TYPE) -> printBluetooth
    76:85:boolean printWifi(java.lang.String,android.graphics.Bitmap,int,com.quangph.jetpack.print.JET_PRINTER_TYPE) -> printWifi
com.quangph.jetpack.print.core.IPrinter -> com.quangph.jetpack.print.core.IPrinter:
# {"id":"sourceFile","fileName":"IPrinter.kt"}
com.quangph.jetpack.print.core.aidl.AIDLBitmapPrinter -> com.quangph.jetpack.print.core.aidl.AIDLBitmapPrinter:
# {"id":"sourceFile","fileName":"AIDLBitmapPrinter.kt"}
    13:13:void <init>(com.quangph.jetpack.print.core.aidl.IAIDLPrinterService) -> <init>
    13:13:boolean print(java.lang.Object,int) -> print
    15:33:boolean print(android.graphics.Bitmap,int) -> print
    38:46:java.util.List splitBitmap(android.graphics.Bitmap) -> splitBitmap
com.quangph.jetpack.print.core.aidl.IAIDLPrinterCallback -> com.quangph.jetpack.print.core.aidl.IAIDLPrinterCallback:
# {"id":"sourceFile","fileName":"IAIDLPrinterCallback.kt"}
com.quangph.jetpack.print.core.aidl.IAIDLPrinterService -> com.quangph.jetpack.print.core.aidl.IAIDLPrinterService:
# {"id":"sourceFile","fileName":"IAIDLPrinterService.kt"}
com.quangph.jetpack.print.core.bluetooth.BluetoothListByteArratPrinter -> com.quangph.jetpack.print.core.bluetooth.BluetoothListByteArratPrinter:
# {"id":"sourceFile","fileName":"BluetoothListByteArratPrinter.kt"}
    13:15:void <init>(java.lang.String) -> <init>
    13:13:boolean print(java.lang.Object,int) -> print
    18:44:boolean print(java.util.List,int) -> print
com.quangph.jetpack.print.core.bluetooth.BluetoothPrinter -> com.quangph.jetpack.print.core.bluetooth.BluetoothPrinter:
# {"id":"sourceFile","fileName":"BluetoothPrinter.kt"}
    13:15:void <init>(java.lang.String) -> <init>
    13:13:boolean print(java.lang.Object,int) -> print
    18:44:boolean print(byte[],int) -> print
com.quangph.jetpack.print.core.stream.StreamingListByteArrPrinter -> com.quangph.jetpack.print.core.stream.StreamingListByteArrPrinter:
# {"id":"sourceFile","fileName":"StreamingListByteArrPrinter.kt"}
    11:11:boolean print(java.lang.Object,int) -> <init>
    11:11:void <init>(java.io.OutputStream):11 -> <init>
    11:11:boolean print(java.lang.Object,int) -> print
    19:47:boolean print(java.util.List,int) -> print
com.quangph.jetpack.print.core.stream.StreamingListByteArrPrinter$Companion -> com.quangph.jetpack.print.core.stream.StreamingListByteArrPrinter$Companion:
# {"id":"sourceFile","fileName":"StreamingListByteArrPrinter.kt"}
    14:14:void <init>() -> <init>
com.quangph.jetpack.print.core.stream.StreamingPrinter -> com.quangph.jetpack.print.core.stream.StreamingPrinter:
# {"id":"sourceFile","fileName":"StreamingPrinter.kt"}
    10:10:void <init>(java.io.OutputStream) -> <init>
    10:10:boolean print(java.lang.Object,int) -> print
    17:37:boolean print(byte[],int) -> print
com.quangph.jetpack.print.core.stream.StreamingPrinter$Companion -> com.quangph.jetpack.print.core.stream.StreamingPrinter$Companion:
# {"id":"sourceFile","fileName":"StreamingPrinter.kt"}
    12:12:void <init>() -> <init>
com.quangph.jetpack.print.core.wifi.WifiListByteArrayPrinter -> com.quangph.jetpack.print.core.wifi.WifiListByteArrayPrinter:
# {"id":"sourceFile","fileName":"WifiListByteArrayPrinter.kt"}
    13:16:void <init>(java.lang.String) -> <init>
    13:13:boolean print(java.lang.Object,int) -> print
    19:40:boolean print(java.util.List,int) -> print
com.quangph.jetpack.print.core.wifi.WifiPrinter -> com.quangph.jetpack.print.core.wifi.WifiPrinter:
# {"id":"sourceFile","fileName":"WifiPrinter.kt"}
    12:14:void <init>(java.lang.String) -> <init>
    12:12:boolean print(java.lang.Object,int) -> print
    17:38:boolean print(byte[],int) -> print
com.quangph.jetpack.print.dataadapter.IPrinterDataAdapter -> com.quangph.jetpack.print.dataadapter.IPrinterDataAdapter:
# {"id":"sourceFile","fileName":"IPrinterDataAdapter.kt"}
com.quangph.jetpack.print.dataadapter.esc.ESC_POS_Command -> com.quangph.jetpack.print.dataadapter.esc.ESC_POS_Command:
# {"id":"sourceFile","fileName":"ESC_POS_Command.kt"}
    8:8:void <init>() -> <init>
    36:37:void cutPage(java.io.OutputStream) -> cutPage
    10:11:void initPrinter(java.io.OutputStream) -> initPrinter
    18:21:void printBitmap(java.io.OutputStream,int,int) -> printBitmap
    32:33:void printEnd(java.io.OutputStream) -> printEnd
    24:25:void printLine(java.io.OutputStream,byte[]) -> printLine
    28:29:void printNewLine(java.io.OutputStream) -> printNewLine
    14:15:void setLineFeedAmount(java.io.OutputStream,byte) -> setLineFeedAmount
com.quangph.jetpack.print.dataadapter.esc.ESC_POS_PrinterDataAdapter -> com.quangph.jetpack.print.dataadapter.esc.ESC_POS_PrinterDataAdapter:
# {"id":"sourceFile","fileName":"ESC_POS_PrinterDataAdapter.kt"}
    12:12:void <init>(com.quangph.jetpack.print.dataadapter.esc.IPrinterCommand) -> <init>
    12:12:java.lang.Object generateData(java.lang.Object) -> generateData
    16:70:byte[] generateData(android.graphics.Bitmap) -> generateData
    74:91:java.util.BitSet getBitsImageData(android.graphics.Bitmap) -> getBitsImageData
com.quangph.jetpack.print.dataadapter.esc.IPrinterCommand -> com.quangph.jetpack.print.dataadapter.esc.IPrinterCommand:
# {"id":"sourceFile","fileName":"IPrinterCommand.kt"}
com.quangph.jetpack.print.dataadapter.tsc.TSC_PrinterDataAdapter -> com.quangph.jetpack.print.dataadapter.tsc.TSC_PrinterDataAdapter:
# {"id":"sourceFile","fileName":"TSC_PrinterDataAdapter.kt"}
    12:14:void <init>() -> <init>
    50:62:byte[] bitmap(int,int,int,android.graphics.Bitmap) -> bitmap
    162:165:byte[] byteMerger(byte[],byte[]) -> byteMerger
    29:30:byte[] cls() -> cls
    92:140:android.graphics.Bitmap convertGreyImg(android.graphics.Bitmap) -> convertGreyImg
    44:45:byte[] direction(int) -> direction
    66:74:byte[] downLoadBmpToSendTSCData(android.graphics.Bitmap) -> downLoadBmpToSendTSCData
    39:40:byte[] gapBymm(double,double) -> gapBymm
    12:12:java.lang.Object generateData(java.lang.Object) -> generateData
    17:25:java.util.List generateData(android.graphics.Bitmap) -> generateData
    144:158:byte[] getbmpdataTsc(int[],int,int) -> getbmpdataTsc
    169:170:byte[] print(int) -> print
    34:35:byte[] sizeBymm(double,double) -> sizeBymm
    174:181:byte[] strTobytes(java.lang.String) -> strTobytes
    78:88:android.graphics.Bitmap toGrayscale(android.graphics.Bitmap) -> toGrayscale
com.quangph.jetpack.retrofit.BaseRetrofitConfig -> com.quangph.jetpack.retrofit.BaseRetrofitConfig:
# {"id":"sourceFile","fileName":"RetrofitConfig.kt"}
    24:24:void <init>() -> <init>
    65:69:void configClient(okhttp3.OkHttpClient$Builder) -> configClient
    47:49:retrofit2.Converter$Factory[] getConverterFactories() -> getConverterFactories
    72:77:com.google.gson.Gson getGson() -> getGson
    30:30:retrofit2.Retrofit getRetrofit() -> getRetrofit
    34:43:retrofit2.Retrofit$Builder getRetrofitBuilder() -> getRetrofitBuilder
    53:123:okhttp3.OkHttpClient provideOkHttpClient() -> provideOkHttpClient
com.quangph.jetpack.retrofit.GsonUtcDateAdapter -> com.quangph.jetpack.retrofit.GsonUtcDateAdapter:
# {"id":"sourceFile","fileName":"RetrofitConfig.kt"}
    96:119:void <init>() -> <init>
    96:96:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    109:112:java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    96:96:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    103:103:com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.quangph.jetpack.retrofit.NullOnEmptyConverterFactory -> com.quangph.jetpack.retrofit.NullOnEmptyConverterFactory:
# {"id":"sourceFile","fileName":"RetrofitConfig.kt"}
    82:82:void <init>() -> <init>
    86:87:retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit) -> responseBodyConverter
    88:90:java.lang.Object responseBodyConverter$lambda$0(retrofit2.Converter,okhttp3.ResponseBody) -> responseBodyConverter$lambda$0
com.quangph.jetpack.retrofit.RetroConfigParams -> com.quangph.jetpack.retrofit.RetroConfigParams:
# {"id":"sourceFile","fileName":"RetroConfigParams.kt"}
    7:7:void <init>() -> <init>
    8:8:java.lang.String getType() -> getType
    8:8:void setType(java.lang.String) -> setType
com.quangph.jetpack.retrofit.RetrofitFactory -> com.quangph.jetpack.retrofit.RetrofitFactory:
# {"id":"sourceFile","fileName":"RetrofitFactory.kt"}
    11:13:void <init>() -> <init>
    27:45:java.lang.Object create(java.lang.Class,com.quangph.jetpack.retrofit.RetroConfigParams) -> create
    26:26:java.lang.Object create$default(com.quangph.jetpack.retrofit.RetrofitFactory,java.lang.Class,com.quangph.jetpack.retrofit.RetroConfigParams,int,java.lang.Object) -> create$default
    18:23:java.lang.String createKey(java.lang.Class,com.quangph.jetpack.retrofit.RetroConfigParams) -> createKey
com.quangph.jetpack.retrofit.RetrofitFactory$RetrofitBuilderInfo -> com.quangph.jetpack.retrofit.RetrofitFactory$RetrofitBuilderInfo:
# {"id":"sourceFile","fileName":"RetrofitFactory.kt"}
    50:50:void <init>() -> <init>
    51:51:java.lang.Object getService() -> getService
    52:52:void setParams(com.quangph.jetpack.retrofit.RetroConfigParams) -> setParams
    51:51:void setService(java.lang.Object) -> setService
    55:61:boolean valid(com.quangph.jetpack.retrofit.RetroConfigParams) -> valid
com.quangph.jetpack.view.AutoGridLayout -> com.quangph.jetpack.view.AutoGridLayout:
    30:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    134:146:void addItemView(int) -> addItemView
    105:105:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    19:19:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    93:93:com.quangph.jetpack.view.AutoGridLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    19:19:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    19:19:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    88:88:com.quangph.jetpack.view.AutoGridLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    100:100:com.quangph.jetpack.view.AutoGridLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    121:131:void init(android.util.AttributeSet) -> init
    64:84:void onLayout(boolean,int,int,int,int) -> onLayout
    39:60:void onMeasure(int,int) -> onMeasure
    109:118:void setOnItemClickedListener(com.quangph.jetpack.view.AutoGridLayout$IOnItemClickedListener) -> setOnItemClickedListener
com.quangph.jetpack.view.AutoGridLayout$1 -> com.quangph.jetpack.view.AutoGridLayout$1:
    111:111:void <init>(com.quangph.jetpack.view.AutoGridLayout,com.quangph.jetpack.view.AutoGridLayout$IOnItemClickedListener,int) -> <init>
    114:115:void onClick(android.view.View) -> onClick
com.quangph.jetpack.view.AutoGridLayout$LayoutParams -> com.quangph.jetpack.view.AutoGridLayout$LayoutParams:
    154:155:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    158:159:void <init>(int,int) -> <init>
    162:163:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    167:168:void <init>(com.quangph.jetpack.view.AutoGridLayout$LayoutParams) -> <init>
com.quangph.jetpack.view.BlurringView -> com.quangph.jetpack.view.BlurringView:
    30:31:void <init>(android.content.Context) -> <init>
    34:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    150:154:void blur() -> blur
    102:104:void initializeRenderScript(android.content.Context) -> initializeRenderScript
    158:162:void onDetachedFromWindow() -> onDetachedFromWindow
    57:80:void onDraw(android.graphics.Canvas) -> onDraw
    107:146:boolean prepare() -> prepare
    83:84:void setBlurRadius(int) -> setBlurRadius
    52:53:void setBlurredView(android.view.View) -> setBlurredView
    87:95:void setDownsampleFactor(int) -> setDownsampleFactor
    98:99:void setOverlayColor(int) -> setOverlayColor
com.quangph.jetpack.view.BoundedTextView -> com.quangph.jetpack.view.BoundedTextView:
# {"id":"sourceFile","fileName":"BoundedTextView.kt"}
    12:21:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:53:void init(android.util.AttributeSet) -> init
    42:42:int measureText() -> measureText
    24:29:void onMeasure(int,int) -> onMeasure
com.quangph.jetpack.view.ExpandableLayout -> com.quangph.jetpack.view.ExpandableLayout:
    28:37:void <init>(android.content.Context) -> <init>
    28:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    28:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    28:56:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    165:166:boolean checkExpandableView(android.view.View) -> checkExpandableView
    457:457:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    313:331:boolean collapse(android.view.View,boolean) -> collapse
    379:383:void dispatchOffset(android.view.View,int,int,int,boolean) -> dispatchOffset
    94:94:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    241:259:boolean expand(android.view.View,boolean) -> expand
    154:161:android.view.View findExpandableView() -> findExpandableView
    24:24:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    24:24:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    445:445:com.quangph.jetpack.view.ExpandableLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    24:24:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    24:24:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    24:24:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    24:24:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    440:440:com.quangph.jetpack.view.ExpandableLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    452:452:com.quangph.jetpack.view.ExpandableLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    231:231:long getAnimDuration() -> getAnimDuration
    59:60:void init(android.content.Context) -> init
    170:177:boolean isExpand() -> isExpand
    225:227:boolean isRunningAnimation() -> isRunningAnimation
    99:101:void onAttachedToWindow() -> onAttachedToWindow
    105:123:void onDetachedFromWindow() -> onDetachedFromWindow
    86:90:void onLayout(boolean,int,int,int,int) -> onLayout
    64:82:void onMeasure(int,int) -> onMeasure
    143:151:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    134:138:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    386:401:void performToggleState(android.view.View) -> performToggleState
    335:376:void playCollapseAnima(android.view.View) -> playCollapseAnima
    263:305:void playExpandAnima(android.view.View) -> playExpandAnima
    127:130:void requestLayout() -> requestLayout
    192:192:boolean setExpand(boolean) -> setExpand
    201:213:boolean setExpand(boolean,boolean) -> setExpand
    221:222:void setOnExpandAnimationListener(com.quangph.jetpack.view.ExpandableLayout$IOnExpandAnimationListener) -> setOnExpandAnimationListener
    217:218:void setOnExpandListener(com.quangph.jetpack.view.ExpandableLayout$IOnExpandListener) -> setOnExpandListener
    184:184:boolean toggle() -> toggle
com.quangph.jetpack.view.ExpandableLayout$1 -> com.quangph.jetpack.view.ExpandableLayout$1:
    275:275:void <init>(com.quangph.jetpack.view.ExpandableLayout,android.view.View,int) -> <init>
    278:280:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.quangph.jetpack.view.ExpandableLayout$2 -> com.quangph.jetpack.view.ExpandableLayout$2:
    282:282:void <init>(com.quangph.jetpack.view.ExpandableLayout,android.view.View) -> <init>
    302:302:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    296:297:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    292:292:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    287:287:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.quangph.jetpack.view.ExpandableLayout$3 -> com.quangph.jetpack.view.ExpandableLayout$3:
    346:346:void <init>(com.quangph.jetpack.view.ExpandableLayout,android.view.View,int) -> <init>
    349:351:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.quangph.jetpack.view.ExpandableLayout$4 -> com.quangph.jetpack.view.ExpandableLayout$4:
    353:353:void <init>(com.quangph.jetpack.view.ExpandableLayout,android.view.View) -> <init>
    373:373:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    367:368:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    363:363:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    358:358:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.quangph.jetpack.view.ExpandableLayout$LayoutParams -> com.quangph.jetpack.view.ExpandableLayout$LayoutParams:
    462:475:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    462:480:void <init>(int,int,float) -> <init>
    462:485:void <init>(int,int) -> <init>
    462:490:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    462:496:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    462:501:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    504:505:void setHeight(int) -> setHeight
com.quangph.jetpack.view.ExpandableLayout$SavedState -> com.quangph.jetpack.view.ExpandableLayout$SavedState:
    424:424:void <clinit>() -> <clinit>
    409:411:void <init>(android.os.Parcel) -> <init>
    414:415:void <init>(android.os.Parcelable) -> <init>
    419:421:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.quangph.jetpack.view.ExpandableLayout$SavedState$1 -> com.quangph.jetpack.view.ExpandableLayout$SavedState$1:
    424:424:void <init>() -> <init>
    424:424:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    428:428:com.quangph.jetpack.view.ExpandableLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    424:424:java.lang.Object[] newArray(int) -> newArray
    433:433:com.quangph.jetpack.view.ExpandableLayout$SavedState[] newArray(int) -> newArray
com.quangph.jetpack.view.NonSwipeViewpager -> com.quangph.jetpack.view.NonSwipeViewpager:
    20:21:void <init>(android.content.Context) -> <init>
    24:25:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:47:void enableSwipe(boolean) -> enableSwipe
    38:42:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    29:33:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.quangph.jetpack.view.PinLayout -> com.quangph.jetpack.view.PinLayout:
    20:25:void <init>(android.content.Context) -> <init>
    20:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    141:141:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    145:151:android.view.View findPinableView() -> findPinableView
    18:18:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    18:18:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    129:129:com.quangph.jetpack.view.PinLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    18:18:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    18:18:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    18:18:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    18:18:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    124:124:com.quangph.jetpack.view.PinLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    136:136:com.quangph.jetpack.view.PinLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    155:158:void initAttrs(android.util.AttributeSet) -> initAttrs
    35:120:void onMeasure(int,int) -> onMeasure
com.quangph.jetpack.view.PinLayout$LayoutParams -> com.quangph.jetpack.view.PinLayout$LayoutParams:
    165:170:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    173:174:void <init>(int,int,float) -> <init>
    177:178:void <init>(int,int) -> <init>
    181:182:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    186:187:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    190:191:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
com.quangph.jetpack.view.RatioFrameLayout -> com.quangph.jetpack.view.RatioFrameLayout:
    23:24:void <init>(android.content.Context) -> <init>
    27:29:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:69:void extractRatio(java.lang.String) -> extractRatio
    55:63:void init(android.util.AttributeSet) -> init
    33:44:void onMeasure(int,int) -> onMeasure
    51:52:void setRatio(java.lang.String) -> setRatio
com.quangph.jetpack.view.RatioGroupLayout -> com.quangph.jetpack.view.RatioGroupLayout:
# {"id":"sourceFile","fileName":"RatioGroupLayout.kt"}
    11:17:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    110:110:void autoHeightStretch() -> autoHeightStretch
    112:112:void autoWidthStretch() -> autoWidthStretch
    137:153:int[] calculateMatrixSize() -> calculateMatrixSize
    101:101:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    89:89:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    93:93:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    97:97:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    105:108:void init(android.util.AttributeSet) -> init
    115:134:void measureIntrinsic(int,int) -> measureIntrinsic
    37:86:void onLayout(boolean,int,int,int,int) -> onLayout
    20:34:void onMeasure(int,int) -> onMeasure
com.quangph.jetpack.view.RatioGroupLayout$LayoutParams -> com.quangph.jetpack.view.RatioGroupLayout$LayoutParams:
# {"id":"sourceFile","fileName":"RatioGroupLayout.kt"}
    163:170:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    172:175:void <init>() -> <init>
    177:177:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    178:178:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    179:179:void <init>(int,int) -> <init>
    161:161:int getBottomRowIndex() -> getBottomRowIndex
    158:158:int getLeftColIndex() -> getLeftColIndex
    160:160:int getRightColIndex() -> getRightColIndex
    159:159:int getTopRowIndex() -> getTopRowIndex
    161:161:void setBottomRowIndex(int) -> setBottomRowIndex
    158:158:void setLeftColIndex(int) -> setLeftColIndex
    160:160:void setRightColIndex(int) -> setRightColIndex
    159:159:void setTopRowIndex(int) -> setTopRowIndex
com.quangph.jetpack.view.RatioImageView -> com.quangph.jetpack.view.RatioImageView:
    21:22:void <init>(android.content.Context) -> <init>
    25:27:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:67:void extractRatio(java.lang.String) -> extractRatio
    53:61:void init(android.util.AttributeSet) -> init
    31:42:void onMeasure(int,int) -> onMeasure
    49:50:void setRatio(java.lang.String) -> setRatio
com.quangph.jetpack.view.ShadowLayout -> com.quangph.jetpack.view.ShadowLayout:
    54:55:void <init>(android.content.Context) -> <init>
    58:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    32:65:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    171:186:void init(android.util.AttributeSet) -> init
    202:215:void initContentPath() -> initContentPath
    145:156:void onDraw(android.graphics.Canvas) -> onDraw
    69:141:void onMeasure(int,int) -> onMeasure
    159:162:void setShadowColor(int) -> setShadowColor
    165:168:void setShadowRadius(float) -> setShadowRadius
    196:199:void setupBackgroundPaint() -> setupBackgroundPaint
    189:193:void setupShadowPaint() -> setupShadowPaint
com.quangph.jetpack.view.SimpleTextWatcher -> com.quangph.jetpack.view.SimpleTextWatcher:
# {"id":"sourceFile","fileName":"SimpleTextWatcher.kt"}
    7:7:void <init>() -> <init>
    10:10:void afterTextChanged(android.text.Editable) -> afterTextChanged
    13:13:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    16:16:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.quangph.jetpack.view.SuffixEditText -> com.quangph.jetpack.view.SuffixEditText:
# {"id":"sourceFile","fileName":"SuffixEditText.kt"}
    18:21:void <init>(android.content.Context) -> <init>
    18:24:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    17:17:java.lang.String access$getSuffix$p(com.quangph.jetpack.view.SuffixEditText) -> access$getSuffix$p
    39:44:void getAttributes(android.content.Context,android.util.AttributeSet,int) -> getAttributes
    18:18:android.text.TextPaint getTextPaint() -> getTextPaint
    27:36:void onFinishInflate() -> onFinishInflate
    18:18:void setTextPaint(android.text.TextPaint) -> setTextPaint
com.quangph.jetpack.view.SuffixEditText$TextDrawable -> com.quangph.jetpack.view.SuffixEditText$TextDrawable:
# {"id":"sourceFile","fileName":"SuffixEditText.kt"}
    47:68:void <init>(com.quangph.jetpack.view.SuffixEditText) -> <init>
    50:54:void draw(android.graphics.Canvas) -> draw
    60:60:int getOpacity() -> getOpacity
    57:57:void setAlpha(int) -> setAlpha
    64:64:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.quangph.jetpack.view.SwipeItemView -> com.quangph.jetpack.view.SwipeItemView:
# {"id":"sourceFile","fileName":"SwipeItemView.kt"}
    16:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    16:16:android.view.View access$getSwipeView$p(com.quangph.jetpack.view.SwipeItemView) -> access$getSwipeView$p
    81:92:void enableSwipe(boolean) -> enableSwipe
    84:84:boolean enableSwipe$lambda$1(com.quangph.jetpack.view.SwipeItemView,android.view.View,android.view.MotionEvent) -> enableSwipe$lambda$1
    89:89:boolean enableSwipe$lambda$2(android.view.View,android.view.MotionEvent) -> enableSwipe$lambda$2
    23:23:com.quangph.jetpack.view.SwipeItemView$IOnBoundListener getBoundReachListener() -> getBoundReachListener
    22:22:boolean getEnableSwipe() -> getEnableSwipe
    36:74:void onFinishInflate() -> onFinishInflate
    71:71:boolean onFinishInflate$lambda$0(com.quangph.jetpack.view.SwipeItemView,android.view.View,android.view.MotionEvent) -> onFinishInflate$lambda$0
    77:78:void scrollToRight() -> scrollToRight
    23:23:void setBoundReachListener(com.quangph.jetpack.view.SwipeItemView$IOnBoundListener) -> setBoundReachListener
    22:22:void setEnableSwipe(boolean) -> setEnableSwipe
com.quangph.jetpack.view.SwipeItemView$IOnBoundListener -> com.quangph.jetpack.view.SwipeItemView$IOnBoundListener:
# {"id":"sourceFile","fileName":"SwipeItemView.kt"}
com.quangph.jetpack.view.SwipeItemView$onFinishInflate$1 -> com.quangph.jetpack.view.SwipeItemView$onFinishInflate$1:
# {"id":"sourceFile","fileName":"SwipeItemView.kt"}
    39:39:void <init>(com.quangph.jetpack.view.SwipeItemView) -> <init>
    41:41:float getLeftBound(float,android.view.MotionEvent) -> getLeftBound
    45:45:float getRightBound(float,android.view.MotionEvent) -> getRightBound
    49:49:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.quangph.jetpack.view.SwipeItemView$onFinishInflate$2 -> com.quangph.jetpack.view.SwipeItemView$onFinishInflate$2:
# {"id":"sourceFile","fileName":"SwipeItemView.kt"}
    54:54:void <init>(com.quangph.jetpack.view.SwipeItemView) -> <init>
    57:57:void onChangeState(int,int) -> onChangeState
    64:66:void onEnd(boolean) -> onEnd
    61:61:void onMove(float) -> onMove
com.quangph.jetpack.view.TextDrawable -> com.quangph.jetpack.view.TextDrawable:
# {"id":"sourceFile","fileName":"TextDrawable.kt"}
    309:309:void <clinit>() -> <clinit>
    11:58:void <init>(com.quangph.jetpack.view.TextDrawable$Builder) -> <init>
    69:95:void draw(android.graphics.Canvas) -> draw
    98:108:void drawBorder(android.graphics.Canvas) -> drawBorder
    61:64:int getDarkerShade(int) -> getDarkerShade
    127:127:int getIntrinsicHeight() -> getIntrinsicHeight
    123:123:int getIntrinsicWidth() -> getIntrinsicWidth
    119:119:int getOpacity() -> getOpacity
    111:112:void setAlpha(int) -> setAlpha
    115:116:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.quangph.jetpack.view.TextDrawable$Builder -> com.quangph.jetpack.view.TextDrawable$Builder:
# {"id":"sourceFile","fileName":"TextDrawable.kt"}
    130:168:void <init>() -> <init>
    211:211:com.quangph.jetpack.view.TextDrawable$IConfigBuilder beginConfig() -> beginConfig
    201:202:com.quangph.jetpack.view.TextDrawable$IConfigBuilder bold() -> bold
    260:262:com.quangph.jetpack.view.TextDrawable build(java.lang.String,int) -> build
    245:246:com.quangph.jetpack.view.TextDrawable buildRect(java.lang.String,int) -> buildRect
    255:256:com.quangph.jetpack.view.TextDrawable buildRound(java.lang.String,int) -> buildRound
    250:251:com.quangph.jetpack.view.TextDrawable buildRoundRect(java.lang.String,int,int) -> buildRoundRect
    215:215:com.quangph.jetpack.view.TextDrawable$IShapeBuilder endConfig() -> endConfig
    196:197:com.quangph.jetpack.view.TextDrawable$IConfigBuilder fontSize(int) -> fontSize
    136:136:int getBorderThickness() -> getBorderThickness
    134:134:int getColor() -> getColor
    142:142:android.graphics.Typeface getFont() -> getFont
    148:148:int getFontSize() -> getFontSize
    140:140:int getHeight() -> getHeight
    154:154:float getRadius() -> getRadius
    144:144:android.graphics.drawable.shapes.RectShape getShape() -> getShape
    132:132:java.lang.String getText() -> getText
    146:146:int getTextColor() -> getTextColor
    152:152:boolean getToUpperCase() -> getToUpperCase
    138:138:int getWidth() -> getWidth
    176:177:com.quangph.jetpack.view.TextDrawable$IConfigBuilder height(int) -> height
    150:150:boolean isBold() -> isBold
    219:220:com.quangph.jetpack.view.TextDrawable$IBuilder rect() -> rect
    224:225:com.quangph.jetpack.view.TextDrawable$IBuilder round() -> round
    229:241:com.quangph.jetpack.view.TextDrawable$IBuilder roundRect(int) -> roundRect
    150:150:void setBold(boolean) -> setBold
    136:136:void setBorderThickness(int) -> setBorderThickness
    134:134:void setColor(int) -> setColor
    142:142:void setFont(android.graphics.Typeface) -> setFont
    148:148:void setFontSize(int) -> setFontSize
    140:140:void setHeight(int) -> setHeight
    154:154:void setRadius(float) -> setRadius
    144:144:void setShape(android.graphics.drawable.shapes.RectShape) -> setShape
    132:132:void setText(java.lang.String) -> setText
    146:146:void setTextColor(int) -> setTextColor
    152:152:void setToUpperCase(boolean) -> setToUpperCase
    138:138:void setWidth(int) -> setWidth
    181:182:com.quangph.jetpack.view.TextDrawable$IConfigBuilder textColor(int) -> textColor
    206:207:com.quangph.jetpack.view.TextDrawable$IConfigBuilder toUpperCase() -> toUpperCase
    191:192:com.quangph.jetpack.view.TextDrawable$IConfigBuilder useFont(android.graphics.Typeface) -> useFont
    171:172:com.quangph.jetpack.view.TextDrawable$IConfigBuilder width(int) -> width
    186:187:com.quangph.jetpack.view.TextDrawable$IConfigBuilder withBorder(int) -> withBorder
com.quangph.jetpack.view.TextDrawable$Companion -> com.quangph.jetpack.view.TextDrawable$Companion:
# {"id":"sourceFile","fileName":"TextDrawable.kt"}
    308:308:void <init>() -> <init>
    312:312:com.quangph.jetpack.view.TextDrawable$IShapeBuilder builder() -> builder
com.quangph.jetpack.view.TextDrawable$IBuilder -> com.quangph.jetpack.view.TextDrawable$IBuilder:
# {"id":"sourceFile","fileName":"TextDrawable.kt"}
com.quangph.jetpack.view.TextDrawable$IConfigBuilder -> com.quangph.jetpack.view.TextDrawable$IConfigBuilder:
# {"id":"sourceFile","fileName":"TextDrawable.kt"}
com.quangph.jetpack.view.TextDrawable$IShapeBuilder -> com.quangph.jetpack.view.TextDrawable$IShapeBuilder:
# {"id":"sourceFile","fileName":"TextDrawable.kt"}
com.quangph.jetpack.view.WrapContentViewPager -> com.quangph.jetpack.view.WrapContentViewPager:
# {"id":"sourceFile","fileName":"WrapContentViewPager.kt"}
    12:12:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    15:27:void onMeasure(int,int) -> onMeasure
com.quangph.jetpack.view.ZoomImageView -> com.quangph.jetpack.view.ZoomImageView:
# {"id":"sourceFile","fileName":"ZoomImageView.kt"}
    16:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    156:158:float distance(android.view.MotionEvent) -> distance
    95:137:void fixTransition() -> fixTransition
    22:22:kotlin.jvm.functions.Function0 getOnStartTouchListener() -> getOnStartTouchListener
    24:24:kotlin.jvm.functions.Function0 getOnStopTouchListener() -> getOnStopTouchListener
    162:164:void mid(android.graphics.PointF,android.view.MotionEvent) -> mid
    43:91:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    140:153:void setDefaultScaleTypeMatrix() -> setDefaultScaleTypeMatrix
    22:22:void setOnStartTouchListener(kotlin.jvm.functions.Function0) -> setOnStartTouchListener
    24:24:void setOnStopTouchListener(kotlin.jvm.functions.Function0) -> setOnStopTouchListener
com.quangph.jetpack.view.appbar.TitleBehavior -> com.quangph.jetpack.view.appbar.TitleBehavior:
# {"id":"sourceFile","fileName":"TitleBehavior.kt"}
    18:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    124:127:float calculAboveBaseLine(com.google.android.material.appbar.AppBarLayout) -> calculAboveBaseLine
    87:110:void initIfNeed(android.view.View,com.google.android.material.appbar.AppBarLayout) -> initIfNeed
    93:106:void initIfNeed$lambda$1(com.quangph.jetpack.view.appbar.TitleBehavior,android.view.View,android.view.View,com.google.android.material.appbar.AppBarLayout,int) -> initIfNeed$lambda$1
    45:45:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    52:83:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    113:119:float totalScrollRange(com.google.android.material.appbar.AppBarLayout,android.view.View) -> totalScrollRange
com.quangph.jetpack.view.recyclerview.MaxItemLayoutManager -> com.quangph.jetpack.view.recyclerview.MaxItemLayoutManager:
# {"id":"sourceFile","fileName":"MaxItemLayoutManager.kt"}
    13:43:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
com.quangph.jetpack.view.recyclerview.decor.BottomPaddingDecorator -> com.quangph.jetpack.view.recyclerview.decor.BottomPaddingDecorator:
    21:22:void <init>(int) -> <init>
    24:30:void <init>(android.graphics.drawable.Drawable,int) -> <init>
    60:66:void getDividerOffset(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getDividerOffset
    35:43:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    47:56:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
com.quangph.jetpack.view.recyclerview.decor.DividerDecorator -> com.quangph.jetpack.view.recyclerview.decor.DividerDecorator:
    20:24:void <init>() -> <init>
    20:31:void <init>(android.content.Context,int) -> <init>
    20:35:void <init>(android.graphics.drawable.Drawable) -> <init>
    20:40:void <init>(android.graphics.drawable.Drawable,java.lang.Boolean) -> <init>
    20:45:void <init>(android.content.Context,int,java.lang.Boolean) -> <init>
    102:109:void getDividerOffset(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getDividerOffset
    89:89:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    56:61:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    65:86:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    48:52:void setPadding(int,int,int,int) -> setPadding
com.quangph.jetpack.view.recyclerview.decor.EndPaddingDecorator -> com.quangph.jetpack.view.recyclerview.decor.EndPaddingDecorator:
    15:17:void <init>(int) -> <init>
    22:27:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
com.quangph.jetpack.view.recyclerview.decor.GridDividerItemDecoration -> com.quangph.jetpack.view.recyclerview.decor.GridDividerItemDecoration:
# {"id":"sourceFile","fileName":"GridDividerItemDecoration.kt"}
    11:11:void <init>(int) -> <init>
    14:22:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    35:35:int getItemSpanSize(androidx.recyclerview.widget.RecyclerView,int) -> getItemSpanSize
    32:32:int getTotalSpanCount(androidx.recyclerview.widget.RecyclerView) -> getTotalSpanCount
    25:29:boolean isInFirstRow(int,int,int) -> isInFirstRow
com.quangph.jetpack.view.recyclerview.decor.GridPaddingDecorator -> com.quangph.jetpack.view.recyclerview.decor.GridPaddingDecorator:
    14:16:void <init>(int) -> <init>
    20:22:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
com.quangph.jetpack.view.recyclerview.decor.GridSpacingItemDecoration -> com.quangph.jetpack.view.recyclerview.decor.GridSpacingItemDecoration:
# {"id":"sourceFile","fileName":"GridSpacingItemDecoration.kt"}
    12:12:void <init>(int,int,boolean) -> <init>
    15:31:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
com.quangph.jetpack.view.recyclerview.decor.GroupDividerDecorator -> com.quangph.jetpack.view.recyclerview.decor.GroupDividerDecorator:
# {"id":"sourceFile","fileName":"GroupDividerDecorator.kt"}
    15:18:void <init>(android.content.Context,android.graphics.drawable.Drawable,com.quangph.base.view.recyclerview.adapter.group.GroupManager) -> <init>
    34:42:int getBottomOffset(int) -> getBottomOffset
    28:31:void getDividerOffset(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getDividerOffset
    15:15:com.quangph.base.view.recyclerview.adapter.group.GroupManager getGroupManager() -> getGroupManager
    21:25:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    18:18:int getPadding() -> getPadding
com.quangph.jetpack.view.recyclerview.decor.HiddenOverDividerDecorator -> com.quangph.jetpack.view.recyclerview.decor.HiddenOverDividerDecorator:
# {"id":"sourceFile","fileName":"HiddenOverDividerDecorator.kt"}
    8:8:void <init>(android.content.Context,int) -> <init>
    21:26:void getDividerOffset(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getDividerOffset
    11:18:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    9:9:int getPositionHidden() -> getPositionHidden
    9:9:void setPositionHidden(int) -> setPositionHidden
com.quangph.jetpack.view.recyclerview.decor.OverDividerDecorator -> com.quangph.jetpack.view.recyclerview.decor.OverDividerDecorator:
    20:23:void <init>() -> <init>
    20:27:void <init>(android.content.Context,int) -> <init>
    20:31:void <init>(android.graphics.drawable.Drawable) -> <init>
    79:86:void getDividerOffset(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getDividerOffset
    67:67:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    42:48:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    52:64:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    34:38:void setPadding(int,int,int,int) -> setPadding
com.quangph.jetpack.view.recyclerview.decor.SpaceItemDecoration -> com.quangph.jetpack.view.recyclerview.decor.SpaceItemDecoration:
    17:18:void <init>(int) -> <init>
    20:23:void <init>(int,int) -> <init>
    28:37:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
com.quangph.jetpack.view.recyclerview.decor.StartPaddingDecorator -> com.quangph.jetpack.view.recyclerview.decor.StartPaddingDecorator:
    15:17:void <init>(int) -> <init>
    22:27:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
com.quangph.jetpack.view.recyclerview.decor.TopPaddingDecorator -> com.quangph.jetpack.view.recyclerview.decor.TopPaddingDecorator:
    16:18:void <init>(int) -> <init>
    23:28:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
com.quangph.jetpack.view.recyclerview.wrap.KLoadMoreAdapter -> com.quangph.jetpack.view.recyclerview.wrap.KLoadMoreAdapter:
# {"id":"sourceFile","fileName":"KLoadMoreAdapter.kt"}
    12:21:void <init>() -> <init>
    96:135:void addMoreItem(java.util.List,boolean) -> addMoreItem
    41:44:com.quangph.base.view.recyclerview.kt.KRclvVHInfo createVHInfo(int) -> createVHInfo
    68:69:void enableLoadMore(boolean) -> enableLoadMore
    29:36:int getItemViewType(int) -> getItemViewType
    80:80:int getLatestPageIndex() -> getLatestPageIndex
    88:88:int getLatestPageSize() -> getLatestPageSize
    84:84:int getTotalCount() -> getTotalCount
    72:72:boolean isLoadMoreSupport() -> isLoadMoreSupport
    76:76:boolean isShowingLoadMore() -> isShowingLoadMore
    138:138:int onGetItemViewType(int) -> onGetItemViewType
    48:49:void reset(java.util.List) -> reset
    142:157:void reset(java.util.List,boolean) -> reset
    92:93:void setOnAddItemListener(com.quangph.jetpack.view.recyclerview.wrap.IOnAddItemListener) -> setOnAddItemListener
    52:65:void showLoadMore(boolean) -> showLoadMore
com.quangph.jetpack.view.recyclerview.wrap.KLoadMoreAdapter$Companion -> com.quangph.jetpack.view.recyclerview.wrap.KLoadMoreAdapter$Companion:
# {"id":"sourceFile","fileName":"KLoadMoreAdapter.kt"}
    14:14:void <init>() -> <init>
com.quangph.jetpack.view.recyclerview.wrap.KLoadMoreAdapter$LoadingVH -> com.quangph.jetpack.view.recyclerview.wrap.KLoadMoreAdapter$LoadingVH:
# {"id":"sourceFile","fileName":"KLoadMoreAdapter.kt"}
    166:166:void <init>(com.quangph.jetpack.view.recyclerview.wrap.KLoadMoreAdapter,int) -> <init>
    166:166:void onBind(android.view.View,java.lang.Object) -> onBind
    170:170:void onBind(android.view.View,com.quangph.jetpack.view.recyclerview.wrap.KLoadMoreAdapter$LoadingVHData) -> onBind
com.quangph.jetpack.view.recyclerview.wrap.KLoadMoreAdapter$LoadingVHData -> com.quangph.jetpack.view.recyclerview.wrap.KLoadMoreAdapter$LoadingVHData:
# {"id":"sourceFile","fileName":"KLoadMoreAdapter.kt"}
    160:163:void <init>(java.lang.Void) -> <init>
com.quangph.jetpack.view.recyclerview.wrap.LoadMoreGroupAdapter -> com.quangph.jetpack.view.recyclerview.wrap.LoadMoreGroupAdapter:
# {"id":"sourceFile","fileName":"LoadMoreGroupAdapter.kt"}
    6:12:void <init>() -> <init>
    15:25:void addGroup(com.quangph.base.view.recyclerview.adapter.group.GroupData) -> addGroup
    78:91:void addMoreItem(java.util.List,boolean) -> addMoreItem
    47:48:void enableLoadMore(boolean) -> enableLoadMore
    94:100:com.quangph.jetpack.view.recyclerview.wrap.IGroupDataLoadMore findLoadMoreGroupData() -> findLoadMoreGroupData
    59:60:int getLatestPageIndex() -> getLatestPageIndex
    69:70:int getLatestPageSize() -> getLatestPageSize
    64:65:int getTotalCount() -> getTotalCount
    51:51:boolean isLoadMoreSupport() -> isLoadMoreSupport
    55:55:boolean isShowingLoadMore() -> isShowingLoadMore
    74:75:void setOnAddItemListener(com.quangph.jetpack.view.recyclerview.wrap.IOnAddItemListener) -> setOnAddItemListener
    28:44:void showLoadMore(boolean) -> showLoadMore
com.quangph.jetpack.view.recyclerview.wrap.LoadingGroupData -> com.quangph.jetpack.view.recyclerview.wrap.LoadingGroupData:
# {"id":"sourceFile","fileName":"LoadingGroupData.kt"}
    11:11:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    8:8:int access$getLOADING_TYPE$cp() -> access$getLOADING_TYPE$cp
    19:19:int getCount() -> getCount
    8:8:java.lang.Object getDataInGroup(int) -> getDataInGroup
    15:15:kotlin.Unit getDataInGroup(int) -> getDataInGroup
    31:31:int getItemViewType(int) -> getItemViewType
    35:38:int getLayoutResource(int) -> getLayoutResource
    23:26:com.quangph.base.view.recyclerview.adapter.BaseRclvHolder onCreateVH(android.view.View,int) -> onCreateVH
com.quangph.jetpack.view.recyclerview.wrap.LoadingGroupData$Companion -> com.quangph.jetpack.view.recyclerview.wrap.LoadingGroupData$Companion:
# {"id":"sourceFile","fileName":"LoadingGroupData.kt"}
    10:10:void <init>() -> <init>
    11:11:int getLOADING_TYPE() -> getLOADING_TYPE
com.quangph.jetpack.view.recyclerview.wrap.LoadingGroupData$LoadingVH -> com.quangph.jetpack.view.recyclerview.wrap.LoadingGroupData$LoadingVH:
# {"id":"sourceFile","fileName":"LoadingGroupData.kt"}
    41:41:void <init>(android.view.View) -> <init>
com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView -> com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView:
    38:47:void <init>(android.content.Context) -> <init>
    38:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:59:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    38:65:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    222:223:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    240:241:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    260:261:void compound() -> compound
    290:296:int findAppbarLayoutSize(androidx.coordinatorlayout.widget.CoordinatorLayout) -> findAppbarLayoutSize
    271:286:androidx.coordinatorlayout.widget.CoordinatorLayout findParent() -> findParent
    300:303:int getToolbarHeight() -> getToolbarHeight
    264:268:void init(android.util.AttributeSet) -> init
    307:313:boolean isAppbarExpandFully(androidx.coordinatorlayout.widget.CoordinatorLayout) -> isAppbarExpandFully
    69:124:void onFinishInflate() -> onFinishInflate
    128:153:void onMeasure(int,int) -> onMeasure
    157:171:void onSizeChanged(int,int,int,int) -> onSizeChanged
    230:233:void removeAllItemDecoration() -> removeAllItemDecoration
    226:227:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    236:237:void scrollToPosition(int) -> scrollToPosition
    183:215:void setAdapter(com.quangph.base.view.recyclerview.adapter.BaseRclvAdapter) -> setAdapter
    218:219:void setItemTouchHelper(androidx.recyclerview.widget.ItemTouchHelper) -> setItemTouchHelper
    178:180:void setLayoutManager(androidx.recyclerview.widget.LinearLayoutManager) -> setLayoutManager
    174:175:void setLoadDataListener(com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView$IOnLoadMoreDataListener) -> setLoadDataListener
    256:257:void setMaxHeight(int) -> setMaxHeight
    244:245:void showLoading(boolean) -> showLoading
    248:253:void showNoItem(boolean) -> showNoItem
com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView$1 -> com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView$1:
    74:74:void <init>(com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView) -> <init>
    77:81:void onRefresh() -> onRefresh
com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView$2 -> com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView$2:
    88:88:void <init>(com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView) -> <init>
    91:112:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView$3 -> com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView$3:
    185:185:void <init>(com.quangph.jetpack.view.recyclerview.wrap.WrapRecyclerView,com.quangph.base.view.recyclerview.adapter.BaseRclvAdapter) -> <init>
    199:206:void lambda$onAdded$0() -> lambda$onAdded$0
    188:209:void onAdded(int,int,int) -> onAdded
com.quangph.jetpack.view.report.OnTableScrollChangeListener -> com.quangph.jetpack.view.report.OnTableScrollChangeListener:
# {"id":"sourceFile","fileName":"OnTableScrollChangeListener.kt"}
com.quangph.jetpack.view.report.TableScrollView -> com.quangph.jetpack.view.report.TableScrollView:
# {"id":"sourceFile","fileName":"TableScrollView.kt"}
    13:13:void <init>(android.content.Context) -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    40:44:void onScrollChanged(int,int,int,int) -> onScrollChanged
    18:36:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    47:48:void setOnTableScrollChangeListener(com.quangph.jetpack.view.report.OnTableScrollChangeListener) -> setOnTableScrollChangeListener
com.quangph.jetpack.view.report.cell.IRowRender -> com.quangph.jetpack.view.report.cell.IRowRender:
# {"id":"sourceFile","fileName":"IRowRender.kt"}
com.quangph.pattern.CORBase -> com.quangph.pattern.CORBase:
    13:14:void <init>() -> <init>
    19:23:void execute(java.lang.Object) -> execute
    31:38:boolean executeAndNext(java.lang.Object) -> executeAndNext
    26:27:com.quangph.pattern.CORBase then(com.quangph.pattern.CORBase) -> then
com.quangph.pattern.behavior.Behavior -> com.quangph.pattern.behavior.Behavior:
# {"id":"sourceFile","fileName":"Behavior.kt"}
com.quangph.pattern.behavior.BehaviorAgent -> com.quangph.pattern.behavior.BehaviorAgent:
# {"id":"sourceFile","fileName":"BehaviorAgent.kt"}
    7:10:void <init>() -> <init>
    17:18:void addBehavior(com.quangph.pattern.behavior.Condition,com.quangph.pattern.behavior.Behavior) -> addBehavior
    21:25:void addBehavior(com.quangph.pattern.behavior.Condition,com.quangph.pattern.behavior.Behavior,com.quangph.pattern.behavior.Behavior) -> addBehavior
    80:84:void addToList(com.quangph.pattern.behavior.Behavior,com.quangph.pattern.behavior.Condition) -> addToList
    68:73:void checkCondition(com.quangph.pattern.behavior.Condition,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> checkCondition
    67:67:void checkCondition$default(com.quangph.pattern.behavior.BehaviorAgent,com.quangph.pattern.behavior.Condition,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int,java.lang.Object) -> checkCondition$default
    9:9:com.quangph.pattern.behavior.RuleFactory getRuleFactory() -> getRuleFactory
    76:76:boolean matchCondition(com.quangph.pattern.behavior.Condition) -> matchCondition
    48:65:void run(com.quangph.pattern.behavior.Condition) -> run
    28:45:void runAll() -> runAll
    9:9:void setRuleFactory(com.quangph.pattern.behavior.RuleFactory) -> setRuleFactory
com.quangph.pattern.behavior.BehaviorAgent$BehaviorInfo -> com.quangph.pattern.behavior.BehaviorAgent$BehaviorInfo:
# {"id":"sourceFile","fileName":"BehaviorAgent.kt"}
    87:87:void <init>(com.quangph.pattern.behavior.BehaviorAgent) -> <init>
    89:89:com.quangph.pattern.behavior.Behavior getBehavior() -> getBehavior
    88:88:com.quangph.pattern.behavior.Condition getCondition() -> getCondition
    92:92:boolean match(com.quangph.pattern.behavior.Condition) -> match
    89:89:void setBehavior(com.quangph.pattern.behavior.Behavior) -> setBehavior
    88:88:void setCondition(com.quangph.pattern.behavior.Condition) -> setCondition
    96:96:boolean validRule(com.quangph.pattern.behavior.IRuleValid) -> validRule
com.quangph.pattern.behavior.BehaviorAgent$checkCondition$1 -> com.quangph.pattern.behavior.BehaviorAgent$checkCondition$1:
# {"id":"sourceFile","fileName":"BehaviorAgent.kt"}
    67:67:java.lang.Object invoke() -> invoke
    67:67:void invoke() -> invoke
com.quangph.pattern.behavior.Condition -> com.quangph.pattern.behavior.Condition:
# {"id":"sourceFile","fileName":"Condition.kt"}
    6:8:void <init>(java.lang.Object,java.lang.Long) -> <init>
    6:79:void <init>(java.lang.Object,java.lang.Long,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    37:38:com.quangph.pattern.behavior.Condition and(java.lang.Object) -> and
    47:54:boolean andCondition(com.quangph.pattern.behavior.IRuleValid) -> andCondition
    69:77:boolean compareTwoList(java.util.List,java.util.List) -> compareTwoList
    15:21:boolean equals(java.lang.Object) -> equals
    11:11:int hashCode() -> hashCode
    33:33:com.quangph.pattern.behavior.Condition inverse() -> inverse
    26:29:boolean match(com.quangph.pattern.behavior.IRuleValid) -> match
    42:43:com.quangph.pattern.behavior.Condition or(java.lang.Object) -> or
    58:65:boolean orCondition(com.quangph.pattern.behavior.IRuleValid) -> orCondition
com.quangph.pattern.behavior.Condition$compareTwoList$areNotEqual$1 -> com.quangph.pattern.behavior.Condition$compareTwoList$areNotEqual$1:
# {"id":"sourceFile","fileName":"Condition.kt"}
    75:75:java.lang.Boolean invoke(java.lang.Object) -> invoke
    75:75:java.lang.Object invoke(java.lang.Object) -> invoke
com.quangph.pattern.behavior.IRuleValid -> com.quangph.pattern.behavior.IRuleValid:
# {"id":"sourceFile","fileName":"Rule.kt"}
com.quangph.pattern.behavior.InverseCondition -> com.quangph.pattern.behavior.InverseCondition:
# {"id":"sourceFile","fileName":"Condition.kt"}
    82:82:void <init>(com.quangph.pattern.behavior.Condition) -> <init>
    89:91:boolean equals(java.lang.Object) -> equals
    85:85:int hashCode() -> hashCode
    99:99:com.quangph.pattern.behavior.Condition inverse() -> inverse
    95:95:boolean match(com.quangph.pattern.behavior.IRuleValid) -> match
com.quangph.pattern.behavior.RuleFactory -> com.quangph.pattern.behavior.RuleFactory:
# {"id":"sourceFile","fileName":"RuleFactory.kt"}
    6:6:void <init>() -> <init>
com.quangph.pattern.node.LineNode -> com.quangph.pattern.node.LineNode:
    10:11:void <init>(java.lang.Object) -> <init>
    15:22:void addChild(com.quangph.pattern.node.INode) -> addChild
    25:28:com.quangph.pattern.node.LineNode getLatest() -> getLatest
    33:36:com.quangph.pattern.node.LineNode getNext() -> getNext
com.quangph.pattern.node.SimpleNode -> com.quangph.pattern.node.SimpleNode:
    15:18:void <init>() -> <init>
    15:22:void <init>(java.lang.Object) -> <init>
    26:28:void addChild(com.quangph.pattern.node.INode) -> addChild
    87:87:int getChildCount() -> getChildCount
    72:72:java.util.List getChildren() -> getChildren
    82:82:java.lang.Object getData() -> getData
    77:77:com.quangph.pattern.node.INode getParent() -> getParent
    101:116:java.util.List getPathToRoot(com.quangph.pattern.spec.ISpecification) -> getPathToRoot
    92:95:com.quangph.pattern.node.INode getRoot() -> getRoot
    32:38:void removeChild(com.quangph.pattern.node.INode,boolean) -> removeChild
    42:63:void removeNode(com.quangph.pattern.node.INode,boolean) -> removeNode
    67:68:void setParent(com.quangph.pattern.node.INode) -> setParent
com.quangph.pattern.node.SimpleNode$1 -> com.quangph.pattern.node.SimpleNode$1:
    43:43:void <init>(com.quangph.pattern.node.SimpleNode,com.quangph.pattern.node.INode) -> <init>
    43:43:boolean isSatisfiedBy(java.lang.Object) -> isSatisfiedBy
    46:46:boolean isSatisfiedBy(com.quangph.pattern.node.INode) -> isSatisfiedBy
com.quangph.pattern.node.TreeBuilder -> com.quangph.pattern.node.TreeBuilder:
    18:22:void <init>(com.quangph.pattern.node.TreeBuilder$IChildrenCreator) -> <init>
    25:36:void createTree(com.quangph.pattern.node.INode) -> createTree
com.quangph.pattern.node.finder.BreadthFinder -> com.quangph.pattern.node.finder.BreadthFinder:
    11:13:void <init>() -> <init>
    17:36:com.quangph.pattern.node.INode findFirst(com.quangph.pattern.spec.ISpecification,com.quangph.pattern.node.INode) -> findFirst
    41:51:java.util.List findPath(com.quangph.pattern.spec.ISpecification,com.quangph.pattern.node.INode) -> findPath
com.quangph.pattern.node.finder.BreadthFinder$1 -> com.quangph.pattern.node.finder.BreadthFinder$1:
    45:45:void <init>(com.quangph.pattern.node.finder.BreadthFinder,com.quangph.pattern.node.INode) -> <init>
    45:45:boolean isSatisfiedBy(java.lang.Object) -> isSatisfiedBy
    48:48:boolean isSatisfiedBy(com.quangph.pattern.node.INode) -> isSatisfiedBy
com.quangph.pattern.node.finder.DepthFinder -> com.quangph.pattern.node.finder.DepthFinder:
    9:9:void <init>() -> <init>
    12:26:com.quangph.pattern.node.INode findFirst(com.quangph.pattern.spec.ISpecification,com.quangph.pattern.node.INode) -> findFirst
    31:41:java.util.List findPath(com.quangph.pattern.spec.ISpecification,com.quangph.pattern.node.INode) -> findPath
com.quangph.pattern.node.finder.DepthFinder$1 -> com.quangph.pattern.node.finder.DepthFinder$1:
    35:35:void <init>(com.quangph.pattern.node.finder.DepthFinder,com.quangph.pattern.node.INode) -> <init>
    35:35:boolean isSatisfiedBy(java.lang.Object) -> isSatisfiedBy
    38:38:boolean isSatisfiedBy(com.quangph.pattern.node.INode) -> isSatisfiedBy
com.quangph.pattern.node.traverse.BaseTraverser -> com.quangph.pattern.node.traverse.BaseTraverser:
    6:6:void <init>() -> <init>
    17:17:java.lang.Object getChildAt(java.lang.Object,int) -> getChildAt
    13:13:int getChildCount(java.lang.Object) -> getChildCount
com.quangph.pattern.node.traverse.BreadthTraverser -> com.quangph.pattern.node.traverse.BreadthTraverser:
    14:20:void <init>(com.quangph.pattern.node.traverse.INodeVisitor) -> <init>
    24:44:boolean traverse(com.quangph.pattern.node.INode) -> traverse
com.quangph.pattern.node.traverse.DepthTraverser -> com.quangph.pattern.node.traverse.DepthTraverser:
    13:15:void <init>(com.quangph.pattern.node.traverse.INodeVisitor) -> <init>
    19:36:boolean traverse(com.quangph.pattern.node.INode) -> traverse
com.quangph.pattern.spec.AbstractSpecification -> com.quangph.pattern.spec.AbstractSpecification:
    6:6:void <init>() -> <init>
    10:10:com.quangph.pattern.spec.ICompoundSpec and(com.quangph.pattern.spec.ICompoundSpec) -> and
    20:20:com.quangph.pattern.spec.ICompoundSpec not(com.quangph.pattern.spec.ICompoundSpec) -> not
    15:15:com.quangph.pattern.spec.ICompoundSpec or(com.quangph.pattern.spec.ICompoundSpec) -> or
com.quangph.pattern.spec.AndSpecification -> com.quangph.pattern.spec.AndSpecification:
    11:14:void <init>(com.quangph.pattern.spec.ISpecification,com.quangph.pattern.spec.ISpecification) -> <init>
    18:18:boolean isSatisfiedBy(java.lang.Object) -> isSatisfiedBy
com.quangph.pattern.spec.NotSpecification -> com.quangph.pattern.spec.NotSpecification:
    9:11:void <init>(com.quangph.pattern.spec.ISpecification) -> <init>
    15:15:boolean isSatisfiedBy(java.lang.Object) -> isSatisfiedBy
com.quangph.pattern.spec.OrSpecification -> com.quangph.pattern.spec.OrSpecification:
    10:13:void <init>(com.quangph.pattern.spec.ISpecification,com.quangph.pattern.spec.ISpecification) -> <init>
    17:17:boolean isSatisfiedBy(java.lang.Object) -> isSatisfiedBy
com.quangph.socket.IOnSocketCallback -> com.quangph.socket.IOnSocketCallback:
# {"id":"sourceFile","fileName":"IOnSocketCallback.kt"}
com.quangph.socket.ISocket -> com.quangph.socket.ISocket:
# {"id":"sourceFile","fileName":"ISocket.kt"}
com.quangph.socket.ISocketMessageFactory -> com.quangph.socket.ISocketMessageFactory:
# {"id":"sourceFile","fileName":"ISocketMessageFactory.kt"}
com.quangph.socket.ISocketPublisher -> com.quangph.socket.ISocketPublisher:
# {"id":"sourceFile","fileName":"ISocketPublisher.kt"}
com.quangph.socket.SimpleSocket -> com.quangph.socket.SimpleSocket:
# {"id":"sourceFile","fileName":"SimpleSocket.kt"}
    3:3:void <init>() -> <init>
    21:24:void disconnect() -> disconnect
    4:4:com.quangph.socket.ISocketMessageFactory getMsgFactory() -> getMsgFactory
    5:5:com.quangph.socket.ISocketPublisher getMsgPublisher() -> getMsgPublisher
    6:6:com.quangph.socket.IOnSocketCallback getMsgSocketCallback() -> getMsgSocketCallback
    9:10:void setMessageFactory(com.quangph.socket.ISocketMessageFactory) -> setMessageFactory
    4:4:void setMsgFactory(com.quangph.socket.ISocketMessageFactory) -> setMsgFactory
    5:5:void setMsgPublisher(com.quangph.socket.ISocketPublisher) -> setMsgPublisher
    6:6:void setMsgSocketCallback(com.quangph.socket.IOnSocketCallback) -> setMsgSocketCallback
    13:14:void setPublisher(com.quangph.socket.ISocketPublisher) -> setPublisher
    17:18:void setSocketCallback(com.quangph.socket.IOnSocketCallback) -> setSocketCallback
com.quangph.socket.SocketMessage -> com.quangph.socket.SocketMessage:
# {"id":"sourceFile","fileName":"SocketMessage.kt"}
    3:3:void <init>() -> <init>
    4:4:java.lang.String getSocketMessageType() -> getSocketMessageType
    4:4:void setSocketMessageType(java.lang.String) -> setSocketMessageType
com.quangph.sync.IBindCallback -> com.quangph.sync.IBindCallback:
# {"id":"sourceFile","fileName":"ISyncController.kt"}
com.quangph.sync.ISyncController -> com.quangph.sync.ISyncController:
# {"id":"sourceFile","fileName":"ISyncController.kt"}
com.quangph.sync.SyncService -> com.quangph.sync.SyncService:
# {"id":"sourceFile","fileName":"SyncService.kt"}
    22:22:java.util.HashMap access$getProgressMap$p(com.quangph.sync.SyncService) -> <init>
    22:22:void <init>():22 -> <init>
    28:29:void <init>() -> <init>
    22:22:java.util.HashMap access$getProgressMap$p(com.quangph.sync.SyncService) -> <init>
    22:22:void <init>():22 -> <init>
    99:110:void createNotificationChannel() -> createNotificationChannel
    88:95:android.app.Notification createSyncNotification(java.lang.String) -> createSyncNotification
    132:160:void finishIfDone() -> finishIfDone
    44:44:android.os.IBinder onBind(android.content.Intent) -> onBind
    33:41:void onCreate() -> onCreate
    53:158:void onDestroy() -> onDestroy
    61:73:void onEvent(com.quangph.eventbus.IEvent) -> onEvent
    77:77:void onFinishAll() -> onFinishAll
    48:49:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    79:79:java.lang.String onSyncProgressTitle(java.lang.String,float) -> onSyncProgressTitle
    83:85:void startSyncService() -> startSyncService
    125:129:void submitSyncTask(java.util.Map) -> submitSyncTask
    118:122:void updateNotification(java.lang.String,float) -> updateNotification
    113:115:void updateProgress(java.lang.String,float) -> updateProgress
    146:149:void updateSyncTime(long) -> updateSyncTime
com.quangph.sync.SyncService$Companion -> com.quangph.sync.SyncService$Companion:
# {"id":"sourceFile","fileName":"SyncService.kt"}
    23:23:void <init>() -> <init>
com.quangph.sync.SyncService$SyncBinder -> com.quangph.sync.SyncService$SyncBinder:
# {"id":"sourceFile","fileName":"SyncService.kt"}
    152:152:void <init>(com.quangph.sync.SyncService) -> <init>
com.quangph.sync.SyncServiceConfig -> com.quangph.sync.SyncServiceConfig:
# {"id":"sourceFile","fileName":"SyncServiceConfig.kt"}
com.quangph.sync.SyncSharedPreference -> com.quangph.sync.SyncSharedPreference:
# {"id":"sourceFile","fileName":"SyncSharedPreference.kt"}
    9:9:void <init>() -> <init>
    46:48:android.content.SharedPreferences$Editor getEditor(android.content.Context) -> getEditor
    16:18:long getLatestSyncTime(android.content.Context) -> getLatestSyncTime
    52:52:java.lang.String getProgressKey(java.lang.String) -> getProgressKey
    34:35:void setLatestSyncTime(android.content.Context,long) -> setLatestSyncTime
    38:43:void setSyncProgress(android.content.Context,java.util.Map) -> setSyncProgress
com.quangph.sync.core.SyncEvent -> com.quangph.sync.core.SyncEvent:
# {"id":"sourceFile","fileName":"SyncEvent.kt"}
    6:17:void <init>() -> <init>
    17:17:java.lang.String getActionId() -> getActionId
    16:16:java.lang.String getActionType() -> getActionType
    18:18:java.lang.Object getPayload() -> getPayload
    15:15:java.lang.String getType() -> getType
    17:17:void setActionId(java.lang.String) -> setActionId
    16:16:void setActionType(java.lang.String) -> setActionType
    18:18:void setPayload(java.lang.Object) -> setPayload
    15:15:void setType(java.lang.String) -> setType
com.quangph.sync.core.SyncEvent$Companion -> com.quangph.sync.core.SyncEvent$Companion:
# {"id":"sourceFile","fileName":"SyncEvent.kt"}
    7:7:void <init>() -> <init>
com.quangph.sync.core.SyncManager -> com.quangph.sync.core.SyncManager:
# {"id":"sourceFile","fileName":"SyncManager.kt"}
    17:20:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    13:13:java.util.concurrent.ConcurrentHashMap access$getSyncResultCache$p() -> access$getSyncResultCache$p
    13:13:boolean access$isFinishedAll(com.quangph.sync.core.SyncManager) -> access$isFinishedAll
    13:13:void access$removeSyncActionIfNeed(com.quangph.sync.core.SyncManager,com.quangph.sync.core.action.SyncAction) -> access$removeSyncActionIfNeed
    13:13:void access$updateError(com.quangph.sync.core.SyncManager,com.quangph.sync.core.action.SyncAction,java.lang.Throwable) -> access$updateError
    13:13:void access$updateProgress(com.quangph.sync.core.SyncManager,com.quangph.sync.core.action.SyncAction,java.lang.Object) -> access$updateProgress
    13:13:void access$updateResult(com.quangph.sync.core.SyncManager,com.quangph.sync.core.action.SyncAction,java.lang.Object) -> access$updateResult
    23:39:void initSync(java.lang.String) -> initSync
    90:90:boolean isFinishedAll() -> isFinishedAll
    82:87:void removeSyncActionIfNeed(com.quangph.sync.core.action.SyncAction) -> removeSyncActionIfNeed
    42:43:void submit(com.quangph.sync.core.action.SyncAction) -> submit
    46:67:void submit(java.lang.String,com.quangph.sync.core.action.SyncAction) -> submit
    74:75:void updateError(com.quangph.sync.core.action.SyncAction,java.lang.Throwable) -> updateError
    78:79:void updateProgress(com.quangph.sync.core.action.SyncAction,java.lang.Object) -> updateProgress
    70:71:void updateResult(com.quangph.sync.core.action.SyncAction,java.lang.Object) -> updateResult
com.quangph.sync.core.SyncManager$WrapSyncCallback -> com.quangph.sync.core.SyncManager$WrapSyncCallback:
# {"id":"sourceFile","fileName":"SyncManager.kt"}
    94:94:void <init>(com.quangph.sync.core.emitter.IEmitter) -> <init>
    116:129:void onError(com.quangph.sync.core.action.SyncAction,java.lang.Throwable) -> onError
    132:142:void onPublishProgress(com.quangph.sync.core.action.SyncAction,java.lang.Object) -> onPublishProgress
    96:99:void onStart(com.quangph.sync.core.action.SyncAction) -> onStart
    102:113:void onSuccess(com.quangph.sync.core.action.SyncAction,java.lang.Object) -> onSuccess
com.quangph.sync.core.SyncResult -> com.quangph.sync.core.SyncResult:
# {"id":"sourceFile","fileName":"SyncResult.kt"}
    6:6:void <init>() -> <init>
    7:7:java.lang.Object getCurrentProgress() -> getCurrentProgress
    7:7:void setCurrentProgress(java.lang.Object) -> setCurrentProgress
    8:8:void setData(java.lang.Object) -> setData
    9:9:void setError(java.lang.Throwable) -> setError
com.quangph.sync.core.SyncResultManager -> com.quangph.sync.core.SyncResultManager:
# {"id":"sourceFile","fileName":"SyncResultManager.kt"}
    12:16:void <init>() -> <init>
    23:28:boolean addSyncResult(java.lang.String) -> addSyncResult
    19:19:float getProgress() -> getProgress
    58:58:boolean isEmpty() -> isEmpty
    54:55:void remove(java.lang.String) -> remove
    40:44:void updateError(java.lang.String,java.lang.Throwable) -> updateError
    47:51:void updateProgress(java.lang.String,java.lang.Object) -> updateProgress
    33:37:void updateResult(java.lang.String,java.lang.Object) -> updateResult
com.quangph.sync.core.action.SyncAction -> com.quangph.sync.core.action.SyncAction:
# {"id":"sourceFile","fileName":"SyncAction.kt"}
    6:6:void <init>() -> <init>
    22:22:java.lang.String getId() -> getId
    18:18:int getRetryCount() -> getRetryCount
    15:15:void onError(java.lang.Throwable) -> onError
    13:13:void onStart() -> onStart
    14:14:void onSuccess(java.lang.Object) -> onSuccess
    8:8:void setCallback(com.quangph.sync.core.action.SyncAction$SyncCallback) -> setCallback
    26:44:void sync() -> sync
com.quangph.sync.core.action.SyncAction$SyncCallback -> com.quangph.sync.core.action.SyncAction$SyncCallback:
# {"id":"sourceFile","fileName":"SyncAction.kt"}
com.quangph.sync.core.emitter.ErrorEvent -> com.quangph.sync.core.emitter.ErrorEvent:
# {"id":"sourceFile","fileName":"PostEvent.kt"}
    11:11:void <init>(java.lang.String,java.lang.String,java.lang.Throwable) -> <init>
    11:11:java.lang.Throwable getT() -> getT
    11:11:java.lang.String getType() -> getType
com.quangph.sync.core.emitter.FinishAllEvent -> com.quangph.sync.core.emitter.FinishAllEvent:
# {"id":"sourceFile","fileName":"PostEvent.kt"}
    12:12:void <init>() -> <init>
com.quangph.sync.core.emitter.HandlerEmitter -> com.quangph.sync.core.emitter.HandlerEmitter:
# {"id":"sourceFile","fileName":"HandlerEmitter.kt"}
    12:14:void <init>() -> <init>
    18:19:void emit(java.lang.Object) -> emit
com.quangph.sync.core.emitter.HandlerEmitter$EventHandler -> com.quangph.sync.core.emitter.HandlerEmitter$EventHandler:
# {"id":"sourceFile","fileName":"HandlerEmitter.kt"}
    22:22:void <init>(android.os.Looper) -> <init>
    25:41:void handleMessage(android.os.Message) -> handleMessage
com.quangph.sync.core.emitter.IEmitter -> com.quangph.sync.core.emitter.IEmitter:
# {"id":"sourceFile","fileName":"IEmitter.kt"}
com.quangph.sync.core.emitter.ProgressEvent -> com.quangph.sync.core.emitter.ProgressEvent:
# {"id":"sourceFile","fileName":"PostEvent.kt"}
    10:10:void <init>(java.lang.String,java.lang.String,java.lang.Object) -> <init>
    10:10:java.lang.Object getProgress() -> getProgress
    10:10:java.lang.String getType() -> getType
com.quangph.sync.core.enqueue.ISyncEnqueue -> com.quangph.sync.core.enqueue.ISyncEnqueue:
# {"id":"sourceFile","fileName":"ISyncEnqueue.kt"}
com.quangph.sync.core.enqueue.SerialSyncEnqueue -> com.quangph.sync.core.enqueue.SerialSyncEnqueue:
# {"id":"sourceFile","fileName":"SerialSyncEnqueue.kt"}
    9:11:void <init>() -> <init>
    14:17:void enqueue(com.quangph.sync.core.action.SyncAction) -> enqueue
    15:16:void enqueue$lambda$0(com.quangph.sync.core.action.SyncAction) -> enqueue$lambda$0
com.quangph.sync.core.progresscalculator.DefaultProgressCalculator -> com.quangph.sync.core.progresscalculator.DefaultProgressCalculator:
# {"id":"sourceFile","fileName":"DefaultProgressCalculator.kt"}
    9:9:void <init>() -> <init>
    14:29:float calculateProgress(java.util.Map) -> calculateProgress
com.quangph.sync.core.progresscalculator.IProgressCalculator -> com.quangph.sync.core.progresscalculator.IProgressCalculator:
# {"id":"sourceFile","fileName":"IProgressCalculator.kt"}
